{
	"id": "b5e19442827989879d3694705707fb51",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"token.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.19;\n\nimport \"./ERC20.sol\";\nimport \"./ERC20Burnable.sol\";\nimport \"./ERC20Permit.sol\";\nimport \"./Ownable.sol\";\n\ncontract Phoenix is ERC20, ERC20Burnable, ERC20Permit, Ownable {\n    constructor() ERC20(\"Phoenix\", \"PHNX\") ERC20Permit(\"Phoenix\") {\n        _mint(msg.sender, 100000000000000 * 10 ** decimals());\n    }\n}\n"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"./ERC20.sol\";\nimport \"./ECDSA.sol\";\nimport \"./EIP712.sol\";\nimport \"./Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\n            \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n        );\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                _PERMIT_TYPEHASH,\n                owner,\n                spender,\n                value,\n                _useNonce(owner),\n                deadline\n            )\n        );\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(\n        address owner\n    ) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(\n        address owner\n    ) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"
			},
			"ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(\n        address account\n    ) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(\n        address owner,\n        address spender\n    ) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(\n        address spender,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    ) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(\n        address spender,\n        uint256 subtractedValue\n    ) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(\n            currentAllowance >= subtractedValue,\n            \"ERC20: decreased allowance below zero\"\n        );\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(\n            fromBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(\n                currentAllowance >= amount,\n                \"ERC20: insufficient allowance\"\n            );\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"./ShortStrings.sol\";\nimport \"./IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    _TYPE_HASH,\n                    _hashedName,\n                    _hashedVersion,\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(\n        bytes32 structHash\n    ) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"
			},
			"ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs &\n            bytes32(\n                0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            );\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (\n            uint256(s) >\n            0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\n        ) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(\n        bytes32 hash\n    ) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(\n        bytes memory s\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encodePacked(\n                    \"\\x19Ethereum Signed Message:\\n\",\n                    Strings.toString(s.length),\n                    s\n                )\n            );\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(\n        bytes32 domainSeparator,\n        bytes32 structHash\n    ) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes memory data\n    ) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"
			},
			"IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Math.sol\";\nimport \"./SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return\n            string(\n                abi.encodePacked(\n                    value < 0 ? \"-\" : \"\",\n                    toString(SignedMath.abs(value))\n                )\n            );\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(\n        string memory a,\n        string memory b\n    ) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d467e5c7cb923407cb1b474c1f7c81a5d55943f980dbfcce25881be83c38be964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d467e5c7cb923407cb1b474c1f7c81a5d55943f980dbfcce25881be83c38be964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D CHAINID PUSH31 0x5C7CB923407CB1B474C1F7C81A5D55943F980DBFCCE25881BE83C38BE96473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "424:971:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d467e5c7cb923407cb1b474c1f7c81a5d55943f980dbfcce25881be83c38be964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D CHAINID PUSH31 0x5C7CB923407CB1B474C1F7C81A5D55943F980DBFCCE25881BE83C38BE96473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "424:971:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d467e5c7cb923407cb1b474c1f7c81a5d55943f980dbfcce25881be83c38be964736f6c63430008130033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ECDSA.sol\":368:9577  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ECDSA.sol\":368:9577  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ef86855390a8a9149ca568895014af2680711a490174e16338e6cb7c0bfc82564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ef86855390a8a9149ca568895014af2680711a490174e16338e6cb7c0bfc82564736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xF8 PUSH9 0x55390A8A9149CA5688 SWAP6 ADD 0x4A CALLCODE PUSH9 0x711A490174E16338E PUSH13 0xB7C0BFC82564736F6C63430008 SGT STOP CALLER ",
							"sourceMap": "368:9209:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;368:9209:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ef86855390a8a9149ca568895014af2680711a490174e16338e6cb7c0bfc82564736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xF8 PUSH9 0x55390A8A9149CA5688 SWAP6 ADD 0x4A CALLCODE PUSH9 0x711A490174E16338E PUSH13 0xB7C0BFC82564736F6C63430008 SGT STOP CALLER ",
							"sourceMap": "368:9209:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 9577,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ef86855390a8a9149ca568895014af2680711a490174e16338e6cb7c0bfc82564736f6c63430008130033",
									".code": [
										{
											"begin": 368,
											"end": 9577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 368,
											"end": 9577,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ECDSA.sol\":{\"keccak256\":\"0x905addb1f0b1b298fd10ae2f783e8ecb82b1a64407ed5817cb80a5ace9ac241d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efe506fb51c94496a7c280ffcd2d9d77b3ace39d219a25f9c0dc126b067f7c9b\",\"dweb:/ipfs/QmaedTwLtFhDdkwB67afYUAqcrdo3FZXqvyXeJW1bhAoe2\"]},\"Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"Strings.sol\":{\"keccak256\":\"0x3cfda6d953ac3159aeeb7542714986ecc71d9a8075300c47554e9318f89e5eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d0cf8179e46c82693c3a600e964854ace52a8446349106ff77342720a2d596\",\"dweb:/ipfs/QmZ1rLCSYgbbozfsdbyhGALbNCJBgvy2MWABHTqyhAA2Fj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {EIP-5267}. _Available since v4.9._"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ECDSA.sol\":{\"keccak256\":\"0x905addb1f0b1b298fd10ae2f783e8ecb82b1a64407ed5817cb80a5ace9ac241d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efe506fb51c94496a7c280ffcd2d9d77b3ace39d219a25f9c0dc126b067f7c9b\",\"dweb:/ipfs/QmaedTwLtFhDdkwB67afYUAqcrdo3FZXqvyXeJW1bhAoe2\"]},\"EIP712.sol\":{\"keccak256\":\"0x9d38cb4e0e450c2d521e128c61446f8c19109707b2f3c697a8570ed9a750b340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5284e2ca972fcf8ac51fba236bd23f9bc429206c474ad8b7c0e7da160e4dd6a7\",\"dweb:/ipfs/QmbSWGLJvnfufHZ5BcoyBNxnKhPZc3LssqqNbKTLiEA7Rt\"]},\"IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"Strings.sol\":{\"keccak256\":\"0x3cfda6d953ac3159aeeb7542714986ecc71d9a8075300c47554e9318f89e5eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d0cf8179e46c82693c3a600e964854ace52a8446349106ff77342720a2d596\",\"dweb:/ipfs/QmZ1rLCSYgbbozfsdbyhGALbNCJBgvy2MWABHTqyhAA2Fj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 494,
								"contract": "EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 496,
								"contract": "EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1511:13241  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1959:2072  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":2025:2030  _name */\n  0x03\n    /* \"ERC20.sol\":2025:2038  _name = name_ */\n  tag_6\n    /* \"ERC20.sol\":2033:2038  name_ */\n  dup4\n    /* \"ERC20.sol\":2025:2030  _name */\n  dup3\n    /* \"ERC20.sol\":2025:2038  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20.sol\":2048:2055  _symbol */\n  0x04\n    /* \"ERC20.sol\":2048:2065  _symbol = symbol_ */\n  tag_8\n    /* \"ERC20.sol\":2058:2065  symbol_ */\n  dup3\n    /* \"ERC20.sol\":2048:2055  _symbol */\n  dup3\n    /* \"ERC20.sol\":2048:2065  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":1959:2072  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1511:13241  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"ERC20.sol\":1511:13241  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1511:13241  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2137:2235  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"ERC20.sol\":3234:3340  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"ERC20.sol\":3321:3333  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3234:3340  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"ERC20.sol\":3234:3340  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"ERC20.sol\":5262:5548  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"ERC20.sol\":3083:3174  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20.sol\":3165:3167  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"ERC20.sol\":3083:3174  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"ERC20.sol\":5943:6199  function increaseAllowance(... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"ERC20.sol\":3398:3537  function balanceOf(... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3512:3530  _balances[account] */\n      and\n        /* \"ERC20.sol\":3486:3493  uint256 */\n      0x00\n        /* \"ERC20.sol\":3512:3530  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3398:3537  function balanceOf(... */\n      jump\n        /* \"ERC20.sol\":2348:2450  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"ERC20.sol\":6686:7169  function decreaseAllowance(... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"ERC20.sol\":3733:3944  function transfer(... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"ERC20.sol\":4002:4173  function allowance(... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"ERC20.sol\":2137:2235  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2191:2204  string memory */\n      0x60\n        /* \"ERC20.sol\":2223:2228  _name */\n      0x03\n        /* \"ERC20.sol\":2216:2228  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2137:2235  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n    tag_22:\n        /* \"ERC20.sol\":4586:4590  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":4640:4672  _approve(owner, spender, amount) */\n      tag_73\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC20.sol\":4656:4663  spender */\n      dup6\n        /* \"ERC20.sol\":4665:4671  amount */\n      dup6\n        /* \"ERC20.sol\":4640:4648  _approve */\n      tag_74\n        /* \"ERC20.sol\":4640:4672  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":4689:4693  true */\n      0x01\n        /* \"ERC20.sol\":4682:4693  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5262:5548  function transferFrom(... */\n    tag_32:\n        /* \"ERC20.sol\":5389:5393  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":5445:5483  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"ERC20.sol\":5461:5465  from */\n      dup6\n        /* \"Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"ERC20.sol\":5476:5482  amount */\n      dup6\n        /* \"ERC20.sol\":5445:5460  _spendAllowance */\n      tag_79\n        /* \"ERC20.sol\":5445:5483  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"ERC20.sol\":5493:5520  _transfer(from, to, amount) */\n      tag_80\n        /* \"ERC20.sol\":5503:5507  from */\n      dup6\n        /* \"ERC20.sol\":5509:5511  to */\n      dup6\n        /* \"ERC20.sol\":5513:5519  amount */\n      dup6\n        /* \"ERC20.sol\":5493:5502  _transfer */\n      tag_81\n        /* \"ERC20.sol\":5493:5520  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"ERC20.sol\":5537:5541  true */\n      0x01\n      swap5\n        /* \"ERC20.sol\":5262:5548  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5943:6199  function increaseAllowance(... */\n    tag_40:\n        /* \"ERC20.sol\":6053:6057  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":6107:6171  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC20.sol\":6123:6130  spender */\n      dup6\n        /* \"ERC20.sol\":6160:6170  addedValue */\n      dup6\n        /* \"ERC20.sol\":6132:6157  allowance(owner, spender) */\n      tag_86\n        /* \"Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"ERC20.sol\":6123:6130  spender */\n      dup4\n        /* \"ERC20.sol\":6132:6141  allowance */\n      tag_61\n        /* \"ERC20.sol\":6132:6157  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"ERC20.sol\":6132:6170  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"ERC20.sol\":6107:6115  _approve */\n      tag_74\n        /* \"ERC20.sol\":6107:6171  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":2348:2450  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20.sol\":2404:2417  string memory */\n      0x60\n        /* \"ERC20.sol\":2436:2443  _symbol */\n      0x04\n        /* \"ERC20.sol\":2429:2443  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"ERC20.sol\":6686:7169  function decreaseAllowance(... */\n    tag_52:\n        /* \"ERC20.sol\":6801:6805  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":6801:6805  bool */\n      dup2\n        /* \"ERC20.sol\":6882:6907  allowance(owner, spender) */\n      tag_98\n        /* \"Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"ERC20.sol\":6899:6906  spender */\n      dup7\n        /* \"ERC20.sol\":6882:6891  allowance */\n      tag_61\n        /* \"ERC20.sol\":6882:6907  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":6855:6907  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":6958:6973  subtractedValue */\n      dup4\n        /* \"ERC20.sol\":6938:6954  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6938:6973  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":6917:7036  require(... */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"ERC20.sol\":6917:7036  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"ERC20.sol\":6917:7036  require(... */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"ERC20.sol\":7070:7130  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"ERC20.sol\":7079:7084  owner */\n      dup3\n        /* \"ERC20.sol\":7086:7093  spender */\n      dup7\n        /* \"ERC20.sol\":7114:7129  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":7095:7111  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":7095:7129  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":7070:7078  _approve */\n      tag_74\n        /* \"ERC20.sol\":7070:7130  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":3733:3944  function transfer(... */\n    tag_56:\n        /* \"ERC20.sol\":3834:3838  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":3888:3916  _transfer(owner, to, amount) */\n      tag_73\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC20.sol\":3905:3907  to */\n      dup6\n        /* \"ERC20.sol\":3909:3915  amount */\n      dup6\n        /* \"ERC20.sol\":3888:3897  _transfer */\n      tag_81\n        /* \"ERC20.sol\":3888:3916  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":4002:4173  function allowance(... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4139:4157  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4113:4120  uint256 */\n      0x00\n        /* \"ERC20.sol\":4139:4157  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4139:4150  _allowances */\n      0x01\n        /* \"ERC20.sol\":4139:4157  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4139:4166  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":4002:4173  function allowance(... */\n      jump\t// out\n        /* \"ERC20.sol\":10688:11058  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10819:10838  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10897:10918  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10968:10986  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":10968:10979  _allowances */\n      0x01\n        /* \"ERC20.sol\":10968:10986  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":10968:10995  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":10968:11004  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":11019:11051  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20.sol\":11019:11051  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"ERC20.sol\":11019:11051  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10688:11058  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11339:11826  function _spendAllowance(... */\n    tag_79:\n        /* \"ERC20.sol\":11469:11493  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":11496:11521  allowance(owner, spender) */\n      tag_117\n        /* \"ERC20.sol\":11506:11511  owner */\n      dup5\n        /* \"ERC20.sol\":11513:11520  spender */\n      dup5\n        /* \"ERC20.sol\":11496:11505  allowance */\n      tag_61\n        /* \"ERC20.sol\":11496:11521  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"ERC20.sol\":11469:11521  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC20.sol\":11535:11551  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":11535:11572  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20.sol\":11531:11820  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"ERC20.sol\":11633:11639  amount */\n      dup2\n        /* \"ERC20.sol\":11613:11629  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":11613:11639  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":11588:11702  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"ERC20.sol\":11588:11702  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"ERC20.sol\":11588:11702  require(... */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"ERC20.sol\":11588:11702  require(... */\n    tag_119:\n        /* \"ERC20.sol\":11744:11795  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"ERC20.sol\":11753:11758  owner */\n      dup5\n        /* \"ERC20.sol\":11760:11767  spender */\n      dup5\n        /* \"ERC20.sol\":11788:11794  amount */\n      dup5\n        /* \"ERC20.sol\":11769:11785  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":11769:11794  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":11744:11752  _approve */\n      tag_74\n        /* \"ERC20.sol\":11744:11795  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"ERC20.sol\":11459:11826  {... */\n      pop\n        /* \"ERC20.sol\":11339:11826  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7623:8475  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7749:7767  from != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7827:7843  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7965:7980  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":7943:7962  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":7965:7980  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":8011:8032  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":7990:8096  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"ERC20.sol\":7990:8096  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"ERC20.sol\":7990:8096  require(... */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"ERC20.sol\":7990:8096  require(... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8130:8145  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"ERC20.sol\":8130:8139  _balances */\n      0x00\n        /* \"ERC20.sol\":8130:8145  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":8148:8168  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"ERC20.sol\":8130:8168  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20.sol\":8345:8358  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"ERC20.sol\":8345:8368  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"ERC20.sol\":8394:8420  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"ERC20.sol\":8345:8358  _balances[to] */\n      swap1\n      swap3\n        /* \"ERC20.sol\":8394:8420  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"ERC20.sol\":8394:8420  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":8431:8468  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"ERC20.sol\":12410:12531  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa26469706673582212201700341eac77c0f8631423ded334814da820467784aa037681b844a480a0dcc164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_710": {
									"entryPoint": null,
									"id": 710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:18",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:18"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:18"
															},
															"nodeType": "YulIf",
															"src": "220:55:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:18",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:18"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:18"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:18"
															},
															"nodeType": "YulIf",
															"src": "353:36:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:18"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:18"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:18",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:18"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:18"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:18",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:18"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:18"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:18"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:18"
															},
															"nodeType": "YulIf",
															"src": "536:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:18",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:18"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:18"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:18"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:18"
															},
															"nodeType": "YulIf",
															"src": "698:53:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:18"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:18"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:18"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:18"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:18"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:18"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:18",
																"statements": []
															},
															"src": "779:133:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:18"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:18"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:18",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:18",
														"type": ""
													}
												],
												"src": "146:840:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:18"
															},
															"nodeType": "YulIf",
															"src": "1119:52:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:18",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:18"
															},
															"nodeType": "YulIf",
															"src": "1256:34:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:18"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:18"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:18"
															},
															"nodeType": "YulIf",
															"src": "1429:36:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:18"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:18",
														"type": ""
													}
												],
												"src": "991:562:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:18"
															},
															"nodeType": "YulIf",
															"src": "1701:61:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:18"
															},
															"nodeType": "YulIf",
															"src": "1771:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:18",
														"type": ""
													}
												],
												"src": "1558:380:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:18",
														"type": ""
													}
												],
												"src": "1943:121:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:18",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:18",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:18"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:18"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:18",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:18"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:18"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:18"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:18"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:18"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:18"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:18"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:18"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:18",
																			"statements": []
																		},
																		"src": "2516:82:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:18"
															},
															"nodeType": "YulIf",
															"src": "2160:448:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:18",
														"type": ""
													}
												],
												"src": "2069:545:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:18",
														"type": ""
													}
												],
												"src": "2619:166:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:18",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:18"
															},
															"nodeType": "YulIf",
															"src": "2929:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:18"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:18",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:18",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:18"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:18"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:18"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:18"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:18"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:18"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:18",
																					"statements": []
																				},
																				"src": "3376:236:18"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:18",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:18"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:18"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:18"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:18"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:18"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:18"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:18"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:18"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:18"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:18",
														"type": ""
													}
												],
												"src": "2790:1352:18"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea26469706673582212201700341eac77c0f8631423ded334814da820467784aa037681b844a480a0dcc164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR STOP CALLVALUE 0x1E 0xAC PUSH24 0xC0F8631423DED334814DA820467784AA037681B844A480A0 0xDC 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1511:11730:4:-:0;;;1959:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2025:5;:13;2033:5;2025;:13;:::i;:::-;-1:-1:-1;2048:7:4;:17;2058:7;2048;:17;:::i;:::-;;1959:113;;1511:11730;;14:127:18;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:18;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:18;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:18:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:18;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:18;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:18;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:18;;;3992:26;3943:89;-1:-1:-1;;2747:1:18;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:18;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:18;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:18;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:18:o;:::-;1511:11730:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1251": {
									"entryPoint": null,
									"id": 1251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1186": {
									"entryPoint": 858,
									"id": 1186,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1240": {
									"entryPoint": null,
									"id": 1240,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1229": {
									"entryPoint": 1150,
									"id": 1229,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1012": {
									"entryPoint": 1272,
									"id": 1012,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_807": {
									"entryPoint": 815,
									"id": 807,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_832": {
									"entryPoint": 562,
									"id": 832,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_764": {
									"entryPoint": null,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_935": {
									"entryPoint": 673,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_894": {
									"entryPoint": 624,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_720": {
									"entryPoint": 416,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_730": {
									"entryPoint": 658,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_750": {
									"entryPoint": null,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_865": {
									"entryPoint": 588,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_789": {
									"entryPoint": 801,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:18",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:18",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:18"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:18"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:18"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:18"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:18"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:18"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:18",
																"statements": []
															},
															"src": "294:140:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:18"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:18",
														"type": ""
													}
												],
												"src": "14:548:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:18"
															},
															"nodeType": "YulIf",
															"src": "664:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:18",
														"type": ""
													}
												],
												"src": "567:173:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:18"
															},
															"nodeType": "YulIf",
															"src": "842:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:18",
														"type": ""
													}
												],
												"src": "745:254:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:18",
														"type": ""
													}
												],
												"src": "1004:187:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:18",
														"type": ""
													}
												],
												"src": "1196:177:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:18"
															},
															"nodeType": "YulIf",
															"src": "1492:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:18",
														"type": ""
													}
												],
												"src": "1378:328:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:18",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:18",
														"type": ""
													}
												],
												"src": "1711:184:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:18"
															},
															"nodeType": "YulIf",
															"src": "1980:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:18",
														"type": ""
													}
												],
												"src": "1900:186:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:18"
															},
															"nodeType": "YulIf",
															"src": "2188:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:18",
														"type": ""
													}
												],
												"src": "2091:260:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:18"
															},
															"nodeType": "YulIf",
															"src": "2499:61:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:18"
															},
															"nodeType": "YulIf",
															"src": "2569:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:18",
														"type": ""
													}
												],
												"src": "2356:380:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:18"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:18",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:18"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:18"
															},
															"nodeType": "YulIf",
															"src": "2824:133:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:18",
														"type": ""
													}
												],
												"src": "2741:222:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:18",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:18"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:18",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:18"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:18",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:18",
														"type": ""
													}
												],
												"src": "2968:401:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:18",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:18"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:18",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:18"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:18",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:18",
														"type": ""
													}
												],
												"src": "3374:400:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:18"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:18",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:18"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:18",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:18",
														"type": ""
													}
												],
												"src": "3779:398:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:18"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:18",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:18",
														"type": ""
													}
												],
												"src": "4182:353:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:18",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:18"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:18",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:18"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:18",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:18",
														"type": ""
													}
												],
												"src": "4540:401:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:18",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:18"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:18",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:18"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:18",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:18",
														"type": ""
													}
												],
												"src": "4946:399:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:18"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:18",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:18"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:18",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:18",
														"type": ""
													}
												],
												"src": "5350:402:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea26469706673582212201700341eac77c0f8631423ded334814da820467784aa037681b844a480a0dcc164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR STOP CALLVALUE 0x1E 0xAC PUSH24 0xC0F8631423DED334814DA820467784AA037681B844A480A0 0xDC 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1511:11730:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4481:219;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:18;;1162:22;1144:41;;1132:2;1117:18;4481:219:4;1004:187:18;3234:106:4;3321:12;;3234:106;;;1342:25:18;;;1330:2;1315:18;3234:106:4;1196:177:18;5262:286:4;;;;;;:::i;:::-;;:::i;3083:91::-;;;3165:2;1853:36:18;;1841:2;1826:18;3083:91:4;1711:184:18;5943:256:4;;;;;;:::i;:::-;;:::i;3398:139::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3512:18:4;3486:7;3512:18;;;;;;;;;;;;3398:139;2348:102;;;:::i;6686:483::-;;;;;;:::i;:::-;;:::i;3733:211::-;;;;;;:::i;:::-;;:::i;4002:171::-;;;;;;:::i;:::-;;:::i;2137:98::-;2191:13;2223:5;2216:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:98;:::o;4481:219::-;4586:4;719:10:0;4640:32:4;719:10:0;4656:7:4;4665:6;4640:8;:32::i;:::-;4689:4;4682:11;;;4481:219;;;;;:::o;5262:286::-;5389:4;719:10:0;5445:38:4;5461:4;719:10:0;5476:6:4;5445:15;:38::i;:::-;5493:27;5503:4;5509:2;5513:6;5493:9;:27::i;:::-;-1:-1:-1;5537:4:4;;5262:286;-1:-1:-1;;;;5262:286:4:o;5943:256::-;6053:4;719:10:0;6107:64:4;719:10:0;6123:7:4;6160:10;6132:25;719:10:0;6123:7:4;6132:9;:25::i;:::-;:38;;;;:::i;:::-;6107:8;:64::i;2348:102::-;2404:13;2436:7;2429:14;;;;;:::i;6686:483::-;6801:4;719:10:0;6801:4:4;6882:25;719:10:0;6899:7:4;6882:9;:25::i;:::-;6855:52;;6958:15;6938:16;:35;;6917:119;;;;-1:-1:-1;;;6917:119:4;;3170:2:18;6917:119:4;;;3152:21:18;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:18;;;3292:35;3344:19;;6917:119:4;;;;;;;;;7070:60;7079:5;7086:7;7114:15;7095:16;:34;7070:8;:60::i;3733:211::-;3834:4;719:10:0;3888:28:4;719:10:0;3905:2:4;3909:6;3888:9;:28::i;4002:171::-;-1:-1:-1;;;;;4139:18:4;;;4113:7;4139:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4002:171::o;10688:370::-;-1:-1:-1;;;;;10819:19:4;;10811:68;;;;-1:-1:-1;;;10811:68:4;;3576:2:18;10811:68:4;;;3558:21:18;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:18;;;3698:34;3749:19;;10811:68:4;3374:400:18;10811:68:4;-1:-1:-1;;;;;10897:21:4;;10889:68;;;;-1:-1:-1;;;10889:68:4;;3981:2:18;10889:68:4;;;3963:21:18;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:18;;;4103:32;4152:19;;10889:68:4;3779:398:18;10889:68:4;-1:-1:-1;;;;;10968:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11019:32;;1342:25:18;;;11019:32:4;;1315:18:18;11019:32:4;;;;;;;10688:370;;;:::o;11339:487::-;11469:24;11496:25;11506:5;11513:7;11496:9;:25::i;:::-;11469:52;;-1:-1:-1;;11535:16:4;:37;11531:289;;11633:6;11613:16;:26;;11588:114;;;;-1:-1:-1;;;11588:114:4;;4384:2:18;11588:114:4;;;4366:21:18;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11588:114:4;4182:353:18;11588:114:4;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11459:367;11339:487;;;:::o;7623:852::-;-1:-1:-1;;;;;7749:18:4;;7741:68;;;;-1:-1:-1;;;7741:68:4;;4742:2:18;7741:68:4;;;4724:21:18;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:18;;;4864:35;4916:19;;7741:68:4;4540:401:18;7741:68:4;-1:-1:-1;;;;;7827:16:4;;7819:64;;;;-1:-1:-1;;;7819:64:4;;5148:2:18;7819:64:4;;;5130:21:18;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:18;;;5270:33;5320:19;;7819:64:4;4946:399:18;7819:64:4;-1:-1:-1;;;;;7965:15:4;;7943:19;7965:15;;;;;;;;;;;8011:21;;;;7990:106;;;;-1:-1:-1;;;7990:106:4;;5552:2:18;7990:106:4;;;5534:21:18;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:18;;;5674:36;5727:19;;7990:106:4;5350:402:18;7990:106:4;-1:-1:-1;;;;;8130:15:4;;;:9;:15;;;;;;;;;;;8148:20;;;8130:38;;8345:13;;;;;;;;;;:23;;;;;;8394:26;;1342:25:18;;;8345:13:4;;8394:26;;1315:18:18;8394:26:4;;;;;;;8431:37;12410:121;14:548:18;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:18;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:18:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:18:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1959,
									"end": 2072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2030,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2033,
									"end": 2038,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2030,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2025,
									"end": 2038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2048,
									"end": 2055,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2058,
									"end": 2065,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2055,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2048,
									"end": 2065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 18,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 18,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 18,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 18,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 18,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1511,
									"end": 13241,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201700341eac77c0f8631423ded334814da820467784aa037681b844a480a0dcc164736f6c63430008130033",
									".code": [
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 13241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2137,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2137,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4481,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4481,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5262,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5262,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3167,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5943,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5943,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3398,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2348,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6686,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6686,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3733,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3733,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4002,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4002,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2204,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2216,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2216,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4640,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5445,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5483,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5445,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5519,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5493,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5520,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5493,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5262,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6130,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6160,
											"end": 6170,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6130,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6132,
											"end": 6157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6157,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6132,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6132,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6107,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2436,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2429,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6906,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6882,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6907,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6882,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6855,
											"end": 6907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6855,
											"end": 6907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6958,
											"end": 6973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6973,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6973,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7093,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7129,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7129,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7070,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3907,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3888,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4150,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10819,
											"end": 10838,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10897,
											"end": 10918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 10918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10979,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 11004,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 11004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 11004,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11469,
											"end": 11493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11506,
											"end": 11511,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11513,
											"end": 11520,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11496,
											"end": 11505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11496,
											"end": 11521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11469,
											"end": 11521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11469,
											"end": 11521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11535,
											"end": 11572,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11531,
											"end": 11820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11639,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11639,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11753,
											"end": 11758,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11760,
											"end": 11767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11769,
											"end": 11785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11769,
											"end": 11794,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 11744,
											"end": 11795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 8475,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 7623,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7827,
											"end": 7843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7827,
											"end": 7843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8168,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8431,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 12410,
											"end": 12531,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ERC20.sol\":{\"keccak256\":\"0x3cf8f84f7252795f0eea72f63ac10d1b98df355ab0e4a7bb935c06f0b72b6b03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://417e16f78bfc6b7511eaaaf707ea5dc69d3cf6d2c77868246c8f6a6b457e0844\",\"dweb:/ipfs/QmawucGLLvZ3xsiFLL1yBkiqQVpBUJ4f1YcRRX49mvNQB3\"]},\"IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 689,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 691,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 693,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ERC20.sol\":{\"keccak256\":\"0x3cf8f84f7252795f0eea72f63ac10d1b98df355ab0e4a7bb935c06f0b72b6b03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://417e16f78bfc6b7511eaaaf707ea5dc69d3cf6d2c77868246c8f6a6b457e0844\",\"dweb:/ipfs/QmawucGLLvZ3xsiFLL1yBkiqQVpBUJ4f1YcRRX49mvNQB3\"]},\"ERC20Burnable.sol\":{\"keccak256\":\"0xbf214cdbd576efde33080494f8e2bcaab7c9cb21ac277e34a2174a9f0207ed04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39261f45741668781d3cd59a7ee1927e7e7559204a00ca59638eb93ddfe48eb2\",\"dweb:/ipfs/QmUPHj8EvpZf5qh7PiUn3CVAAjsYzPZtY97Fk6xTrwww1L\"]},\"IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 689,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 691,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 693,
								"contract": "ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"eip712Domain()": {
								"details": "See {EIP-5267}. _Available since v4.9._"
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"_PERMIT_TYPEHASH_DEPRECATED_SLOT": {
								"custom:oz-renamed-from": "_PERMIT_TYPEHASH",
								"details": "In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"eip712Domain()": "84b0196e",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"ECDSA.sol\":{\"keccak256\":\"0x905addb1f0b1b298fd10ae2f783e8ecb82b1a64407ed5817cb80a5ace9ac241d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efe506fb51c94496a7c280ffcd2d9d77b3ace39d219a25f9c0dc126b067f7c9b\",\"dweb:/ipfs/QmaedTwLtFhDdkwB67afYUAqcrdo3FZXqvyXeJW1bhAoe2\"]},\"EIP712.sol\":{\"keccak256\":\"0x9d38cb4e0e450c2d521e128c61446f8c19109707b2f3c697a8570ed9a750b340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5284e2ca972fcf8ac51fba236bd23f9bc429206c474ad8b7c0e7da160e4dd6a7\",\"dweb:/ipfs/QmbSWGLJvnfufHZ5BcoyBNxnKhPZc3LssqqNbKTLiEA7Rt\"]},\"ERC20.sol\":{\"keccak256\":\"0x3cf8f84f7252795f0eea72f63ac10d1b98df355ab0e4a7bb935c06f0b72b6b03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://417e16f78bfc6b7511eaaaf707ea5dc69d3cf6d2c77868246c8f6a6b457e0844\",\"dweb:/ipfs/QmawucGLLvZ3xsiFLL1yBkiqQVpBUJ4f1YcRRX49mvNQB3\"]},\"ERC20Permit.sol\":{\"keccak256\":\"0x5246c7c00cc7e6975819ca21f37428fb69c4320f52c92e811ad30f7e5512848a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42e17bc7eb725858c6a6219efd58d79b3679674c7693dfeac45fc08aba04a940\",\"dweb:/ipfs/QmSJD2U5Wrmo36GWZw7iPppNpXrGahRZCUNzAEkAXorWZY\"]},\"IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]},\"IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"Strings.sol\":{\"keccak256\":\"0x3cfda6d953ac3159aeeb7542714986ecc71d9a8075300c47554e9318f89e5eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d0cf8179e46c82693c3a600e964854ace52a8446349106ff77342720a2d596\",\"dweb:/ipfs/QmZ1rLCSYgbbozfsdbyhGALbNCJBgvy2MWABHTqyhAA2Fj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 689,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 691,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 693,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 494,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 496,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1319,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Counter)27_storage)"
							},
							{
								"astId": 1327,
								"contract": "ERC20Permit.sol:ERC20Permit",
								"label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
								"offset": 0,
								"slot": "8",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)27_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)27_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)27_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 26,
										"contract": "ERC20Permit.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c89d32a09884fb239038075ea40aa78697179f7d44a1f00f248d7db1e7109c9164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c89d32a09884fb239038075ea40aa78697179f7d44a1f00f248d7db1e7109c9164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SWAP14 ORIGIN LOG0 SWAP9 DUP5 0xFB 0x23 SWAP1 CODESIZE SMOD 0x5E LOG4 EXP 0xA7 DUP7 SWAP8 OR SWAP16 PUSH30 0x44A1F00F248D7DB1E7109C9164736F6C6343000813003300000000000000 ",
							"sourceMap": "202:12582:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c89d32a09884fb239038075ea40aa78697179f7d44a1f00f248d7db1e7109c9164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SWAP14 ORIGIN LOG0 SWAP9 DUP5 0xFB 0x23 SWAP1 CODESIZE SMOD 0x5E LOG4 EXP 0xA7 DUP7 SWAP8 OR SWAP16 PUSH30 0x44A1F00F248D7DB1E7109C9164736F6C6343000813003300000000000000 ",
							"sourceMap": "202:12582:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c89d32a09884fb239038075ea40aa78697179f7d44a1f00f248d7db1e7109c9164736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0x0b00f4e5a26df5c869a274e6ffa267b5abd90904e66a3f0343ef2a58434c5158\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96803af55a7f84920eaacb3ee0a808cb6f59eb6085f526dedd8a932c2ef22d73\",\"dweb:/ipfs/QmYbb6dyPCihUQd4tAJ7hR4HcpZyXcYdNCZT5wTK8mQJnB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2506,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShortStrings.sol\":1235:4285  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShortStrings.sol\":1235:4285  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122021c6f18830d2d0a79cb3f005db1b76879ed486e937cca8980201d1dd62e1251164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021c6f18830d2d0a79cb3f005db1b76879ed486e937cca8980201d1dd62e1251164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xC6 CALL DUP9 ADDRESS 0xD2 0xD0 0xA7 SWAP13 0xB3 CREATE SDIV 0xDB SHL PUSH23 0x879ED486E937CCA8980201D1DD62E1251164736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1235:3050:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1235:3050:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021c6f18830d2d0a79cb3f005db1b76879ed486e937cca8980201d1dd62e1251164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xC6 CALL DUP9 ADDRESS 0xD2 0xD0 0xA7 SWAP13 0xB3 CREATE SDIV 0xDB SHL PUSH23 0x879ED486E937CCA8980201D1DD62E1251164736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1235:3050:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1235,
									"end": 4285,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122021c6f18830d2d0a79cb3f005db1b76879ed486e937cca8980201d1dd62e1251164736f6c63430008130033",
									".code": [
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 4285,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f7fc00eb781f8fec8bf1e8704eef708db7a5d4312ff665ba5d8888551e215d3e64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7fc00eb781f8fec8bf1e8704eef708db7a5d4312ff665ba5d8888551e215d3e64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xFC STOP 0xEB PUSH25 0x1F8FEC8BF1E8704EEF708DB7A5D4312FF665BA5D8888551E21 0x5D RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "215:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7fc00eb781f8fec8bf1e8704eef708db7a5d4312ff665ba5d8888551e215d3e64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xFC STOP 0xEB PUSH25 0x1F8FEC8BF1E8704EEF708DB7A5D4312FF665BA5D8888551E21 0x5D RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "215:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7fc00eb781f8fec8bf1e8704eef708db7a5d4312ff665ba5d8888551e215d3e64736f6c63430008130033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StorageSlot.sol\":1420:4105  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"StorageSlot.sol\":1420:4105  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220291d7d63fc38b6c6b753d300041251fced9ac39c0f9599a6776f49e19c62cffb64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220291d7d63fc38b6c6b753d300041251fced9ac39c0f9599a6776f49e19c62cffb64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 SAR PUSH30 0x63FC38B6C6B753D300041251FCED9AC39C0F9599A6776F49E19C62CFFB64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "1420:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220291d7d63fc38b6c6b753d300041251fced9ac39c0f9599a6776f49e19c62cffb64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 SAR PUSH30 0x63FC38B6C6B753D300041251FCED9AC39C0F9599A6776F49E19C62CFFB64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "1420:2685:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220291d7d63fc38b6c6b753d300041251fced9ac39c0f9599a6776f49e19c62cffb64736f6c63430008130033",
									".code": [
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Strings.sol\":210:2913  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Strings.sol\":210:2913  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b446bddcd910bffaaf7cdfdc0f62356489763af72d0e9a3f8c08c3cba61ca88964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b446bddcd910bffaaf7cdfdc0f62356489763af72d0e9a3f8c08c3cba61ca88964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 CHAINID 0xBD 0xDC 0xD9 LT 0xBF STATICCALL 0xAF PUSH29 0xDFDC0F62356489763AF72D0E9A3F8C08C3CBA61CA88964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "210:2703:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;210:2703:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b446bddcd910bffaaf7cdfdc0f62356489763af72d0e9a3f8c08c3cba61ca88964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 CHAINID 0xBD 0xDC 0xD9 LT 0xBF STATICCALL 0xAF PUSH29 0xDFDC0F62356489763AF72D0E9A3F8C08C3CBA61CA88964736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "210:2703:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 210,
									"end": 2913,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b446bddcd910bffaaf7cdfdc0f62356489763af72d0e9a3f8c08c3cba61ca88964736f6c63430008130033",
									".code": [
										{
											"begin": 210,
											"end": 2913,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 210,
											"end": 2913,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"Strings.sol\":{\"keccak256\":\"0x3cfda6d953ac3159aeeb7542714986ecc71d9a8075300c47554e9318f89e5eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d0cf8179e46c82693c3a600e964854ace52a8446349106ff77342720a2d596\",\"dweb:/ipfs/QmZ1rLCSYgbbozfsdbyhGALbNCJBgvy2MWABHTqyhAA2Fj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token.sol": {
				"Phoenix": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"eip712Domain()": {
								"details": "See {EIP-5267}. _Available since v4.9._"
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC20Permit-nonces}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC20Permit-permit}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token.sol\":212:415  contract Phoenix is ERC20, ERC20Burnable, ERC20Permit, Ownable {... */\n  mstore(0x40, 0x0160)\n    /* \"token.sol\":281:413  constructor() ERC20(\"Phoenix\", \"PHNX\") ERC20Permit(\"Phoenix\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC20Permit.sol\":1773:1825  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xcb, 0x0a0d0decadcd2f)\n  dup2\n  mstore\n  pop\n    /* \"ERC20Permit.sol\":1812:1816  name */\n  dup1\n    /* \"EIP712.sol\":3184:3615  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n  pop\n    /* \"ERC20.sol\":1959:2072  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xcb, 0x0a0d0decadcd2f)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe3, 0x0a0909cb)\n  dup2\n  mstore\n  pop\n    /* \"ERC20.sol\":2033:2038  name_ */\n  dup2\n    /* \"ERC20.sol\":2025:2030  _name */\n  0x03\n    /* \"ERC20.sol\":2025:2038  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":2048:2055  _symbol */\n  0x04\n    /* \"ERC20.sol\":2048:2065  _symbol = symbol_ */\n  tag_10\n    /* \"ERC20.sol\":2058:2065  symbol_ */\n  dup3\n    /* \"ERC20.sol\":2048:2055  _symbol */\n  dup3\n    /* \"ERC20.sol\":2048:2065  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"EIP712.sol\":3257:3302  name.toShortStringWithFallback(_nameFallback) */\n  tag_12\n  swap2\n  pop\n    /* \"EIP712.sol\":3257:3261  name */\n  dup4\n  swap1\n  pop\n    /* \"EIP712.sol\":3288:3301  _nameFallback */\n  0x05\n    /* \"EIP712.sol\":3257:3287  name.toShortStringWithFallback */\n  tag_13\n    /* \"EIP712.sol\":3257:3302  name.toShortStringWithFallback(_nameFallback) */\n  jump\t// in\ntag_12:\n    /* \"EIP712.sol\":3249:3302  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  mstore\n    /* \"EIP712.sol\":3323:3374  version.toShortStringWithFallback(_versionFallback) */\n  tag_14\n    /* \"EIP712.sol\":3323:3330  version */\n  dup2\n    /* \"EIP712.sol\":3357:3373  _versionFallback */\n  0x06\n    /* \"EIP712.sol\":3323:3356  version.toShortStringWithFallback */\n  tag_13\n    /* \"EIP712.sol\":3323:3374  version.toShortStringWithFallback(_versionFallback) */\n  jump\t// in\ntag_14:\n    /* \"EIP712.sol\":3312:3374  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  mstore\n    /* \"EIP712.sol\":3398:3420  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"EIP712.sol\":3384:3420  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  mstore\n    /* \"EIP712.sol\":3447:3472  keccak256(bytes(version)) */\n  dup2\n  mload\n  swap1\n  dup3\n  add\n  keccak256\n    /* \"EIP712.sol\":3430:3472  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  mstore\n    /* \"EIP712.sol\":3500:3513  block.chainid */\n  chainid\n    /* \"EIP712.sol\":3483:3513  _cachedChainId = block.chainid */\n  0xa0\n  mstore\n    /* \"EIP712.sol\":3548:3571  _buildDomainSeparator() */\n  tag_15\n    /* \"EIP712.sol\":4153:4164  _hashedName */\n  mload(0xe0)\n    /* \"EIP712.sol\":4186:4200  _hashedVersion */\n  mload(0x0100)\n    /* \"EIP712.sol\":4089:4288  abi.encode(... */\n  0x40\n  dup1\n  mload\n    /* \"EIP712.sol\":1913:2030  keccak256(... */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"EIP712.sol\":4089:4288  abi.encode(... */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":4682:4707   */\n  mstore\n    /* \"#utility.yul\":4723:4741   */\n  swap1\n  dup2\n  add\n    /* \"#utility.yul\":4716:4750   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":4766:4784   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":4759:4793   */\n  mstore\n    /* \"EIP712.sol\":4222:4235  block.chainid */\n  chainid\n    /* \"#utility.yul\":4809:4827   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":4802:4836   */\n  mstore\n    /* \"EIP712.sol\":4265:4269  this */\n  address\n    /* \"#utility.yul\":4852:4871   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":4845:4906   */\n  mstore\n    /* \"EIP712.sol\":4024:4031  bytes32 */\n  0x00\n  swap1\n    /* \"#utility.yul\":4654:4673   */\n  0xc0\n  add\n    /* \"EIP712.sol\":4089:4288  abi.encode(... */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"EIP712.sol\":4062:4302  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"EIP712.sol\":4043:4302  return... */\n  swap1\n  pop\n    /* \"EIP712.sol\":3969:4309  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\n    /* \"EIP712.sol\":3548:3571  _buildDomainSeparator() */\ntag_15:\n    /* \"EIP712.sol\":3523:3571  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  mstore\n  pop\n  pop\n    /* \"EIP712.sol\":3603:3607  this */\n  address\n    /* \"EIP712.sol\":3581:3608  _cachedThis = address(this) */\n  0xc0\n  mstore\n  pop\n    /* \"Ownable.sol\":951:983  _transferOwnership(_msgSender()) */\n  tag_19\n    /* \"Context.sol\":719:729  msg.sender */\n  caller\n    /* \"Ownable.sol\":951:969  _transferOwnership */\n  tag_22\n    /* \"Ownable.sol\":951:983  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_19:\n    /* \"token.sol\":353:406  _mint(msg.sender, 100000000000000 * 10 ** decimals()) */\n  tag_24\n    /* \"token.sol\":359:369  msg.sender */\n  caller\n    /* \"token.sol\":389:405  10 ** decimals() */\n  tag_27\n    /* \"ERC20.sol\":3165:3167  18 */\n  0x12\n    /* \"token.sol\":389:391  10 */\n  0x0a\n    /* \"token.sol\":389:405  10 ** decimals() */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"token.sol\":371:405  100000000000000 * 10 ** decimals() */\n  tag_29\n  swap1\n    /* \"token.sol\":371:386  100000000000000 */\n  0x5af3107a4000\n    /* \"token.sol\":371:405  100000000000000 * 10 ** decimals() */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"token.sol\":353:358  _mint */\n  tag_31\n    /* \"token.sol\":353:406  _mint(msg.sender, 100000000000000 * 10 ** decimals()) */\n  jump\t// in\ntag_24:\n    /* \"token.sol\":212:415  contract Phoenix is ERC20, ERC20Burnable, ERC20Permit, Ownable {... */\n  jump(tag_76)\n    /* \"ShortStrings.sol\":2895:3236  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_13:\n    /* \"ShortStrings.sol\":2991:3002  ShortString */\n  0x00\n    /* \"ShortStrings.sol\":3040:3042  32 */\n  0x20\n    /* \"ShortStrings.sol\":3024:3029  value */\n  dup4\n    /* \"ShortStrings.sol\":3018:3037  bytes(value).length */\n  mload\n    /* \"ShortStrings.sol\":3018:3042  bytes(value).length < 32 */\n  lt\n    /* \"ShortStrings.sol\":3014:3230  if (bytes(value).length < 32) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"ShortStrings.sol\":3065:3085  toShortString(value) */\n  tag_35\n    /* \"ShortStrings.sol\":3079:3084  value */\n  dup4\n    /* \"ShortStrings.sol\":3065:3078  toShortString */\n  tag_36\n    /* \"ShortStrings.sol\":3065:3085  toShortString(value) */\n  jump\t// in\ntag_35:\n    /* \"ShortStrings.sol\":3058:3085  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_37)\n    /* \"ShortStrings.sol\":3014:3230  if (bytes(value).length < 32) {... */\ntag_34:\n    /* \"ShortStrings.sol\":3142:3147  store */\n  dup2\n    /* \"ShortStrings.sol\":3116:3162  StorageSlot.getStringSlot(store).value = value */\n  tag_40\n    /* \"ShortStrings.sol\":3157:3162  value */\n  dup5\n    /* \"ShortStrings.sol\":3142:3147  store */\n  dup3\n    /* \"ShortStrings.sol\":3116:3162  StorageSlot.getStringSlot(store).value = value */\n  tag_9\n  jump\t// in\ntag_40:\n  pop\n    /* \"ShortStrings.sol\":1371:1437  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n  swap1\n  pop\n    /* \"ShortStrings.sol\":3014:3230  if (bytes(value).length < 32) {... */\ntag_37:\n    /* \"ShortStrings.sol\":2895:3236  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Ownable.sol\":2475:2662  function _transferOwnership(address newOwner) internal virtual {... */\ntag_22:\n    /* \"Ownable.sol\":2567:2573  _owner */\n  0x09\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Ownable.sol\":2583:2600  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"Ownable.sol\":2615:2655  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Ownable.sol\":2567:2573  _owner */\n  swap2\n  and\n  swap2\n    /* \"Ownable.sol\":2583:2600  _owner = newOwner */\n  swap1\n    /* \"Ownable.sol\":2567:2573  _owner */\n  dup3\n  swap1\n    /* \"Ownable.sol\":2615:2655  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Ownable.sol\":2548:2564  address oldOwner */\n  0x00\n  swap1\n    /* \"Ownable.sol\":2615:2655  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Ownable.sol\":2538:2662  {... */\n  pop\n    /* \"Ownable.sol\":2475:2662  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":8751:9286  function _mint(address account, uint256 amount) internal virtual {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":8834:8855  account != address(0) */\n  dup3\n  and\n    /* \"ERC20.sol\":8826:8891  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_48\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5119:5121   */\n  0x20\n    /* \"ERC20.sol\":8826:8891  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5101:5122   */\n  mstore\n    /* \"#utility.yul\":5158:5160   */\n  0x1f\n    /* \"#utility.yul\":5138:5156   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5131:5161   */\n  mstore\n    /* \"#utility.yul\":5197:5230   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":5177:5195   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5170:5231   */\n  mstore\n    /* \"#utility.yul\":5248:5266   */\n  0x64\n  add\n    /* \"ERC20.sol\":8826:8891  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_48:\n    /* \"ERC20.sol\":8978:8984  amount */\n  dup1\n    /* \"ERC20.sol\":8962:8974  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":8962:8984  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ERC20.sol\":9130:9148  _balances[account] */\n  dup3\n  and\n    /* \"ERC20.sol\":9130:9139  _balances */\n  0x00\n    /* \"ERC20.sol\":9130:9148  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"ERC20.sol\":9130:9158  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"ERC20.sol\":9183:9220  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":5553:5578   */\n  dup5\n  dup2\n  mstore\n    /* \"ERC20.sol\":9183:9220  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5526:5544   */\n  add\n    /* \"ERC20.sol\":9183:9220  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":8751:9286  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ShortStrings.sol\":1689:1975  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_36:\n    /* \"ShortStrings.sol\":1754:1765  ShortString */\n  0x00\n    /* \"ShortStrings.sol\":1777:1794  bytes memory bstr */\n  dup1\n    /* \"ShortStrings.sol\":1803:1806  str */\n  dup3\n    /* \"ShortStrings.sol\":1777:1807  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"ShortStrings.sol\":1835:1837  31 */\n  0x1f\n    /* \"ShortStrings.sol\":1821:1825  bstr */\n  dup2\n    /* \"ShortStrings.sol\":1821:1832  bstr.length */\n  mload\n    /* \"ShortStrings.sol\":1821:1837  bstr.length > 31 */\n  gt\n    /* \"ShortStrings.sol\":1817:1889  if (bstr.length > 31) {... */\n  iszero\n  tag_60\n  jumpi\n    /* \"ShortStrings.sol\":1874:1877  str */\n  dup3\n    /* \"ShortStrings.sol\":1860:1878  StringTooLong(str) */\n  mload(0x40)\n  shl(0xe0, 0x305a27a9)\n  dup2\n  mstore\n  0x04\n  add\n  tag_49\n  swap2\n  swap1\n  tag_62\n  jump\t// in\n    /* \"ShortStrings.sol\":1817:1889  if (bstr.length > 31) {... */\ntag_60:\n    /* \"ShortStrings.sol\":1955:1966  bstr.length */\n  dup1\n  mload\n    /* \"ShortStrings.sol\":1938:1951  bytes32(bstr) */\n  tag_63\n    /* \"ShortStrings.sol\":1955:1959  bstr */\n  dup3\n    /* \"ShortStrings.sol\":1938:1951  bytes32(bstr) */\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"ShortStrings.sol\":1930:1966  uint256(bytes32(bstr)) | bstr.length */\n  or\n  swap4\n    /* \"ShortStrings.sol\":1689:1975  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":12410:12531  function _beforeTokenTransfer(... */\ntag_52:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_68:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_69:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_79:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_80:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_71:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_84:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_85:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_9:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_91\n  tag_68\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1582:1679   */\n  tag_92\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_93\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_69\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_71\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_96\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_96:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_87)\n    /* \"#utility.yul\":1810:2473   */\ntag_95:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_99:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_102:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2862   */\ntag_73:\n    /* \"#utility.yul\":2796:2806   */\n  0x4e487b71\n    /* \"#utility.yul\":2791:2794   */\n  0xe0\n    /* \"#utility.yul\":2787:2807   */\n  shl\n    /* \"#utility.yul\":2784:2785   */\n  0x00\n    /* \"#utility.yul\":2777:2808   */\n  mstore\n    /* \"#utility.yul\":2827:2831   */\n  0x11\n    /* \"#utility.yul\":2824:2825   */\n  0x04\n    /* \"#utility.yul\":2817:2832   */\n  mstore\n    /* \"#utility.yul\":2851:2855   */\n  0x24\n    /* \"#utility.yul\":2848:2849   */\n  0x00\n    /* \"#utility.yul\":2841:2856   */\n  revert\n    /* \"#utility.yul\":2867:3289   */\ntag_74:\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2999:3004   */\n  dup2\n    /* \"#utility.yul\":2956:2957   */\n  dup2\n    /* \"#utility.yul\":3013:3283   */\ntag_105:\n    /* \"#utility.yul\":3034:3041   */\n  dup1\n    /* \"#utility.yul\":3024:3032   */\n  dup6\n    /* \"#utility.yul\":3021:3042   */\n  gt\n    /* \"#utility.yul\":3013:3283   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":3093:3097   */\n  dup2\n    /* \"#utility.yul\":3089:3090   */\n  0x00\n    /* \"#utility.yul\":3085:3091   */\n  not\n    /* \"#utility.yul\":3081:3098   */\n  div\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3099   */\n  gt\n    /* \"#utility.yul\":3069:3122   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3102:3120   */\n  tag_109\n  tag_73\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3152:3159   */\n  dup1\n    /* \"#utility.yul\":3142:3150   */\n  dup6\n    /* \"#utility.yul\":3138:3160   */\n  and\n    /* \"#utility.yul\":3135:3190   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":3172:3188   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3135:3190   */\ntag_110:\n    /* \"#utility.yul\":3251:3273   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3211:3226   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3013:3283   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":3017:3020   */\n  pop\n    /* \"#utility.yul\":2867:3289   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:4100   */\ntag_75:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3373:3381   */\n  dup3\n    /* \"#utility.yul\":3363:3443   */\n  tag_112\n  jumpi\n  pop\n    /* \"#utility.yul\":3414:3415   */\n  0x01\n    /* \"#utility.yul\":3428:3433   */\n  jump(tag_37)\n    /* \"#utility.yul\":3363:3443   */\ntag_112:\n    /* \"#utility.yul\":3462:3466   */\n  dup2\n    /* \"#utility.yul\":3452:3528   */\n  tag_113\n  jumpi\n  pop\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3513:3518   */\n  jump(tag_37)\n    /* \"#utility.yul\":3452:3528   */\ntag_113:\n    /* \"#utility.yul\":3544:3548   */\n  dup2\n    /* \"#utility.yul\":3562:3563   */\n  0x01\n    /* \"#utility.yul\":3557:3616   */\n  dup2\n  eq\n  tag_115\n  jumpi\n    /* \"#utility.yul\":3630:3631   */\n  0x02\n    /* \"#utility.yul\":3625:3755   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3537:3755   */\n  jump(tag_114)\n    /* \"#utility.yul\":3557:3616   */\ntag_115:\n    /* \"#utility.yul\":3587:3588   */\n  0x01\n    /* \"#utility.yul\":3578:3588   */\n  swap2\n  pop\n    /* \"#utility.yul\":3601:3606   */\n  pop\n  jump(tag_37)\n    /* \"#utility.yul\":3625:3755   */\ntag_116:\n    /* \"#utility.yul\":3662:3665   */\n  0xff\n    /* \"#utility.yul\":3652:3660   */\n  dup5\n    /* \"#utility.yul\":3649:3666   */\n  gt\n    /* \"#utility.yul\":3646:3689   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3669:3687   */\n  tag_118\n  tag_73\n  jump\t// in\ntag_118:\n  pop\n  pop\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3711:3727   */\n  dup3\n  shl\n    /* \"#utility.yul\":3740:3745   */\n  jump(tag_37)\n    /* \"#utility.yul\":3537:3755   */\ntag_114:\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3829:3837   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  lt\n    /* \"#utility.yul\":3820:3823   */\n  0x0133\n    /* \"#utility.yul\":3814:3818   */\n  dup4\n    /* \"#utility.yul\":3811:3824   */\n  lt\n    /* \"#utility.yul\":3807:3843   */\n  and\n    /* \"#utility.yul\":3801:3803   */\n  0x4e\n    /* \"#utility.yul\":3791:3799   */\n  dup5\n    /* \"#utility.yul\":3788:3804   */\n  lt\n    /* \"#utility.yul\":3783:3785   */\n  0x0b\n    /* \"#utility.yul\":3777:3781   */\n  dup5\n    /* \"#utility.yul\":3774:3786   */\n  lt\n    /* \"#utility.yul\":3770:3805   */\n  and\n    /* \"#utility.yul\":3767:3844   */\n  or\n    /* \"#utility.yul\":3764:3923   */\n  iszero\n  tag_119\n  jumpi\n  pop\n    /* \"#utility.yul\":3876:3895   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3908:3913   */\n  jump(tag_37)\n    /* \"#utility.yul\":3764:3923   */\ntag_119:\n    /* \"#utility.yul\":3955:3989   */\n  tag_120\n    /* \"#utility.yul\":3980:3988   */\n  dup4\n    /* \"#utility.yul\":3974:3978   */\n  dup4\n    /* \"#utility.yul\":3955:3989   */\n  tag_74\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4025:4031   */\n  dup1\n    /* \"#utility.yul\":4021:4022   */\n  0x00\n    /* \"#utility.yul\":4017:4023   */\n  not\n    /* \"#utility.yul\":4013:4032   */\n  div\n    /* \"#utility.yul\":4004:4011   */\n  dup3\n    /* \"#utility.yul\":4001:4033   */\n  gt\n    /* \"#utility.yul\":3998:4056   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4036:4054   */\n  tag_122\n  tag_73\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4074:4094   */\n  mul\n  swap4\n    /* \"#utility.yul\":3294:4100   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4105:4245   */\ntag_28:\n    /* \"#utility.yul\":4163:4168   */\n  0x00\n    /* \"#utility.yul\":4192:4239   */\n  tag_124\n    /* \"#utility.yul\":4233:4237   */\n  0xff\n    /* \"#utility.yul\":4223:4231   */\n  dup5\n    /* \"#utility.yul\":4219:4238   */\n  and\n    /* \"#utility.yul\":4213:4217   */\n  dup4\n    /* \"#utility.yul\":4192:4239   */\n  tag_75\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4183:4239   */\n  swap4\n    /* \"#utility.yul\":4105:4245   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4250:4418   */\ntag_30:\n    /* \"#utility.yul\":4323:4332   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4354:4363   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4371:4386   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4365:4387   */\n  dup5\n  eq\n    /* \"#utility.yul\":4351:4388   */\n  or\n    /* \"#utility.yul\":4341:4412   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":4392:4410   */\n  tag_37\n  tag_73\n  jump\t// in\n    /* \"#utility.yul\":5277:5402   */\ntag_54:\n    /* \"#utility.yul\":5342:5351   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5363:5373   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5360:5396   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":5376:5394   */\n  tag_37\n  tag_73\n  jump\t// in\n    /* \"#utility.yul\":5589:6137   */\ntag_62:\n    /* \"#utility.yul\":5701:5705   */\n  0x00\n    /* \"#utility.yul\":5730:5732   */\n  0x20\n    /* \"#utility.yul\":5759:5761   */\n  dup1\n    /* \"#utility.yul\":5748:5757   */\n  dup4\n    /* \"#utility.yul\":5741:5762   */\n  mstore\n    /* \"#utility.yul\":5791:5797   */\n  dup4\n    /* \"#utility.yul\":5785:5798   */\n  mload\n    /* \"#utility.yul\":5834:5840   */\n  dup1\n    /* \"#utility.yul\":5829:5831   */\n  dup3\n    /* \"#utility.yul\":5818:5827   */\n  dup6\n    /* \"#utility.yul\":5814:5832   */\n  add\n    /* \"#utility.yul\":5807:5841   */\n  mstore\n    /* \"#utility.yul\":5859:5860   */\n  0x00\n    /* \"#utility.yul\":5869:6009   */\ntag_135:\n    /* \"#utility.yul\":5883:5889   */\n  dup2\n    /* \"#utility.yul\":5880:5881   */\n  dup2\n    /* \"#utility.yul\":5877:5890   */\n  lt\n    /* \"#utility.yul\":5869:6009   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":5978:5992   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":5974:5997   */\n  dup4\n  add\n    /* \"#utility.yul\":5968:5998   */\n  mload\n    /* \"#utility.yul\":5944:5961   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":5963:5965   */\n  0x40\n    /* \"#utility.yul\":5940:5966   */\n  add\n    /* \"#utility.yul\":5933:5999   */\n  mstore\n    /* \"#utility.yul\":5898:5908   */\n  dup3\n  add\n    /* \"#utility.yul\":5869:6009   */\n  jump(tag_135)\ntag_137:\n    /* \"#utility.yul\":5873:5876   */\n  pop\n    /* \"#utility.yul\":6058:6059   */\n  0x00\n    /* \"#utility.yul\":6053:6055   */\n  0x40\n    /* \"#utility.yul\":6044:6050   */\n  dup3\n    /* \"#utility.yul\":6033:6042   */\n  dup7\n    /* \"#utility.yul\":6029:6051   */\n  add\n    /* \"#utility.yul\":6025:6056   */\n  add\n    /* \"#utility.yul\":6018:6060   */\n  mstore\n    /* \"#utility.yul\":6128:6130   */\n  0x40\n    /* \"#utility.yul\":6121:6123   */\n  0x1f\n    /* \"#utility.yul\":6117:6124   */\n  not\n    /* \"#utility.yul\":6112:6114   */\n  0x1f\n    /* \"#utility.yul\":6104:6110   */\n  dup4\n    /* \"#utility.yul\":6100:6115   */\n  add\n    /* \"#utility.yul\":6096:6125   */\n  and\n    /* \"#utility.yul\":6085:6094   */\n  dup6\n    /* \"#utility.yul\":6081:6126   */\n  add\n    /* \"#utility.yul\":6077:6131   */\n  add\n    /* \"#utility.yul\":6069:6131   */\n  swap3\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5589:6137   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6142:6439   */\ntag_64:\n    /* \"#utility.yul\":6260:6272   */\n  dup1\n  mload\n    /* \"#utility.yul\":6307:6311   */\n  0x20\n    /* \"#utility.yul\":6296:6312   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":6290:6313   */\n  mload\n  swap2\n    /* \"#utility.yul\":6260:6272   */\n  swap1\n    /* \"#utility.yul\":6325:6341   */\n  dup2\n  lt\n    /* \"#utility.yul\":6322:6433   */\n  iszero\n  tag_80\n  jumpi\n  not(0x00)\n    /* \"#utility.yul\":6399:6403   */\n  0x20\n    /* \"#utility.yul\":6395:6412   */\n  swap2\n  swap1\n  swap2\n  sub\n    /* \"#utility.yul\":6392:6393   */\n  0x03\n    /* \"#utility.yul\":6388:6413   */\n  shl\n    /* \"#utility.yul\":6384:6422   */\n  shl\n    /* \"#utility.yul\":6373:6423   */\n  and\n  swap2\n    /* \"#utility.yul\":6142:6439   */\n  swap1\n  pop\n  jump\t// out\ntag_76:\n    /* \"token.sol\":212:415  contract Phoenix is ERC20, ERC20Burnable, ERC20Permit, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7ce5bcbaa570e6c26aabc2e17cbdf41b64b52824b9d0da4a1a221d2c48e00972\")\n  0x00\n  assignImmutable(\"0x8f59e018e114ef4f0f13f738daa411333c6421e3f33ae68ce5c638756a827d85\")\n  0x00\n  assignImmutable(\"0xb4bf3508f2fd7bb126e7af9e4fe31dbb3cdf386df5936668ea4d8292a4a1b188\")\n  0x00\n  assignImmutable(\"0xe96cc20f241c05b09b05be99fa40d483e0c60480c24cfabd29fea373217f3b30\")\n  0x00\n  assignImmutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n  0x00\n  assignImmutable(\"0xb87264ef8bf99bc710f0d9de51012e0b2f3ac2595d912802c21dad6f786bfe81\")\n  0x00\n  assignImmutable(\"0x2fa57ba1e5aaf920647a42cef0ae645a390896e45bb3a84f3fe768980710f31a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"token.sol\":212:415  contract Phoenix is ERC20, ERC20Burnable, ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x3644e515\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2137:2235  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1269:1283   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1262:1284   */\n      iszero\n        /* \"#utility.yul\":1244:1285   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n      tag_28\n        /* \"#utility.yul\":1104:1291   */\n      jump\n        /* \"ERC20.sol\":3234:3340  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"ERC20.sol\":3321:3333  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3234:3340  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1442:1467   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"ERC20.sol\":3234:3340  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"ERC20.sol\":5262:5548  function transferFrom(... */\n    tag_6:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"ERC20.sol\":3083:3174  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20.sol\":3165:3167  18 */\n      0x12\n        /* \"#utility.yul\":1953:1989   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"ERC20.sol\":3083:3174  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1811:1995   */\n      jump\n        /* \"ERC20Permit.sol\":2969:3082  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_8:\n      tag_36\n      tag_50\n      jump\t// in\n        /* \"ERC20.sol\":5943:6199  function increaseAllowance(... */\n    tag_9:\n      tag_30\n      tag_54\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"ERC20Burnable.sol\":564:653  function burn(uint256 amount) public virtual {... */\n    tag_10:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"ERC20.sol\":3398:3537  function balanceOf(... */\n    tag_11:\n      tag_36\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3512:3530  _balances[account] */\n      and\n        /* \"ERC20.sol\":3486:3493  uint256 */\n      0x00\n        /* \"ERC20.sol\":3512:3530  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3398:3537  function balanceOf(... */\n      jump\n        /* \"Ownable.sol\":1839:1940  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_57\n      tag_67\n      jump\t// in\n        /* \"ERC20Burnable.sol\":959:1120  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_13:\n      tag_57\n      tag_69\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"ERC20Permit.sol\":2705:2845  function nonces(... */\n    tag_14:\n      tag_36\n      tag_72\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"EIP712.sol\":5201:5834  function eip712Domain()... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_28\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n        /* \"Ownable.sol\":1216:1301  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"Ownable.sol\":1288:1294  _owner */\n      sload(0x09)\n        /* \"Ownable.sol\":1216:1301  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1288:1294  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3968:4019   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3956:3958   */\n      0x20\n        /* \"#utility.yul\":3941:3959   */\n      add\n        /* \"Ownable.sol\":1216:1301  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"ERC20.sol\":2348:2450  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_26\n      tag_84\n      jump\t// in\n        /* \"ERC20.sol\":6686:7169  function decreaseAllowance(... */\n    tag_18:\n      tag_30\n      tag_87\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"ERC20.sol\":3733:3944  function transfer(... */\n    tag_19:\n      tag_30\n      tag_91\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"ERC20Permit.sol\":1886:2644  function permit(... */\n    tag_20:\n      tag_57\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"ERC20.sol\":4002:4173  function allowance(... */\n    tag_21:\n      tag_36\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"Ownable.sol\":2089:2321  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_57\n      tag_104\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"ERC20.sol\":2137:2235  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"ERC20.sol\":2191:2204  string memory */\n      0x60\n        /* \"ERC20.sol\":2223:2228  _name */\n      0x03\n        /* \"ERC20.sol\":2216:2228  return _name */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_108\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2137:2235  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n    tag_33:\n        /* \"ERC20.sol\":4586:4590  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":4640:4672  _approve(owner, spender, amount) */\n      tag_116\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC20.sol\":4656:4663  spender */\n      dup6\n        /* \"ERC20.sol\":4665:4671  amount */\n      dup6\n        /* \"ERC20.sol\":4640:4648  _approve */\n      tag_117\n        /* \"ERC20.sol\":4640:4672  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_116:\n        /* \"ERC20.sol\":4689:4693  true */\n      0x01\n        /* \"ERC20.sol\":4682:4693  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4481:4700  function approve(... */\n    tag_113:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5262:5548  function transferFrom(... */\n    tag_43:\n        /* \"ERC20.sol\":5389:5393  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":5445:5483  _spendAllowance(from, spender, amount) */\n      tag_121\n        /* \"ERC20.sol\":5461:5465  from */\n      dup6\n        /* \"Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"ERC20.sol\":5476:5482  amount */\n      dup6\n        /* \"ERC20.sol\":5445:5460  _spendAllowance */\n      tag_122\n        /* \"ERC20.sol\":5445:5483  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"ERC20.sol\":5493:5520  _transfer(from, to, amount) */\n      tag_123\n        /* \"ERC20.sol\":5503:5507  from */\n      dup6\n        /* \"ERC20.sol\":5509:5511  to */\n      dup6\n        /* \"ERC20.sol\":5513:5519  amount */\n      dup6\n        /* \"ERC20.sol\":5493:5502  _transfer */\n      tag_124\n        /* \"ERC20.sol\":5493:5520  _transfer(from, to, amount) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"ERC20.sol\":5537:5541  true */\n      0x01\n      swap5\n        /* \"ERC20.sol\":5262:5548  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Permit.sol\":2969:3082  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n    tag_50:\n        /* \"ERC20Permit.sol\":3029:3036  bytes32 */\n      0x00\n        /* \"ERC20Permit.sol\":3055:3075  _domainSeparatorV4() */\n      tag_127\n        /* \"ERC20Permit.sol\":3055:3073  _domainSeparatorV4 */\n      tag_128\n        /* \"ERC20Permit.sol\":3055:3075  _domainSeparatorV4() */\n      jump\t// in\n    tag_127:\n        /* \"ERC20Permit.sol\":3048:3075  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"ERC20Permit.sol\":2969:3082  function DOMAIN_SEPARATOR() external view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5943:6199  function increaseAllowance(... */\n    tag_55:\n        /* \"ERC20.sol\":6053:6057  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":6107:6171  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_116\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC20.sol\":6123:6130  spender */\n      dup6\n        /* \"ERC20.sol\":6160:6170  addedValue */\n      dup6\n        /* \"ERC20.sol\":6132:6157  allowance(owner, spender) */\n      tag_132\n        /* \"Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"ERC20.sol\":6123:6130  spender */\n      dup4\n        /* \"ERC20.sol\":6132:6141  allowance */\n      tag_101\n        /* \"ERC20.sol\":6132:6157  allowance(owner, spender) */\n      jump\t// in\n    tag_132:\n        /* \"ERC20.sol\":6132:6170  allowance(owner, spender) + addedValue */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"ERC20.sol\":6107:6115  _approve */\n      tag_117\n        /* \"ERC20.sol\":6107:6171  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"ERC20Burnable.sol\":564:653  function burn(uint256 amount) public virtual {... */\n    tag_60:\n        /* \"ERC20Burnable.sol\":619:646  _burn(_msgSender(), amount) */\n      tag_136\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20Burnable.sol\":639:645  amount */\n      dup3\n        /* \"ERC20Burnable.sol\":619:624  _burn */\n      tag_138\n        /* \"ERC20Burnable.sol\":619:646  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_136:\n        /* \"ERC20Burnable.sol\":564:653  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1839:1940  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"Ownable.sol\":1109:1122  _checkOwner() */\n      tag_141\n        /* \"Ownable.sol\":1109:1120  _checkOwner */\n      tag_142\n        /* \"Ownable.sol\":1109:1122  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"Ownable.sol\":1903:1933  _transferOwnership(address(0)) */\n      tag_144\n        /* \"Ownable.sol\":1930:1931  0 */\n      0x00\n        /* \"Ownable.sol\":1903:1921  _transferOwnership */\n      tag_145\n        /* \"Ownable.sol\":1903:1933  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_144:\n        /* \"Ownable.sol\":1839:1940  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ERC20Burnable.sol\":959:1120  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_70:\n        /* \"ERC20Burnable.sol\":1035:1081  _spendAllowance(account, _msgSender(), amount) */\n      tag_147\n        /* \"ERC20Burnable.sol\":1051:1058  account */\n      dup3\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20Burnable.sol\":1074:1080  amount */\n      dup4\n        /* \"ERC20Burnable.sol\":1035:1050  _spendAllowance */\n      tag_122\n        /* \"ERC20Burnable.sol\":1035:1081  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_147:\n        /* \"ERC20Burnable.sol\":1091:1113  _burn(account, amount) */\n      tag_149\n        /* \"ERC20Burnable.sol\":1097:1104  account */\n      dup3\n        /* \"ERC20Burnable.sol\":1106:1112  amount */\n      dup3\n        /* \"ERC20Burnable.sol\":1091:1096  _burn */\n      tag_138\n        /* \"ERC20Burnable.sol\":1091:1113  _burn(account, amount) */\n      jump\t// in\n    tag_149:\n        /* \"ERC20Burnable.sol\":959:1120  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Permit.sol\":2705:2845  function nonces(... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Permit.sol\":2814:2828  _nonces[owner] */\n      dup2\n      and\n        /* \"ERC20Permit.sol\":2788:2795  uint256 */\n      0x00\n        /* \"ERC20Permit.sol\":2814:2828  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Permit.sol\":2814:2821  _nonces */\n      0x07\n        /* \"ERC20Permit.sol\":2814:2828  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Counters.sol\":918:932  counter._value */\n      sload\n        /* \"ERC20Permit.sol\":2814:2838  _nonces[owner].current() */\n      tag_113\n        /* \"Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"EIP712.sol\":5201:5834  function eip712Domain()... */\n    tag_76:\n        /* \"EIP712.sol\":5316:5329  bytes1 fields */\n      0x00\n        /* \"EIP712.sol\":5343:5361  string memory name */\n      0x60\n      dup1\n        /* \"EIP712.sol\":5316:5329  bytes1 fields */\n      dup3\n      dup1\n      dup1\n        /* \"EIP712.sol\":5343:5361  string memory name */\n      dup4\n        /* \"EIP712.sol\":5607:5648  _name.toStringWithFallback(_nameFallback) */\n      tag_154\n        /* \"EIP712.sol\":5607:5612  _name */\n      immutable(\"0x8f59e018e114ef4f0f13f738daa411333c6421e3f33ae68ce5c638756a827d85\")\n        /* \"EIP712.sol\":5634:5647  _nameFallback */\n      0x05\n        /* \"EIP712.sol\":5607:5633  _name.toStringWithFallback */\n      tag_155\n        /* \"EIP712.sol\":5607:5648  _name.toStringWithFallback(_nameFallback) */\n      jump\t// in\n    tag_154:\n        /* \"EIP712.sol\":5662:5709  _version.toStringWithFallback(_versionFallback) */\n      tag_156\n        /* \"EIP712.sol\":5662:5670  _version */\n      immutable(\"0x7ce5bcbaa570e6c26aabc2e17cbdf41b64b52824b9d0da4a1a221d2c48e00972\")\n        /* \"EIP712.sol\":5692:5708  _versionFallback */\n      0x06\n        /* \"EIP712.sol\":5662:5691  _version.toStringWithFallback */\n      tag_155\n        /* \"EIP712.sol\":5662:5709  _version.toStringWithFallback(_versionFallback) */\n      jump\t// in\n    tag_156:\n        /* \"EIP712.sol\":5801:5817  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"EIP712.sol\":5785:5786  0 */\n      0x00\n        /* \"EIP712.sol\":5801:5817  new uint256[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      shl(0xf8, 0x0f)\n        /* \"EIP712.sol\":5556:5827  return (... */\n      swap12\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n        /* \"EIP712.sol\":5723:5736  block.chainid */\n      chainid\n      swap8\n      pop\n        /* \"EIP712.sol\":5758:5762  this */\n      address\n      swap7\n      pop\n        /* \"EIP712.sol\":5785:5786  0 */\n      swap5\n      pop\n        /* \"EIP712.sol\":5801:5817  new uint256[](0) */\n      swap3\n      pop\n        /* \"EIP712.sol\":5556:5827  return (... */\n      swap1\n      pop\n        /* \"EIP712.sol\":5201:5834  function eip712Domain()... */\n      jump\t// out\n        /* \"ERC20.sol\":2348:2450  function symbol() public view virtual override returns (string memory) {... */\n    tag_84:\n        /* \"ERC20.sol\":2404:2417  string memory */\n      0x60\n        /* \"ERC20.sol\":2436:2443  _symbol */\n      0x04\n        /* \"ERC20.sol\":2429:2443  return _symbol */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n        /* \"ERC20.sol\":6686:7169  function decreaseAllowance(... */\n    tag_88:\n        /* \"ERC20.sol\":6801:6805  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":6801:6805  bool */\n      dup2\n        /* \"ERC20.sol\":6882:6907  allowance(owner, spender) */\n      tag_170\n        /* \"Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"ERC20.sol\":6899:6906  spender */\n      dup7\n        /* \"ERC20.sol\":6882:6891  allowance */\n      tag_101\n        /* \"ERC20.sol\":6882:6907  allowance(owner, spender) */\n      jump\t// in\n    tag_170:\n        /* \"ERC20.sol\":6855:6907  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20.sol\":6958:6973  subtractedValue */\n      dup4\n        /* \"ERC20.sol\":6938:6954  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6938:6973  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":6917:7036  require(... */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5939:5941   */\n      0x20\n        /* \"ERC20.sol\":6917:7036  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5921:5942   */\n      mstore\n        /* \"#utility.yul\":5978:5980   */\n      0x25\n        /* \"#utility.yul\":5958:5976   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5951:5981   */\n      mstore\n        /* \"#utility.yul\":6017:6051   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5997:6015   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5990:6052   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6068:6086   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6061:6096   */\n      mstore\n        /* \"#utility.yul\":6113:6132   */\n      0x84\n      add\n        /* \"ERC20.sol\":6917:7036  require(... */\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"ERC20.sol\":7070:7130  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_123\n        /* \"ERC20.sol\":7079:7084  owner */\n      dup3\n        /* \"ERC20.sol\":7086:7093  spender */\n      dup7\n        /* \"ERC20.sol\":7114:7129  subtractedValue */\n      dup7\n        /* \"ERC20.sol\":7095:7111  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":7095:7129  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":7070:7078  _approve */\n      tag_117\n        /* \"ERC20.sol\":7070:7130  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":3733:3944  function transfer(... */\n    tag_92:\n        /* \"ERC20.sol\":3834:3838  bool */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"ERC20.sol\":3888:3916  _transfer(owner, to, amount) */\n      tag_116\n        /* \"Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"ERC20.sol\":3905:3907  to */\n      dup6\n        /* \"ERC20.sol\":3909:3915  amount */\n      dup6\n        /* \"ERC20.sol\":3888:3897  _transfer */\n      tag_124\n        /* \"ERC20.sol\":3888:3916  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20Permit.sol\":1886:2644  function permit(... */\n    tag_97:\n        /* \"ERC20Permit.sol\":2121:2129  deadline */\n      dup4\n        /* \"ERC20Permit.sol\":2102:2117  block.timestamp */\n      timestamp\n        /* \"ERC20Permit.sol\":2102:2129  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"ERC20Permit.sol\":2094:2163  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6345:6347   */\n      0x20\n        /* \"ERC20Permit.sol\":2094:2163  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6327:6348   */\n      mstore\n        /* \"#utility.yul\":6384:6386   */\n      0x1d\n        /* \"#utility.yul\":6364:6382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6357:6387   */\n      mstore\n        /* \"#utility.yul\":6423:6454   */\n      0x45524332305065726d69743a206578706972656420646561646c696e65000000\n        /* \"#utility.yul\":6403:6421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6396:6455   */\n      mstore\n        /* \"#utility.yul\":6472:6490   */\n      0x64\n      add\n        /* \"ERC20Permit.sol\":2094:2163  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n      tag_172\n        /* \"#utility.yul\":6143:6496   */\n      jump\n        /* \"ERC20Permit.sol\":2094:2163  require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\") */\n    tag_179:\n        /* \"ERC20Permit.sol\":2174:2192  bytes32 structHash */\n      0x00\n        /* \"ERC20Permit.sol\":1059:1176  keccak256(... */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20Permit.sol\":2280:2285  owner */\n      dup9\n        /* \"ERC20Permit.sol\":2303:2310  spender */\n      dup9\n        /* \"ERC20Permit.sol\":2328:2333  value */\n      dup9\n        /* \"ERC20Permit.sol\":2351:2367  _useNonce(owner) */\n      tag_182\n        /* \"ERC20Permit.sol\":2361:2366  owner */\n      dup13\n        /* \"ERC20Permit.sol\":2351:2360  _useNonce */\n      tag_183\n        /* \"ERC20Permit.sol\":2351:2367  _useNonce(owner) */\n      jump\t// in\n    tag_182:\n        /* \"ERC20Permit.sol\":2218:2407  abi.encode(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":6788:6813   */\n      swap7\n      swap1\n      swap7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6887:6902   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":6867:6885   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":6860:6903   */\n      mstore\n        /* \"#utility.yul\":6939:6954   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6919:6937   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":6912:6955   */\n      mstore\n        /* \"#utility.yul\":6971:6989   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":6964:6998   */\n      mstore\n        /* \"#utility.yul\":7014:7033   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":7007:7042   */\n      mstore\n        /* \"#utility.yul\":7058:7077   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":7051:7086   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":6760:6779   */\n      0xe0\n      add\n        /* \"ERC20Permit.sol\":2218:2407  abi.encode(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC20Permit.sol\":2195:2417  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC20Permit.sol\":2174:2417  bytes32 structHash = keccak256(... */\n      swap1\n      pop\n        /* \"ERC20Permit.sol\":2428:2440  bytes32 hash */\n      0x00\n        /* \"ERC20Permit.sol\":2443:2471  _hashTypedDataV4(structHash) */\n      tag_186\n        /* \"ERC20Permit.sol\":2460:2470  structHash */\n      dup3\n        /* \"ERC20Permit.sol\":2443:2459  _hashTypedDataV4 */\n      tag_187\n        /* \"ERC20Permit.sol\":2443:2471  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_186:\n        /* \"ERC20Permit.sol\":2428:2471  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"ERC20Permit.sol\":2482:2496  address signer */\n      0x00\n        /* \"ERC20Permit.sol\":2499:2527  ECDSA.recover(hash, v, r, s) */\n      tag_188\n        /* \"ERC20Permit.sol\":2513:2517  hash */\n      dup3\n        /* \"ERC20Permit.sol\":2519:2520  v */\n      dup8\n        /* \"ERC20Permit.sol\":2522:2523  r */\n      dup8\n        /* \"ERC20Permit.sol\":2525:2526  s */\n      dup8\n        /* \"ERC20Permit.sol\":2499:2512  ECDSA.recover */\n      tag_189\n        /* \"ERC20Permit.sol\":2499:2527  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_188:\n        /* \"ERC20Permit.sol\":2482:2527  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"ERC20Permit.sol\":2555:2560  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Permit.sol\":2545:2560  signer == owner */\n      and\n        /* \"ERC20Permit.sol\":2545:2551  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Permit.sol\":2545:2560  signer == owner */\n      and\n      eq\n        /* \"ERC20Permit.sol\":2537:2595  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7299:7301   */\n      0x20\n        /* \"ERC20Permit.sol\":2537:2595  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7281:7302   */\n      mstore\n        /* \"#utility.yul\":7338:7340   */\n      0x1e\n        /* \"#utility.yul\":7318:7336   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7311:7341   */\n      mstore\n        /* \"#utility.yul\":7377:7409   */\n      0x45524332305065726d69743a20696e76616c6964207369676e61747572650000\n        /* \"#utility.yul\":7357:7375   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7350:7410   */\n      mstore\n        /* \"#utility.yul\":7427:7445   */\n      0x64\n      add\n        /* \"ERC20Permit.sol\":2537:2595  require(signer == owner, \"ERC20Permit: invalid signature\") */\n      tag_172\n        /* \"#utility.yul\":7097:7451   */\n      jump\n        /* \"ERC20Permit.sol\":2537:2595  require(signer == owner, \"ERC20Permit: invalid signature\") */\n    tag_190:\n        /* \"ERC20Permit.sol\":2606:2637  _approve(owner, spender, value) */\n      tag_193\n        /* \"ERC20Permit.sol\":2615:2620  owner */\n      dup11\n        /* \"ERC20Permit.sol\":2622:2629  spender */\n      dup11\n        /* \"ERC20Permit.sol\":2631:2636  value */\n      dup11\n        /* \"ERC20Permit.sol\":2606:2614  _approve */\n      tag_117\n        /* \"ERC20Permit.sol\":2606:2637  _approve(owner, spender, value) */\n      jump\t// in\n    tag_193:\n        /* \"ERC20Permit.sol\":2084:2644  {... */\n      pop\n      pop\n      pop\n        /* \"ERC20Permit.sol\":1886:2644  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4002:4173  function allowance(... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4139:4157  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4113:4120  uint256 */\n      0x00\n        /* \"ERC20.sol\":4139:4157  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4139:4150  _allowances */\n      0x01\n        /* \"ERC20.sol\":4139:4157  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4139:4166  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":4002:4173  function allowance(... */\n      jump\t// out\n        /* \"Ownable.sol\":2089:2321  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"Ownable.sol\":1109:1122  _checkOwner() */\n      tag_196\n        /* \"Ownable.sol\":1109:1120  _checkOwner */\n      tag_142\n        /* \"Ownable.sol\":1109:1122  _checkOwner() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2190:2212  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2169:2276  require(... */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7658:7660   */\n      0x20\n        /* \"Ownable.sol\":2169:2276  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7640:7661   */\n      mstore\n        /* \"#utility.yul\":7697:7699   */\n      0x26\n        /* \"#utility.yul\":7677:7695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7670:7700   */\n      mstore\n        /* \"#utility.yul\":7736:7770   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7716:7734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7709:7771   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7787:7805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7780:7816   */\n      mstore\n        /* \"#utility.yul\":7833:7852   */\n      0x84\n      add\n        /* \"Ownable.sol\":2169:2276  require(... */\n      tag_172\n        /* \"#utility.yul\":7456:7858   */\n      jump\n        /* \"Ownable.sol\":2169:2276  require(... */\n    tag_198:\n        /* \"Ownable.sol\":2286:2314  _transferOwnership(newOwner) */\n      tag_136\n        /* \"Ownable.sol\":2305:2313  newOwner */\n      dup2\n        /* \"Ownable.sol\":2286:2304  _transferOwnership */\n      tag_145\n        /* \"Ownable.sol\":2286:2314  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"ERC20.sol\":10688:11058  function _approve(... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10819:10838  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8065:8067   */\n      0x20\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8047:8068   */\n      mstore\n        /* \"#utility.yul\":8104:8106   */\n      0x24\n        /* \"#utility.yul\":8084:8102   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8077:8107   */\n      mstore\n        /* \"#utility.yul\":8143:8177   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8123:8141   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8116:8178   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8194:8212   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8187:8221   */\n      mstore\n        /* \"#utility.yul\":8238:8257   */\n      0x84\n      add\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_172\n        /* \"#utility.yul\":7863:8263   */\n      jump\n        /* \"ERC20.sol\":10811:10879  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10897:10918  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8470:8472   */\n      0x20\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8452:8473   */\n      mstore\n        /* \"#utility.yul\":8509:8511   */\n      0x22\n        /* \"#utility.yul\":8489:8507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8482:8512   */\n      mstore\n        /* \"#utility.yul\":8548:8582   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8528:8546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8521:8583   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":8599:8617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8592:8624   */\n      mstore\n        /* \"#utility.yul\":8641:8660   */\n      0x84\n      add\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_172\n        /* \"#utility.yul\":8268:8666   */\n      jump\n        /* \"ERC20.sol\":10889:10957  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":10968:10986  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":10968:10979  _allowances */\n      0x01\n        /* \"ERC20.sol\":10968:10986  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":10968:10995  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":10968:11004  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":11019:11051  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1442:1467   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20.sol\":11019:11051  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"ERC20.sol\":11019:11051  Approval(owner, spender, amount) */\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10688:11058  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11339:11826  function _spendAllowance(... */\n    tag_122:\n        /* \"ERC20.sol\":11469:11493  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":11496:11521  allowance(owner, spender) */\n      tag_212\n        /* \"ERC20.sol\":11506:11511  owner */\n      dup5\n        /* \"ERC20.sol\":11513:11520  spender */\n      dup5\n        /* \"ERC20.sol\":11496:11505  allowance */\n      tag_101\n        /* \"ERC20.sol\":11496:11521  allowance(owner, spender) */\n      jump\t// in\n    tag_212:\n        /* \"ERC20.sol\":11469:11521  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC20.sol\":11535:11551  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":11535:11572  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20.sol\":11531:11820  if (currentAllowance != type(uint256).max) {... */\n      tag_217\n      jumpi\n        /* \"ERC20.sol\":11633:11639  amount */\n      dup2\n        /* \"ERC20.sol\":11613:11629  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":11613:11639  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":11588:11702  require(... */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8873:8875   */\n      0x20\n        /* \"ERC20.sol\":11588:11702  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8855:8876   */\n      mstore\n        /* \"#utility.yul\":8912:8914   */\n      0x1d\n        /* \"#utility.yul\":8892:8910   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8885:8915   */\n      mstore\n        /* \"#utility.yul\":8951:8982   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":8931:8949   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8924:8983   */\n      mstore\n        /* \"#utility.yul\":9000:9018   */\n      0x64\n      add\n        /* \"ERC20.sol\":11588:11702  require(... */\n      tag_172\n        /* \"#utility.yul\":8671:9024   */\n      jump\n        /* \"ERC20.sol\":11588:11702  require(... */\n    tag_214:\n        /* \"ERC20.sol\":11744:11795  _approve(owner, spender, currentAllowance - amount) */\n      tag_217\n        /* \"ERC20.sol\":11753:11758  owner */\n      dup5\n        /* \"ERC20.sol\":11760:11767  spender */\n      dup5\n        /* \"ERC20.sol\":11788:11794  amount */\n      dup5\n        /* \"ERC20.sol\":11769:11785  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":11769:11794  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":11744:11752  _approve */\n      tag_117\n        /* \"ERC20.sol\":11744:11795  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_217:\n        /* \"ERC20.sol\":11459:11826  {... */\n      pop\n        /* \"ERC20.sol\":11339:11826  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7623:8475  function _transfer(... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7749:7767  from != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9231:9233   */\n      0x20\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9213:9234   */\n      mstore\n        /* \"#utility.yul\":9270:9272   */\n      0x25\n        /* \"#utility.yul\":9250:9268   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9243:9273   */\n      mstore\n        /* \"#utility.yul\":9309:9343   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9289:9307   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9282:9344   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9360:9378   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9353:9388   */\n      mstore\n        /* \"#utility.yul\":9405:9424   */\n      0x84\n      add\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_172\n        /* \"#utility.yul\":9029:9430   */\n      jump\n        /* \"ERC20.sol\":7741:7809  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7827:7843  to != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9637:9639   */\n      0x20\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9619:9640   */\n      mstore\n        /* \"#utility.yul\":9676:9678   */\n      0x23\n        /* \"#utility.yul\":9656:9674   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9649:9679   */\n      mstore\n        /* \"#utility.yul\":9715:9749   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9695:9713   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9688:9750   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9766:9784   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9759:9792   */\n      mstore\n        /* \"#utility.yul\":9809:9828   */\n      0x84\n      add\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_172\n        /* \"#utility.yul\":9435:9834   */\n      jump\n        /* \"ERC20.sol\":7819:7883  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7965:7980  _balances[from] */\n      dup4\n      and\n        /* \"ERC20.sol\":7943:7962  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":7965:7980  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":8011:8032  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":7990:8096  require(... */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10041:10043   */\n      0x20\n        /* \"ERC20.sol\":7990:8096  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10023:10044   */\n      mstore\n        /* \"#utility.yul\":10080:10082   */\n      0x26\n        /* \"#utility.yul\":10060:10078   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10053:10083   */\n      mstore\n        /* \"#utility.yul\":10119:10153   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":10099:10117   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10092:10154   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":10170:10188   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10163:10199   */\n      mstore\n        /* \"#utility.yul\":10216:10235   */\n      0x84\n      add\n        /* \"ERC20.sol\":7990:8096  require(... */\n      tag_172\n        /* \"#utility.yul\":9839:10241   */\n      jump\n        /* \"ERC20.sol\":7990:8096  require(... */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8130:8145  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"ERC20.sol\":8130:8139  _balances */\n      0x00\n        /* \"ERC20.sol\":8130:8145  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":8148:8168  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"ERC20.sol\":8130:8168  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20.sol\":8345:8358  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"ERC20.sol\":8345:8368  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"ERC20.sol\":8394:8420  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1442:1467   */\n      dup6\n      dup2\n      mstore\n        /* \"ERC20.sol\":8345:8358  _balances[to] */\n      swap1\n      swap3\n        /* \"ERC20.sol\":8394:8420  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"ERC20.sol\":8394:8420  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":8431:8468  _afterTokenTransfer(from, to, amount) */\n      tag_217\n        /* \"ERC20.sol\":9606:10265  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"EIP712.sol\":3701:3963  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_128:\n        /* \"EIP712.sol\":3754:3761  bytes32 */\n      0x00\n        /* \"EIP712.sol\":3785:3789  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"EIP712.sol\":3794:3805  _cachedThis */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"EIP712.sol\":3777:3805  address(this) == _cachedThis */\n      and\n      eq\n        /* \"EIP712.sol\":3777:3840  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"EIP712.sol\":3826:3840  _cachedChainId */\n      immutable(\"0xb87264ef8bf99bc710f0d9de51012e0b2f3ac2595d912802c21dad6f786bfe81\")\n        /* \"EIP712.sol\":3809:3822  block.chainid */\n      chainid\n        /* \"EIP712.sol\":3809:3840  block.chainid == _cachedChainId */\n      eq\n        /* \"EIP712.sol\":3777:3840  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_234:\n        /* \"EIP712.sol\":3773:3957  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"EIP712.sol\":3863:3885  _cachedDomainSeparator */\n      immutable(\"0x2fa57ba1e5aaf920647a42cef0ae645a390896e45bb3a84f3fe768980710f31a\")\n      swap1\n        /* \"EIP712.sol\":3701:3963  function _domainSeparatorV4() internal view returns (bytes32) {... */\n      jump\t// out\n        /* \"EIP712.sol\":3773:3957  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_235:\n        /* \"EIP712.sol\":3923:3946  _buildDomainSeparator() */\n      tag_127\n        /* \"EIP712.sol\":4089:4288  abi.encode(... */\n      0x40\n      dup1\n      mload\n        /* \"EIP712.sol\":1913:2030  keccak256(... */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"EIP712.sol\":4089:4288  abi.encode(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":11671:11696   */\n      mstore\n        /* \"EIP712.sol\":4153:4164  _hashedName */\n      immutable(\"0xe96cc20f241c05b09b05be99fa40d483e0c60480c24cfabd29fea373217f3b30\")\n        /* \"#utility.yul\":11712:11730   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11705:11739   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"EIP712.sol\":4186:4200  _hashedVersion */\n      immutable(\"0xb4bf3508f2fd7bb126e7af9e4fe31dbb3cdf386df5936668ea4d8292a4a1b188\")\n        /* \"#utility.yul\":11755:11773   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":11748:11782   */\n      mstore\n        /* \"EIP712.sol\":4222:4235  block.chainid */\n      chainid\n        /* \"#utility.yul\":11798:11816   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":11791:11825   */\n      mstore\n        /* \"EIP712.sol\":4265:4269  this */\n      address\n        /* \"#utility.yul\":11841:11860   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":11834:11895   */\n      mstore\n        /* \"EIP712.sol\":4024:4031  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":11643:11662   */\n      0xc0\n      add\n        /* \"EIP712.sol\":4089:4288  abi.encode(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"EIP712.sol\":4062:4302  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"EIP712.sol\":4043:4302  return... */\n      swap1\n      pop\n        /* \"EIP712.sol\":3969:4309  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\n        /* \"ERC20.sol\":9606:10265  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9689:9710  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9681:9748  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10448:10450   */\n      0x20\n        /* \"ERC20.sol\":9681:9748  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10430:10451   */\n      mstore\n        /* \"#utility.yul\":10487:10489   */\n      0x21\n        /* \"#utility.yul\":10467:10485   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10460:10490   */\n      mstore\n        /* \"#utility.yul\":10526:10560   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":10506:10524   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10499:10561   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":10577:10595   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10570:10601   */\n      mstore\n        /* \"#utility.yul\":10618:10637   */\n      0x84\n      add\n        /* \"ERC20.sol\":9681:9748  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_172\n        /* \"#utility.yul\":10246:10643   */\n      jump\n        /* \"ERC20.sol\":9681:9748  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9844:9862  _balances[account] */\n      dup3\n      and\n        /* \"ERC20.sol\":9819:9841  uint256 accountBalance */\n      0x00\n        /* \"ERC20.sol\":9844:9862  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":9880:9904  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20.sol\":9872:9943  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10850:10852   */\n      0x20\n        /* \"ERC20.sol\":9872:9943  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10832:10853   */\n      mstore\n        /* \"#utility.yul\":10889:10891   */\n      0x22\n        /* \"#utility.yul\":10869:10887   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10862:10892   */\n      mstore\n        /* \"#utility.yul\":10928:10962   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":10908:10926   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10901:10963   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":10979:10997   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10972:11004   */\n      mstore\n        /* \"#utility.yul\":11021:11040   */\n      0x84\n      add\n        /* \"ERC20.sol\":9872:9943  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_172\n        /* \"#utility.yul\":10648:11046   */\n      jump\n        /* \"ERC20.sol\":9872:9943  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9977:9995  _balances[account] */\n      dup4\n      and\n        /* \"ERC20.sol\":9977:9986  _balances */\n      0x00\n        /* \"ERC20.sol\":9977:9995  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9998:10021  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"ERC20.sol\":9977:10021  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20.sol\":10114:10126  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":10114:10136  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"ERC20.sol\":10162:10199  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1442:1467   */\n      dup6\n      dup2\n      mstore\n        /* \"ERC20.sol\":9977:9986  _balances */\n      swap2\n      swap3\n        /* \"ERC20.sol\":9977:9995  _balances[account] */\n      swap2\n        /* \"ERC20.sol\":10162:10199  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"ERC20.sol\":10162:10199  Transfer(account, address(0), amount) */\n      tag_210\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"Ownable.sol\":1374:1504  function _checkOwner() internal view virtual {... */\n    tag_142:\n        /* \"Ownable.sol\":1288:1294  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Ownable.sol\":1437:1460  owner() == _msgSender() */\n      eq\n        /* \"Ownable.sol\":1429:1497  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11253:11255   */\n      0x20\n        /* \"Ownable.sol\":1429:1497  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11235:11256   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11272:11290   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11265:11295   */\n      mstore\n        /* \"#utility.yul\":11331:11365   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11311:11329   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11304:11366   */\n      mstore\n        /* \"#utility.yul\":11383:11401   */\n      0x64\n      add\n        /* \"Ownable.sol\":1429:1497  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_172\n        /* \"#utility.yul\":11051:11407   */\n      jump\n        /* \"Ownable.sol\":2475:2662  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"Ownable.sol\":2567:2573  _owner */\n      0x09\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2583:2600  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Ownable.sol\":2615:2655  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Ownable.sol\":2567:2573  _owner */\n      swap2\n      and\n      swap2\n        /* \"Ownable.sol\":2583:2600  _owner = newOwner */\n      swap1\n        /* \"Ownable.sol\":2567:2573  _owner */\n      dup3\n      swap1\n        /* \"Ownable.sol\":2615:2655  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":2548:2564  address oldOwner */\n      0x00\n      swap1\n        /* \"Ownable.sol\":2615:2655  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Ownable.sol\":2538:2662  {... */\n      pop\n        /* \"Ownable.sol\":2475:2662  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"ShortStrings.sol\":3367:3635  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_155:\n        /* \"ShortStrings.sol\":3461:3474  string memory */\n      0x60\n        /* \"ShortStrings.sol\":1371:1437  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"ShortStrings.sol\":3490:3537  ShortString.unwrap(value) != _FALLBACK_SENTINEL */\n      dup4\n      eq\n        /* \"ShortStrings.sol\":3486:3629  if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {... */\n      tag_258\n      jumpi\n        /* \"ShortStrings.sol\":3560:3575  toString(value) */\n      tag_259\n        /* \"ShortStrings.sol\":3569:3574  value */\n      dup4\n        /* \"ShortStrings.sol\":3560:3568  toString */\n      tag_260\n        /* \"ShortStrings.sol\":3560:3575  toString(value) */\n      jump\t// in\n    tag_259:\n        /* \"ShortStrings.sol\":3553:3575  return toString(value) */\n      swap1\n      pop\n      jump(tag_113)\n        /* \"ShortStrings.sol\":3486:3629  if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {... */\n    tag_258:\n        /* \"ShortStrings.sol\":3613:3618  store */\n      dup2\n        /* \"ShortStrings.sol\":3606:3618  return store */\n      dup1\n      sload\n      tag_262\n      swap1\n      tag_108\n      jump\t// in\n    tag_262:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_263\n      swap1\n      tag_108\n      jump\t// in\n    tag_263:\n      dup1\n      iszero\n      tag_264\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_265\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_264)\n    tag_265:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_266:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_266\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      jump(tag_113)\n        /* \"ERC20Permit.sol\":3213:3430  function _useNonce(... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Permit.sol\":3347:3361  _nonces[owner] */\n      dup2\n      and\n        /* \"ERC20Permit.sol\":3287:3302  uint256 current */\n      0x00\n        /* \"ERC20Permit.sol\":3347:3361  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Permit.sol\":3347:3354  _nonces */\n      0x07\n        /* \"ERC20Permit.sol\":3347:3361  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Counters.sol\":918:932  counter._value */\n      dup1\n      sload\n        /* \"Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"Counters.sol\":1032:1051  counter._value += 1 */\n      dup2\n      add\n      dup3\n      sstore\n        /* \"Counters.sol\":918:932  counter._value */\n      swap1\n        /* \"ERC20Permit.sol\":3406:3423  nonce.increment() */\n    tag_269:\n        /* \"ERC20Permit.sol\":3304:3430  {... */\n      pop\n        /* \"ERC20Permit.sol\":3213:3430  function _useNonce(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"EIP712.sol\":4934:5113  function _hashTypedDataV4(... */\n    tag_187:\n        /* \"EIP712.sol\":5025:5032  bytes32 */\n      0x00\n        /* \"EIP712.sol\":5051:5106  ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_113\n        /* \"EIP712.sol\":5073:5093  _domainSeparatorV4() */\n      tag_273\n        /* \"EIP712.sol\":5073:5091  _domainSeparatorV4 */\n      tag_128\n        /* \"EIP712.sol\":5073:5093  _domainSeparatorV4() */\n      jump\t// in\n    tag_273:\n        /* \"EIP712.sol\":5095:5105  structHash */\n      dup4\n        /* \"ECDSA.sol\":8961:8965  0x40 */\n      0x40\n        /* \"ECDSA.sol\":8955:8966  mload(0x40) */\n      mload\n      shl(0xf0, 0x1901)\n        /* \"ECDSA.sol\":8979:9002  mstore(ptr, \"\\x19\\x01\") */\n      dup2\n      mstore\n        /* \"ECDSA.sol\":9031:9035  0x02 */\n      0x02\n        /* \"ECDSA.sol\":9022:9036  add(ptr, 0x02) */\n      dup2\n      add\n        /* \"ECDSA.sol\":9015:9054  mstore(add(ptr, 0x02), domainSeparator) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"ECDSA.sol\":9083:9087  0x22 */\n      0x22\n        /* \"ECDSA.sol\":9074:9088  add(ptr, 0x22) */\n      dup3\n      add\n        /* \"ECDSA.sol\":9067:9101  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"ECDSA.sol\":9137:9141  0x42 */\n      0x42\n        /* \"ECDSA.sol\":9122:9142  keccak256(ptr, 0x42) */\n      swap1\n      keccak256\n      swap1\n        /* \"ECDSA.sol\":8739:9158  function toTypedDataHash(... */\n      jump\n        /* \"ECDSA.sol\":6815:7085  function recover(... */\n    tag_189:\n        /* \"ECDSA.sol\":6938:6945  address */\n      0x00\n        /* \"ECDSA.sol\":6958:6975  address recovered */\n      dup1\n        /* \"ECDSA.sol\":6977:6995  RecoverError error */\n      0x00\n        /* \"ECDSA.sol\":6999:7024  tryRecover(hash, v, r, s) */\n      tag_276\n        /* \"ECDSA.sol\":7010:7014  hash */\n      dup8\n        /* \"ECDSA.sol\":7016:7017  v */\n      dup8\n        /* \"ECDSA.sol\":7019:7020  r */\n      dup8\n        /* \"ECDSA.sol\":7022:7023  s */\n      dup8\n        /* \"ECDSA.sol\":6999:7009  tryRecover */\n      tag_277\n        /* \"ECDSA.sol\":6999:7024  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_276:\n        /* \"ECDSA.sol\":6957:7024  (address recovered, RecoverError error) = tryRecover(hash, v, r, s) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ECDSA.sol\":7034:7052  _throwError(error) */\n      tag_278\n        /* \"ECDSA.sol\":7046:7051  error */\n      dup2\n        /* \"ECDSA.sol\":7034:7045  _throwError */\n      tag_279\n        /* \"ECDSA.sol\":7034:7052  _throwError(error) */\n      jump\t// in\n    tag_278:\n      pop\n        /* \"ECDSA.sol\":7069:7078  recovered */\n      swap6\n        /* \"ECDSA.sol\":6815:7085  function recover(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShortStrings.sol\":2059:2464  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_260:\n        /* \"ShortStrings.sol\":2118:2131  string memory */\n      0x60\n        /* \"ShortStrings.sol\":2143:2154  uint256 len */\n      0x00\n        /* \"ShortStrings.sol\":2157:2173  byteLength(sstr) */\n      tag_286\n        /* \"ShortStrings.sol\":2168:2172  sstr */\n      dup4\n        /* \"ShortStrings.sol\":2157:2167  byteLength */\n      tag_287\n        /* \"ShortStrings.sol\":2157:2173  byteLength(sstr) */\n      jump\t// in\n    tag_286:\n        /* \"ShortStrings.sol\":2281:2295  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"ShortStrings.sol\":2292:2294  32 */\n      0x20\n        /* \"ShortStrings.sol\":2281:2295  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"ShortStrings.sol\":2143:2173  uint256 len = byteLength(sstr) */\n      swap2\n      swap3\n      pop\n        /* \"ShortStrings.sol\":2261:2278  string memory str */\n      0x00\n      swap2\n        /* \"ShortStrings.sol\":2281:2295  new string(32) */\n      swap1\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"ShortStrings.sol\":2371:2387  mstore(str, len) */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"ShortStrings.sol\":2416:2420  0x20 */\n      0x20\n        /* \"ShortStrings.sol\":2407:2421  add(str, 0x20) */\n      dup2\n      add\n        /* \"ShortStrings.sol\":2400:2428  mstore(add(str, 0x20), sstr) */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"ShortStrings.sol\":2371:2387  mstore(str, len) */\n      swap1\n        /* \"ShortStrings.sol\":2059:2464  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"ECDSA.sol\":5154:6682  function tryRecover(... */\n    tag_277:\n        /* \"ECDSA.sol\":5280:5287  address */\n      0x00\n      dup1\n        /* \"ECDSA.sol\":6229:6295  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"ECDSA.sol\":6204:6295  uint256(s) >... */\n      dup4\n      gt\n        /* \"ECDSA.sol\":6187:6382  if (... */\n      iszero\n      tag_294\n      jumpi\n      pop\n        /* \"ECDSA.sol\":6336:6337  0 */\n      0x00\n      swap1\n      pop\n        /* \"ECDSA.sol\":6340:6370  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"ECDSA.sol\":6320:6371  return (address(0), RecoverError.InvalidSignatureS) */\n      jump(tag_293)\n        /* \"ECDSA.sol\":6187:6382  if (... */\n    tag_294:\n        /* \"ECDSA.sol\":6493:6517  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"ECDSA.sol\":6476:6490  address signer */\n      0x00\n        /* \"ECDSA.sol\":6493:6517  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":12133:12158   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":12206:12210   */\n      0xff\n        /* \"#utility.yul\":12194:12211   */\n      dup9\n      and\n        /* \"#utility.yul\":12174:12192   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":12167:12212   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":12228:12246   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":12221:12255   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":12271:12289   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":12264:12298   */\n      dup6\n      swap1\n      mstore\n        /* \"ECDSA.sol\":6493:6517  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":12105:12124   */\n      0xa0\n      add\n        /* \"ECDSA.sol\":6493:6517  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ECDSA.sol\":6531:6551  signer == address(0) */\n      dup2\n      and\n        /* \"ECDSA.sol\":6527:6628  if (signer == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"ECDSA.sol\":6583:6584  0 */\n      0x00\n        /* \"ECDSA.sol\":6587:6616  RecoverError.InvalidSignature */\n      0x01\n        /* \"ECDSA.sol\":6567:6617  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_293)\n        /* \"ECDSA.sol\":6527:6628  if (signer == address(0)) {... */\n    tag_299:\n        /* \"ECDSA.sol\":6646:6652  signer */\n      swap2\n      pop\n        /* \"ECDSA.sol\":6654:6674  RecoverError.NoError */\n      0x00\n      swap1\n      pop\n        /* \"ECDSA.sol\":5154:6682  function tryRecover(... */\n    tag_293:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECDSA.sol\":569:1080  function _throwError(RecoverError error) private pure {... */\n    tag_279:\n        /* \"ECDSA.sol\":646:666  RecoverError.NoError */\n      0x00\n        /* \"ECDSA.sol\":637:642  error */\n      dup2\n        /* \"ECDSA.sol\":637:666  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_305\n      jumpi\n      tag_305\n      tag_303\n      jump\t// in\n    tag_305:\n      sub\n        /* \"ECDSA.sol\":633:1074  if (error == RecoverError.NoError) {... */\n      tag_306\n      jumpi\n        /* \"ECDSA.sol\":569:1080  function _throwError(RecoverError error) private pure {... */\n      pop\n      jump\t// out\n        /* \"ECDSA.sol\":633:1074  if (error == RecoverError.NoError) {... */\n    tag_306:\n        /* \"ECDSA.sol\":742:771  RecoverError.InvalidSignature */\n      0x01\n        /* \"ECDSA.sol\":733:738  error */\n      dup2\n        /* \"ECDSA.sol\":733:771  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_311\n      jumpi\n      tag_311\n      tag_303\n      jump\t// in\n    tag_311:\n      sub\n        /* \"ECDSA.sol\":729:1074  if (error == RecoverError.InvalidSignature) {... */\n      tag_312\n      jumpi\n        /* \"ECDSA.sol\":787:821  revert(\"ECDSA: invalid signature\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12643:12645   */\n      0x20\n        /* \"ECDSA.sol\":787:821  revert(\"ECDSA: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12625:12646   */\n      mstore\n        /* \"#utility.yul\":12682:12684   */\n      0x18\n        /* \"#utility.yul\":12662:12680   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12655:12685   */\n      mstore\n        /* \"#utility.yul\":12721:12747   */\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n        /* \"#utility.yul\":12701:12719   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12694:12748   */\n      mstore\n        /* \"#utility.yul\":12765:12783   */\n      0x64\n      add\n        /* \"ECDSA.sol\":787:821  revert(\"ECDSA: invalid signature\") */\n      tag_172\n        /* \"#utility.yul\":12441:12789   */\n      jump\n        /* \"ECDSA.sol\":729:1074  if (error == RecoverError.InvalidSignature) {... */\n    tag_312:\n        /* \"ECDSA.sol\":851:886  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"ECDSA.sol\":842:847  error */\n      dup2\n        /* \"ECDSA.sol\":842:886  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_319\n      jumpi\n      tag_319\n      tag_303\n      jump\t// in\n    tag_319:\n      sub\n        /* \"ECDSA.sol\":838:1074  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_320\n      jumpi\n        /* \"ECDSA.sol\":902:943  revert(\"ECDSA: invalid signature length\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12996:12998   */\n      0x20\n        /* \"ECDSA.sol\":902:943  revert(\"ECDSA: invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12978:12999   */\n      mstore\n        /* \"#utility.yul\":13035:13037   */\n      0x1f\n        /* \"#utility.yul\":13015:13033   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13008:13038   */\n      mstore\n        /* \"#utility.yul\":13074:13107   */\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n        /* \"#utility.yul\":13054:13072   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13047:13108   */\n      mstore\n        /* \"#utility.yul\":13125:13143   */\n      0x64\n      add\n        /* \"ECDSA.sol\":902:943  revert(\"ECDSA: invalid signature length\") */\n      tag_172\n        /* \"#utility.yul\":12794:13149   */\n      jump\n        /* \"ECDSA.sol\":838:1074  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_320:\n        /* \"ECDSA.sol\":973:1003  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"ECDSA.sol\":964:969  error */\n      dup2\n        /* \"ECDSA.sol\":964:1003  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_327\n      jumpi\n      tag_327\n      tag_303\n      jump\t// in\n    tag_327:\n      sub\n        /* \"ECDSA.sol\":960:1074  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_136\n      jumpi\n        /* \"ECDSA.sol\":1019:1063  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13356:13358   */\n      0x20\n        /* \"ECDSA.sol\":1019:1063  revert(\"ECDSA: invalid signature 's' value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13338:13359   */\n      mstore\n        /* \"#utility.yul\":13395:13397   */\n      0x22\n        /* \"#utility.yul\":13375:13393   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13368:13398   */\n      mstore\n        /* \"#utility.yul\":13434:13468   */\n      0x45434453413a20696e76616c6964207369676e6174757265202773272076616c\n        /* \"#utility.yul\":13414:13432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13407:13469   */\n      mstore\n      shl(0xf0, 0x7565)\n        /* \"#utility.yul\":13485:13503   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13478:13510   */\n      mstore\n        /* \"#utility.yul\":13527:13546   */\n      0x84\n      add\n        /* \"ECDSA.sol\":1019:1063  revert(\"ECDSA: invalid signature 's' value\") */\n      tag_172\n        /* \"#utility.yul\":13154:13552   */\n      jump\n        /* \"ShortStrings.sol\":2536:2781  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_287:\n        /* \"ShortStrings.sol\":2597:2604  uint256 */\n      0x00\n        /* \"ShortStrings.sol\":2669:2673  0xFF */\n      0xff\n        /* \"ShortStrings.sol\":2633:2673  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      dup3\n      and\n        /* \"ShortStrings.sol\":2696:2698  31 */\n      0x1f\n        /* \"ShortStrings.sol\":2687:2698  result > 31 */\n      dup2\n      gt\n        /* \"ShortStrings.sol\":2683:2752  if (result > 31) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"ShortStrings.sol\":2721:2741  InvalidShortString() */\n      mload(0x40)\n      shl(0xe2, 0x2cd44ac3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:437   */\n    tag_333:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_337:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_337)\n    tag_339:\n        /* \"#utility.yul\":160:163   */\n      pop\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":356:360   */\n      0x20\n        /* \"#utility.yul\":347:353   */\n      dup3\n        /* \"#utility.yul\":342:345   */\n      dup7\n        /* \"#utility.yul\":338:354   */\n      add\n        /* \"#utility.yul\":334:361   */\n      add\n        /* \"#utility.yul\":327:365   */\n      mstore\n        /* \"#utility.yul\":426:430   */\n      0x20\n        /* \"#utility.yul\":419:421   */\n      0x1f\n        /* \"#utility.yul\":415:422   */\n      not\n        /* \"#utility.yul\":410:412   */\n      0x1f\n        /* \"#utility.yul\":402:408   */\n      dup4\n        /* \"#utility.yul\":398:413   */\n      add\n        /* \"#utility.yul\":394:423   */\n      and\n        /* \"#utility.yul\":389:392   */\n      dup6\n        /* \"#utility.yul\":385:424   */\n      add\n        /* \"#utility.yul\":381:431   */\n      add\n        /* \"#utility.yul\":374:431   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:662   */\n    tag_29:\n        /* \"#utility.yul\":591:593   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup2\n        /* \"#utility.yul\":573:594   */\n      mstore\n        /* \"#utility.yul\":554:558   */\n      0x00\n        /* \"#utility.yul\":611:656   */\n      tag_341\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":637:655   */\n      add\n        /* \"#utility.yul\":629:635   */\n      dup5\n        /* \"#utility.yul\":611:656   */\n      tag_333\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":603:656   */\n      swap4\n        /* \"#utility.yul\":442:662   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":667:840   */\n    tag_334:\n        /* \"#utility.yul\":735:755   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":784:815   */\n      dup2\n      and\n        /* \"#utility.yul\":774:816   */\n      dup2\n      eq\n        /* \"#utility.yul\":764:834   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":764:834   */\n    tag_343:\n        /* \"#utility.yul\":667:840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1099   */\n    tag_32:\n        /* \"#utility.yul\":913:919   */\n      0x00\n        /* \"#utility.yul\":921:927   */\n      dup1\n        /* \"#utility.yul\":974:976   */\n      0x40\n        /* \"#utility.yul\":962:971   */\n      dup4\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":949:972   */\n      sub\n        /* \"#utility.yul\":945:977   */\n      slt\n        /* \"#utility.yul\":942:994   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":942:994   */\n    tag_345:\n        /* \"#utility.yul\":1013:1042   */\n      tag_346\n        /* \"#utility.yul\":1032:1041   */\n      dup4\n        /* \"#utility.yul\":1013:1042   */\n      tag_334\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1003:1042   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":845:1099   */\n      jump\t// out\n        /* \"#utility.yul\":1478:1806   */\n    tag_42:\n        /* \"#utility.yul\":1555:1561   */\n      0x00\n        /* \"#utility.yul\":1563:1569   */\n      dup1\n        /* \"#utility.yul\":1571:1577   */\n      0x00\n        /* \"#utility.yul\":1624:1626   */\n      0x60\n        /* \"#utility.yul\":1612:1621   */\n      dup5\n        /* \"#utility.yul\":1603:1610   */\n      dup7\n        /* \"#utility.yul\":1599:1622   */\n      sub\n        /* \"#utility.yul\":1595:1627   */\n      slt\n        /* \"#utility.yul\":1592:1644   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":1640:1641   */\n      0x00\n        /* \"#utility.yul\":1637:1638   */\n      dup1\n        /* \"#utility.yul\":1630:1642   */\n      revert\n        /* \"#utility.yul\":1592:1644   */\n    tag_350:\n        /* \"#utility.yul\":1663:1692   */\n      tag_351\n        /* \"#utility.yul\":1682:1691   */\n      dup5\n        /* \"#utility.yul\":1663:1692   */\n      tag_334\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1653:1692   */\n      swap3\n      pop\n        /* \"#utility.yul\":1711:1749   */\n      tag_352\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1734:1743   */\n      dup6\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1711:1749   */\n      tag_334\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1701:1749   */\n      swap2\n      pop\n        /* \"#utility.yul\":1796:1798   */\n      0x40\n        /* \"#utility.yul\":1785:1794   */\n      dup5\n        /* \"#utility.yul\":1781:1799   */\n      add\n        /* \"#utility.yul\":1768:1800   */\n      calldataload\n        /* \"#utility.yul\":1758:1800   */\n      swap1\n      pop\n        /* \"#utility.yul\":1478:1806   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2182:2362   */\n    tag_59:\n        /* \"#utility.yul\":2241:2247   */\n      0x00\n        /* \"#utility.yul\":2294:2296   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2273:2280   */\n      dup5\n        /* \"#utility.yul\":2269:2292   */\n      sub\n        /* \"#utility.yul\":2265:2297   */\n      slt\n        /* \"#utility.yul\":2262:2314   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":2310:2311   */\n      0x00\n        /* \"#utility.yul\":2307:2308   */\n      dup1\n        /* \"#utility.yul\":2300:2312   */\n      revert\n        /* \"#utility.yul\":2262:2314   */\n    tag_356:\n      pop\n        /* \"#utility.yul\":2333:2356   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2182:2362   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2553   */\n    tag_63:\n        /* \"#utility.yul\":2426:2432   */\n      0x00\n        /* \"#utility.yul\":2479:2481   */\n      0x20\n        /* \"#utility.yul\":2467:2476   */\n      dup3\n        /* \"#utility.yul\":2458:2465   */\n      dup5\n        /* \"#utility.yul\":2454:2477   */\n      sub\n        /* \"#utility.yul\":2450:2482   */\n      slt\n        /* \"#utility.yul\":2447:2499   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2492:2493   */\n      dup1\n        /* \"#utility.yul\":2485:2497   */\n      revert\n        /* \"#utility.yul\":2447:2499   */\n    tag_358:\n        /* \"#utility.yul\":2518:2547   */\n      tag_341\n        /* \"#utility.yul\":2537:2546   */\n      dup3\n        /* \"#utility.yul\":2518:2547   */\n      tag_334\n      jump\t// in\n        /* \"#utility.yul\":2558:3817   */\n    tag_78:\n        /* \"#utility.yul\":2964:2967   */\n      0xff\n        /* \"#utility.yul\":2959:2962   */\n      0xf8\n        /* \"#utility.yul\":2955:2968   */\n      shl\n        /* \"#utility.yul\":2947:2953   */\n      dup9\n        /* \"#utility.yul\":2943:2969   */\n      and\n        /* \"#utility.yul\":2932:2941   */\n      dup2\n        /* \"#utility.yul\":2925:2970   */\n      mstore\n        /* \"#utility.yul\":2906:2910   */\n      0x00\n        /* \"#utility.yul\":2989:2991   */\n      0x20\n        /* \"#utility.yul\":3027:3030   */\n      0xe0\n        /* \"#utility.yul\":3022:3024   */\n      dup2\n        /* \"#utility.yul\":3011:3020   */\n      dup5\n        /* \"#utility.yul\":3007:3025   */\n      add\n        /* \"#utility.yul\":3000:3031   */\n      mstore\n        /* \"#utility.yul\":3054:3100   */\n      tag_361\n        /* \"#utility.yul\":3095:3098   */\n      0xe0\n        /* \"#utility.yul\":3084:3093   */\n      dup5\n        /* \"#utility.yul\":3080:3099   */\n      add\n        /* \"#utility.yul\":3072:3078   */\n      dup11\n        /* \"#utility.yul\":3054:3100   */\n      tag_333\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3148:3157   */\n      dup4\n        /* \"#utility.yul\":3140:3146   */\n      dup2\n        /* \"#utility.yul\":3136:3158   */\n      sub\n        /* \"#utility.yul\":3131:3133   */\n      0x40\n        /* \"#utility.yul\":3120:3129   */\n      dup6\n        /* \"#utility.yul\":3116:3134   */\n      add\n        /* \"#utility.yul\":3109:3159   */\n      mstore\n        /* \"#utility.yul\":3182:3215   */\n      tag_362\n        /* \"#utility.yul\":3208:3214   */\n      dup2\n        /* \"#utility.yul\":3200:3206   */\n      dup11\n        /* \"#utility.yul\":3182:3215   */\n      tag_333\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3246:3248   */\n      0x60\n        /* \"#utility.yul\":3231:3249   */\n      dup6\n      add\n        /* \"#utility.yul\":3224:3258   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3295:3327   */\n      dup9\n      and\n        /* \"#utility.yul\":3289:3292   */\n      0x80\n        /* \"#utility.yul\":3274:3293   */\n      dup7\n      add\n        /* \"#utility.yul\":3267:3328   */\n      mstore\n        /* \"#utility.yul\":3315:3318   */\n      0xa0\n        /* \"#utility.yul\":3344:3363   */\n      dup6\n      add\n        /* \"#utility.yul\":3337:3372   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":3409:3431   */\n      dup5\n      dup2\n      sub\n        /* \"#utility.yul\":3403:3406   */\n      0xc0\n        /* \"#utility.yul\":3388:3407   */\n      dup7\n      add\n        /* \"#utility.yul\":3381:3432   */\n      mstore\n        /* \"#utility.yul\":3481:3494   */\n      dup6\n      mload\n        /* \"#utility.yul\":3503:3525   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3579:3594   */\n      dup4\n      dup8\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":3541:3556   */\n      swap1\n      dup4\n      add\n      swap1\n      0x00\n        /* \"#utility.yul\":3622:3791   */\n    tag_363:\n        /* \"#utility.yul\":3636:3642   */\n      dup2\n        /* \"#utility.yul\":3633:3634   */\n      dup2\n        /* \"#utility.yul\":3630:3643   */\n      lt\n        /* \"#utility.yul\":3622:3791   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":3697:3710   */\n      dup4\n      mload\n        /* \"#utility.yul\":3685:3711   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3766:3781   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3731:3743   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3658:3659   */\n      0x01\n        /* \"#utility.yul\":3651:3660   */\n      add\n        /* \"#utility.yul\":3622:3791   */\n      jump(tag_363)\n    tag_365:\n      pop\n        /* \"#utility.yul\":3808:3811   */\n      swap1\n      swap13\n        /* \"#utility.yul\":2558:3817   */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4723   */\n    tag_96:\n        /* \"#utility.yul\":4141:4147   */\n      0x00\n        /* \"#utility.yul\":4149:4155   */\n      dup1\n        /* \"#utility.yul\":4157:4163   */\n      0x00\n        /* \"#utility.yul\":4165:4171   */\n      dup1\n        /* \"#utility.yul\":4173:4179   */\n      0x00\n        /* \"#utility.yul\":4181:4187   */\n      dup1\n        /* \"#utility.yul\":4189:4195   */\n      0x00\n        /* \"#utility.yul\":4242:4245   */\n      0xe0\n        /* \"#utility.yul\":4230:4239   */\n      dup9\n        /* \"#utility.yul\":4221:4228   */\n      dup11\n        /* \"#utility.yul\":4217:4240   */\n      sub\n        /* \"#utility.yul\":4213:4246   */\n      slt\n        /* \"#utility.yul\":4210:4263   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4259:4260   */\n      0x00\n        /* \"#utility.yul\":4256:4257   */\n      dup1\n        /* \"#utility.yul\":4249:4261   */\n      revert\n        /* \"#utility.yul\":4210:4263   */\n    tag_368:\n        /* \"#utility.yul\":4282:4311   */\n      tag_369\n        /* \"#utility.yul\":4301:4310   */\n      dup9\n        /* \"#utility.yul\":4282:4311   */\n      tag_334\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4272:4311   */\n      swap7\n      pop\n        /* \"#utility.yul\":4330:4368   */\n      tag_370\n        /* \"#utility.yul\":4364:4366   */\n      0x20\n        /* \"#utility.yul\":4353:4362   */\n      dup10\n        /* \"#utility.yul\":4349:4367   */\n      add\n        /* \"#utility.yul\":4330:4368   */\n      tag_334\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4320:4368   */\n      swap6\n      pop\n        /* \"#utility.yul\":4415:4417   */\n      0x40\n        /* \"#utility.yul\":4404:4413   */\n      dup9\n        /* \"#utility.yul\":4400:4418   */\n      add\n        /* \"#utility.yul\":4387:4419   */\n      calldataload\n        /* \"#utility.yul\":4377:4419   */\n      swap5\n      pop\n        /* \"#utility.yul\":4466:4468   */\n      0x60\n        /* \"#utility.yul\":4455:4464   */\n      dup9\n        /* \"#utility.yul\":4451:4469   */\n      add\n        /* \"#utility.yul\":4438:4470   */\n      calldataload\n        /* \"#utility.yul\":4428:4470   */\n      swap4\n      pop\n        /* \"#utility.yul\":4520:4523   */\n      0x80\n        /* \"#utility.yul\":4509:4518   */\n      dup9\n        /* \"#utility.yul\":4505:4524   */\n      add\n        /* \"#utility.yul\":4492:4525   */\n      calldataload\n        /* \"#utility.yul\":4565:4569   */\n      0xff\n        /* \"#utility.yul\":4558:4563   */\n      dup2\n        /* \"#utility.yul\":4554:4570   */\n      and\n        /* \"#utility.yul\":4547:4552   */\n      dup2\n        /* \"#utility.yul\":4544:4571   */\n      eq\n        /* \"#utility.yul\":4534:4589   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4582:4583   */\n      dup1\n        /* \"#utility.yul\":4575:4587   */\n      revert\n        /* \"#utility.yul\":4534:4589   */\n    tag_371:\n        /* \"#utility.yul\":4030:4723   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":4608:4613   */\n      swap5\n        /* \"#utility.yul\":4660:4663   */\n      0xa0\n        /* \"#utility.yul\":4645:4664   */\n      dup5\n      add\n        /* \"#utility.yul\":4632:4665   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4712:4715   */\n      0xc0\n        /* \"#utility.yul\":4697:4716   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4684:4717   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":4030:4723   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4728:4988   */\n    tag_100:\n        /* \"#utility.yul\":4796:4802   */\n      0x00\n        /* \"#utility.yul\":4804:4810   */\n      dup1\n        /* \"#utility.yul\":4857:4859   */\n      0x40\n        /* \"#utility.yul\":4845:4854   */\n      dup4\n        /* \"#utility.yul\":4836:4843   */\n      dup6\n        /* \"#utility.yul\":4832:4855   */\n      sub\n        /* \"#utility.yul\":4828:4860   */\n      slt\n        /* \"#utility.yul\":4825:4877   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":4873:4874   */\n      0x00\n        /* \"#utility.yul\":4870:4871   */\n      dup1\n        /* \"#utility.yul\":4863:4875   */\n      revert\n        /* \"#utility.yul\":4825:4877   */\n    tag_373:\n        /* \"#utility.yul\":4896:4925   */\n      tag_374\n        /* \"#utility.yul\":4915:4924   */\n      dup4\n        /* \"#utility.yul\":4896:4925   */\n      tag_334\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4886:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4944:4982   */\n      tag_375\n        /* \"#utility.yul\":4978:4980   */\n      0x20\n        /* \"#utility.yul\":4967:4976   */\n      dup5\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4944:4982   */\n      tag_334\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4934:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4728:4988   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4993:5373   */\n    tag_108:\n        /* \"#utility.yul\":5072:5073   */\n      0x01\n        /* \"#utility.yul\":5068:5080   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5115:5127   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5136:5197   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5190:5194   */\n      0x7f\n        /* \"#utility.yul\":5182:5188   */\n      dup3\n        /* \"#utility.yul\":5178:5195   */\n      and\n        /* \"#utility.yul\":5168:5195   */\n      swap2\n      pop\n        /* \"#utility.yul\":5136:5197   */\n    tag_377:\n        /* \"#utility.yul\":5243:5245   */\n      0x20\n        /* \"#utility.yul\":5235:5241   */\n      dup3\n        /* \"#utility.yul\":5232:5246   */\n      lt\n        /* \"#utility.yul\":5212:5230   */\n      dup2\n        /* \"#utility.yul\":5209:5247   */\n      sub\n        /* \"#utility.yul\":5206:5367   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5289:5299   */\n      0x4e487b71\n        /* \"#utility.yul\":5284:5287   */\n      0xe0\n        /* \"#utility.yul\":5280:5300   */\n      shl\n        /* \"#utility.yul\":5277:5278   */\n      0x00\n        /* \"#utility.yul\":5270:5301   */\n      mstore\n        /* \"#utility.yul\":5324:5328   */\n      0x22\n        /* \"#utility.yul\":5321:5322   */\n      0x04\n        /* \"#utility.yul\":5314:5329   */\n      mstore\n        /* \"#utility.yul\":5352:5356   */\n      0x24\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5357   */\n      revert\n        /* \"#utility.yul\":5378:5600   */\n    tag_134:\n        /* \"#utility.yul\":5443:5452   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5464:5474   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5461:5594   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":5516:5526   */\n      0x4e487b71\n        /* \"#utility.yul\":5511:5514   */\n      0xe0\n        /* \"#utility.yul\":5507:5527   */\n      shl\n        /* \"#utility.yul\":5504:5505   */\n      0x00\n        /* \"#utility.yul\":5497:5528   */\n      mstore\n        /* \"#utility.yul\":5551:5555   */\n      0x11\n        /* \"#utility.yul\":5548:5549   */\n      0x04\n        /* \"#utility.yul\":5541:5556   */\n      mstore\n        /* \"#utility.yul\":5579:5583   */\n      0x24\n        /* \"#utility.yul\":5576:5577   */\n      0x00\n        /* \"#utility.yul\":5569:5584   */\n      revert\n        /* \"#utility.yul\":12309:12436   */\n    tag_303:\n        /* \"#utility.yul\":12370:12380   */\n      0x4e487b71\n        /* \"#utility.yul\":12365:12368   */\n      0xe0\n        /* \"#utility.yul\":12361:12381   */\n      shl\n        /* \"#utility.yul\":12358:12359   */\n      0x00\n        /* \"#utility.yul\":12351:12382   */\n      mstore\n        /* \"#utility.yul\":12401:12405   */\n      0x21\n        /* \"#utility.yul\":12398:12399   */\n      0x04\n        /* \"#utility.yul\":12391:12406   */\n      mstore\n        /* \"#utility.yul\":12425:12429   */\n      0x24\n        /* \"#utility.yul\":12422:12423   */\n      0x00\n        /* \"#utility.yul\":12415:12430   */\n      revert\n\n    auxdata: 0xa2646970667358221220327d976774b70bbb2aade783f6253e80f70d8a3109bedd37dff3e2b5bfded7fd64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1338": {
									"entryPoint": null,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2522": {
									"entryPoint": null,
									"id": 2522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3307": {
									"entryPoint": null,
									"id": 3307,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_554": {
									"entryPoint": null,
									"id": 554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_710": {
									"entryPoint": null,
									"id": 710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1251": {
									"entryPoint": null,
									"id": 1251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1240": {
									"entryPoint": 823,
									"id": 1240,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1069": {
									"entryPoint": 557,
									"id": 1069,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2610": {
									"entryPoint": 475,
									"id": 2610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_3019": {
									"entryPoint": null,
									"id": 3019,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_2768": {
									"entryPoint": 418,
									"id": 2768,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_2670": {
									"entryPoint": 756,
									"id": 2670,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6441:18",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:18"
															},
															"nodeType": "YulIf",
															"src": "289:61:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:18"
															},
															"nodeType": "YulIf",
															"src": "359:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:18",
														"type": ""
													}
												],
												"src": "146:380:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:18",
														"type": ""
													}
												],
												"src": "531:121:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:18",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:18",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:18"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:18"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:18",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:18"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:18"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:18"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:18"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:18"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:18"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:18"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:18"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:18",
																			"statements": []
																		},
																		"src": "1104:82:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:18"
															},
															"nodeType": "YulIf",
															"src": "748:448:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:18",
														"type": ""
													}
												],
												"src": "657:545:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:18",
														"type": ""
													}
												],
												"src": "1207:166:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:18",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:18"
															},
															"nodeType": "YulIf",
															"src": "1517:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:18"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:18",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:18",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:18"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:18"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:18"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:18"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:18"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:18"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:18"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:18",
																					"statements": []
																				},
																				"src": "1964:236:18"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:18",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:18"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:18"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:18"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:18"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:18"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:18"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:18"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:18",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:18",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:18"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:18"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:18"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:18"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:18"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:18",
														"type": ""
													}
												],
												"src": "1378:1352:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2796:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:358:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:16:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2956:1:18",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:7:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:16:18",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2975:7:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2991:13:18",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2999:5:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2991:4:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3055:228:18",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3100:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3102:16:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3102:18:18"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3102:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3075:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3089:1:18",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3085:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3085:6:18"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3093:4:18"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3081:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3081:17:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3072:2:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:27:18"
																		},
																		"nodeType": "YulIf",
																		"src": "3069:53:18"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3161:29:18",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3163:25:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3176:5:18"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3183:4:18"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3172:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3172:16:18"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3163:5:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3142:8:18"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3152:7:18"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3138:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3138:22:18"
																		},
																		"nodeType": "YulIf",
																		"src": "3135:55:18"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:23:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3215:4:18"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3221:4:18"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3203:4:18"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3239:34:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3255:7:18"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3264:8:18"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3251:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:22:18"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3239:8:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3024:8:18"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3021:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:21:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3043:3:18",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3017:3:18",
																"statements": []
															},
															"src": "3013:270:18"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2895:5:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2902:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2915:5:18",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2922:4:18",
														"type": ""
													}
												],
												"src": "2867:422:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:747:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:52:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3405:10:18",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3414:1:18",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:18"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3428:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3373:8:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:16:18"
															},
															"nodeType": "YulIf",
															"src": "3363:80:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3476:52:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:10:18",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3499:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:18"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3513:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:12:18"
															},
															"nodeType": "YulIf",
															"src": "3452:76:18"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3564:52:18",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3578:10:18",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:18",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:18"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3601:5:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3557:59:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3632:123:18",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3667:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3669:16:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3669:18:18"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3669:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3652:8:18"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:3:18",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3649:2:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3649:17:18"
																				},
																				"nodeType": "YulIf",
																				"src": "3646:43:18"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3702:25:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3715:8:18"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3725:1:18",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3711:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:16:18"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3702:5:18"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3740:5:18"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3625:130:18",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:18",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3544:4:18"
															},
															"nodeType": "YulSwitch",
															"src": "3537:218:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:70:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3867:28:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3880:4:18"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3886:8:18"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3876:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:19:18"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:18"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3908:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3777:4:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3783:2:18",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3774:2:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3791:8:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3801:2:18",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3788:2:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:35:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3814:4:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3820:3:18",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3829:8:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3826:2:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:36:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:77:18"
															},
															"nodeType": "YulIf",
															"src": "3764:159:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3932:57:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:18"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3980:8:18"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3955:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:34:18"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3936:7:18",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3945:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:7:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4021:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:6:18"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:19:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:18"
															},
															"nodeType": "YulIf",
															"src": "3998:58:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:7:18"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:20:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4065:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3324:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3330:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3343:5:18",
														"type": ""
													}
												],
												"src": "3294:806:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:72:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4183:56:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4223:8:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:4:18",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:19:18"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4192:20:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:47:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4183:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4144:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4150:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4163:5:18",
														"type": ""
													}
												],
												"src": "4105:140:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:116:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4327:1:18"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4330:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:9:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4312:7:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4390:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4392:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4392:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4392:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4361:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4354:6:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4354:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4368:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4375:7:18"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4384:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4371:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4371:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4365:2:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4365:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4351:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:37:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:45:18"
															},
															"nodeType": "YulIf",
															"src": "4341:71:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4281:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4284:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4290:7:18",
														"type": ""
													}
												],
												"src": "4250:168:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4636:276:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4646:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4658:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4669:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4646:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4689:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4700:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:18"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4743:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4770:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4781:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:18:18"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4786:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4759:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4813:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4824:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:18:18"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4829:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4802:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4802:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "4877:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4893:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4898:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4889:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4889:11:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4902:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4873:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:61:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4573:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4584:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4592:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4600:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4608:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4616:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4627:4:18",
														"type": ""
													}
												],
												"src": "4423:489:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5091:181:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5108:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5101:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5101:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5101:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5142:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5153:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5138:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5131:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5181:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5192:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5177:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:18:18"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5197:33:18",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5170:61:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5240:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5252:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5240:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5068:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5082:4:18",
														"type": ""
													}
												],
												"src": "4917:355:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5325:77:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5335:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5346:1:18"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5349:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5335:3:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5374:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5376:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5376:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5376:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5366:1:18"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5369:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5363:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:10:18"
															},
															"nodeType": "YulIf",
															"src": "5360:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5308:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5311:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5317:3:18",
														"type": ""
													}
												],
												"src": "5277:125:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:76:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5518:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5526:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5560:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5553:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5553:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5477:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5488:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5499:4:18",
														"type": ""
													}
												],
												"src": "5407:177:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5710:427:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5720:12:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5730:2:18",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5724:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5748:9:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5759:2:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5741:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5741:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5741:21:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5771:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5791:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5785:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5785:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5775:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5818:9:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5829:2:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5814:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5814:18:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5834:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5807:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5807:34:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5850:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5859:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5854:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5919:90:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5948:9:18"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5959:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5944:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5944:17:18"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5963:2:18",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5940:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5940:26:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5982:6:18"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5990:1:18"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5978:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5978:14:18"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5994:2:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5974:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5974:23:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5968:5:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5968:30:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5933:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5933:66:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5933:66:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5880:1:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5877:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5877:13:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5891:19:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5893:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5902:1:18"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5905:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5898:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5898:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5893:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5873:3:18",
																"statements": []
															},
															"src": "5869:140:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6033:9:18"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6044:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6029:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6029:22:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:31:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6058:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6018:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6018:42:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6018:42:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6069:62:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6085:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6104:6:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6112:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6100:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6100:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6121:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6117:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6117:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6096:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6096:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6081:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6081:45:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:54:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6069:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5679:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5690:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5701:4:18",
														"type": ""
													}
												],
												"src": "5589:548:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6236:203:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6246:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6266:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6260:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:12:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6250:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6281:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "6300:5:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6307:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:16:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6290:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6281:5:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6350:83:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6364:59:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "6377:5:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6392:1:18",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6399:4:18",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nodeType": "YulIdentifier",
																											"src": "6405:6:18"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "6395:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6395:17:18"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nodeType": "YulIdentifier",
																								"src": "6388:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6388:25:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6419:1:18",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6415:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6415:6:18"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6384:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6384:38:18"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6373:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6373:50:18"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6364:5:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6328:6:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6336:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6325:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:16:18"
															},
															"nodeType": "YulIf",
															"src": "6322:111:18"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6216:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6226:5:18",
														"type": ""
													}
												],
												"src": "6142:297:18"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101606040523480156200001257600080fd5b50604051806040016040528060078152602001660a0d0decadcd2f60cb1b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060078152602001660a0d0decadcd2f60cb1b815250604051806040016040528060048152602001630a0909cb60e31b81525081600390816200009c9190620003e0565b506004620000ab8282620003e0565b50620000bd91508390506005620001a2565b61012052620000ce816006620001a2565b61014052815160208084019190912060e052815190820120610100524660a0526200015c60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200017133620001db565b6200019c33620001846012600a620005bf565b6200019690655af3107a4000620005d7565b6200022d565b6200067c565b6000602083511015620001c257620001ba83620002f4565b9050620001d5565b81620001cf8482620003e0565b5060ff90505b92915050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600260008282546200029d9190620005f1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f8151111562000322578260405163305a27a960e01b815260040162000280919062000607565b80516200032f8262000657565b179392505050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200036757607f821691505b6020821081036200038857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033757600081815260208120601f850160051c81016020861015620003b75750805b601f850160051c820191505b81811015620003d857828155600101620003c3565b505050505050565b81516001600160401b03811115620003fc57620003fc6200033c565b62000414816200040d845462000352565b846200038e565b602080601f8311600181146200044c5760008415620004335750858301515b600019600386901b1c1916600185901b178555620003d8565b600085815260208120601f198616915b828110156200047d578886015182559484019460019091019084016200045c565b50858210156200049c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000503578160001904821115620004e757620004e7620004ac565b80851615620004f557918102915b93841c9390800290620004c7565b509250929050565b6000826200051c57506001620001d5565b816200052b57506000620001d5565b81600181146200054457600281146200054f576200056f565b6001915050620001d5565b60ff841115620005635762000563620004ac565b50506001821b620001d5565b5060208310610133831016604e8410600b841016171562000594575081810a620001d5565b620005a08383620004c2565b8060001904821115620005b757620005b7620004ac565b029392505050565b6000620005d060ff8416836200050b565b9392505050565b8082028115828204841417620001d557620001d5620004ac565b80820180821115620001d557620001d5620004ac565b600060208083528351808285015260005b81811015620006365785810183015185820160400152820162000618565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003885760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051611422620006d7600039600061045c0152600061043101526000610b6b01526000610b4301526000610a9e01526000610ac801526000610af201526114226000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806379cc6790116100ad578063a457c2d711610071578063a457c2d71461026b578063a9059cbb1461027e578063d505accf14610291578063dd62ed3e146102a4578063f2fde38b146102b757600080fd5b806379cc6790146102075780637ecebe001461021a57806384b0196e1461022d5780638da5cb5b1461024857806395d89b411461026357600080fd5b80633644e515116100f45780633644e515146101a657806339509351146101ae57806342966c68146101c157806370a08231146101d6578063715018a6146101ff57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102ca565b6040516101469190611175565b60405180910390f35b61016261015d3660046111ab565b61035c565b6040519015158152602001610146565b6002545b604051908152602001610146565b6101626101923660046111d5565b610376565b60405160128152602001610146565b61017661039a565b6101626101bc3660046111ab565b6103a9565b6101d46101cf366004611211565b6103cb565b005b6101766101e436600461122a565b6001600160a01b031660009081526020819052604090205490565b6101d46103d8565b6101d46102153660046111ab565b6103ec565b61017661022836600461122a565b610405565b610235610423565b6040516101469796959493929190611245565b6009546040516001600160a01b039091168152602001610146565b6101396104ac565b6101626102793660046111ab565b6104bb565b61016261028c3660046111ab565b61053b565b6101d461029f3660046112db565b610549565b6101766102b236600461134e565b6106ad565b6101d46102c536600461122a565b6106d8565b6060600380546102d990611381565b80601f016020809104026020016040519081016040528092919081815260200182805461030590611381565b80156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b60003361036a81858561074e565b60019150505b92915050565b600033610384858285610873565b61038f8585856108ed565b506001949350505050565b60006103a4610a91565b905090565b60003361036a8185856103bc83836106ad565b6103c691906113b5565b61074e565b6103d53382610bbc565b50565b6103e0610ce6565b6103ea6000610d40565b565b6103f7823383610873565b6104018282610bbc565b5050565b6001600160a01b038116600090815260076020526040812054610370565b6000606080828080836104577f00000000000000000000000000000000000000000000000000000000000000006005610d92565b6104827f00000000000000000000000000000000000000000000000000000000000000006006610d92565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102d990611381565b600033816104c982866106ad565b90508381101561052e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61038f828686840361074e565b60003361036a8185856108ed565b834211156105995760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610525565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105c88c610e3d565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061062382610e65565b9050600061063382878787610e92565b9050896001600160a01b0316816001600160a01b0316146106965760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610525565b6106a18a8a8a61074e565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6106e0610ce6565b6001600160a01b0381166107455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610525565b6103d581610d40565b6001600160a01b0383166107b05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610525565b6001600160a01b0382166108115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610525565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061087f84846106ad565b905060001981146108e757818110156108da5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610525565b6108e7848484840361074e565b50505050565b6001600160a01b0383166109515760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610525565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610525565b6001600160a01b03831660009081526020819052604090205481811015610a2b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610525565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108e7565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610aea57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b1457507f000000000000000000000000000000000000000000000000000000000000000090565b6103a4604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610c1c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610525565b6001600160a01b03821660009081526020819052604090205481811015610c905760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610525565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610866565b6009546001600160a01b031633146103ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610525565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff8314610dac57610da583610eba565b9050610370565b818054610db890611381565b80601f0160208091040260200160405190810160405280929190818152602001828054610de490611381565b8015610e315780601f10610e0657610100808354040283529160200191610e31565b820191906000526020600020905b815481529060010190602001808311610e1457829003601f168201915b50505050509050610370565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000610370610e72610a91565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610ea387878787610ef9565b91509150610eb081610fbd565b5095945050505050565b60606000610ec783611107565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f305750600090506003610fb4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f84573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610fad57600060019250925050610fb4565b9150600090505b94509492505050565b6000816004811115610fd157610fd16113d6565b03610fd95750565b6001816004811115610fed57610fed6113d6565b0361103a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610525565b600281600481111561104e5761104e6113d6565b0361109b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610525565b60038160048111156110af576110af6113d6565b036103d55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610525565b600060ff8216601f81111561037057604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b8181101561115557602081850181015186830182015201611139565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611188602083018461112f565b9392505050565b80356001600160a01b03811681146111a657600080fd5b919050565b600080604083850312156111be57600080fd5b6111c78361118f565b946020939093013593505050565b6000806000606084860312156111ea57600080fd5b6111f38461118f565b92506112016020850161118f565b9150604084013590509250925092565b60006020828403121561122357600080fd5b5035919050565b60006020828403121561123c57600080fd5b6111888261118f565b60ff60f81b881681526000602060e08184015261126560e084018a61112f565b8381036040850152611277818a61112f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156112c9578351835292840192918401916001016112ad565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156112f657600080fd5b6112ff8861118f565b965061130d6020890161118f565b95506040880135945060608801359350608088013560ff8116811461133157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561136157600080fd5b61136a8361118f565b91506113786020840161118f565b90509250929050565b600181811c9082168061139557607f821691505b602082108103610e5f57634e487b7160e01b600052602260045260246000fd5b8082018082111561037057634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220327d976774b70bbb2aade783f6253e80f70d8a3109bedd37dff3e2b5bfded7fd64736f6c63430008130033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xA0D0DECADCD2F PUSH1 0xCB SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xA0D0DECADCD2F PUSH1 0xCB SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xA0909CB PUSH1 0xE3 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x9C SWAP2 SWAP1 PUSH3 0x3E0 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xAB DUP3 DUP3 PUSH3 0x3E0 JUMP JUMPDEST POP PUSH3 0xBD SWAP2 POP DUP4 SWAP1 POP PUSH1 0x5 PUSH3 0x1A2 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xCE DUP2 PUSH1 0x6 PUSH3 0x1A2 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x15C PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x171 CALLER PUSH3 0x1DB JUMP JUMPDEST PUSH3 0x19C CALLER PUSH3 0x184 PUSH1 0x12 PUSH1 0xA PUSH3 0x5BF JUMP JUMPDEST PUSH3 0x196 SWAP1 PUSH6 0x5AF3107A4000 PUSH3 0x5D7 JUMP JUMPDEST PUSH3 0x22D JUMP JUMPDEST PUSH3 0x67C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1C2 JUMPI PUSH3 0x1BA DUP4 PUSH3 0x2F4 JUMP JUMPDEST SWAP1 POP PUSH3 0x1D5 JUMP JUMPDEST DUP2 PUSH3 0x1CF DUP5 DUP3 PUSH3 0x3E0 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x289 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x29D SWAP2 SWAP1 PUSH3 0x5F1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x322 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x280 SWAP2 SWAP1 PUSH3 0x607 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x32F DUP3 PUSH3 0x657 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x367 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x388 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x337 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3B7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3C3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3FC JUMPI PUSH3 0x3FC PUSH3 0x33C JUMP JUMPDEST PUSH3 0x414 DUP2 PUSH3 0x40D DUP5 SLOAD PUSH3 0x352 JUMP JUMPDEST DUP5 PUSH3 0x38E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x44C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x433 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x47D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x45C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x49C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x503 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4E7 JUMPI PUSH3 0x4E7 PUSH3 0x4AC JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x4F5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4C7 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x51C JUMPI POP PUSH1 0x1 PUSH3 0x1D5 JUMP JUMPDEST DUP2 PUSH3 0x52B JUMPI POP PUSH1 0x0 PUSH3 0x1D5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x544 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x54F JUMPI PUSH3 0x56F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x1D5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x563 JUMPI PUSH3 0x563 PUSH3 0x4AC JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x1D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x594 JUMPI POP DUP2 DUP2 EXP PUSH3 0x1D5 JUMP JUMPDEST PUSH3 0x5A0 DUP4 DUP4 PUSH3 0x4C2 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x5B7 JUMPI PUSH3 0x5B7 PUSH3 0x4AC JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5D0 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x50B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x1D5 JUMPI PUSH3 0x1D5 PUSH3 0x4AC JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x1D5 JUMPI PUSH3 0x1D5 PUSH3 0x4AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x636 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x618 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x388 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1422 PUSH3 0x6D7 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x45C ADD MSTORE PUSH1 0x0 PUSH2 0x431 ADD MSTORE PUSH1 0x0 PUSH2 0xB6B ADD MSTORE PUSH1 0x0 PUSH2 0xB43 ADD MSTORE PUSH1 0x0 PUSH2 0xA9E ADD MSTORE PUSH1 0x0 PUSH2 0xAC8 ADD MSTORE PUSH1 0x0 PUSH2 0xAF2 ADD MSTORE PUSH2 0x1422 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x162 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x305 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x352 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x327 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x352 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x335 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36A DUP2 DUP6 DUP6 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x384 DUP6 DUP3 DUP6 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x38F DUP6 DUP6 DUP6 PUSH2 0x8ED JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36A DUP2 DUP6 DUP6 PUSH2 0x3BC DUP4 DUP4 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x3D5 CALLER DUP3 PUSH2 0xBBC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x3EA PUSH1 0x0 PUSH2 0xD40 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F7 DUP3 CALLER DUP4 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x401 DUP3 DUP3 PUSH2 0xBBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x457 PUSH32 0x0 PUSH1 0x5 PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x482 PUSH32 0x0 PUSH1 0x6 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4C9 DUP3 DUP7 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x74E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36A DUP2 DUP6 DUP6 PUSH2 0x8ED JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x5C8 DUP13 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x623 DUP3 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x633 DUP3 DUP8 DUP8 DUP8 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x6A1 DUP11 DUP11 DUP11 PUSH2 0x74E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6E0 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP5 DUP5 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8E7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x8E7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x74E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xAEA JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB14 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3A4 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xDAC JUMPI PUSH2 0xDA5 DUP4 PUSH2 0xEBA JUMP JUMPDEST SWAP1 POP PUSH2 0x370 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xDB8 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE4 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE06 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 PUSH2 0xE72 PUSH2 0xA91 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xEA3 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEF9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xEB0 DUP2 PUSH2 0xFBD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEC7 DUP4 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0xF30 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFAD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xFB4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFD1 JUMPI PUSH2 0xFD1 PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0xFD9 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH2 0xFED PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0x103A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x104E JUMPI PUSH2 0x104E PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0x109B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1139 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1188 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C7 DUP4 PUSH2 0x118F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP5 PUSH2 0x118F JUMP JUMPDEST SWAP3 POP PUSH2 0x1201 PUSH1 0x20 DUP6 ADD PUSH2 0x118F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1188 DUP3 PUSH2 0x118F JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x1265 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x112F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1277 DUP2 DUP11 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12C9 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x12AD JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12FF DUP9 PUSH2 0x118F JUMP JUMPDEST SWAP7 POP PUSH2 0x130D PUSH1 0x20 DUP10 ADD PUSH2 0x118F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136A DUP4 PUSH2 0x118F JUMP JUMPDEST SWAP2 POP PUSH2 0x1378 PUSH1 0x20 DUP5 ADD PUSH2 0x118F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1395 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x370 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH30 0x976774B70BBB2AADE783F6253E80F70D8A3109BEDD37DFF3E2B5BFDED7FD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "212:203:17:-:0;;;281:132;;;;;;;;;;1773:52:6;;;;;;;;;;;;;-1:-1:-1;;;1773:52:6;;;1812:4;3184:431:3;;;;;;;;;;;;;-1:-1:-1;;;3184:431:3;;;1959:113:4;;;;;;;;;;;;;-1:-1:-1;;;1959:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1959:113:4;;;2033:5;2025;:13;;;;;;:::i;:::-;-1:-1:-1;2048:7:4;:17;2058:7;2048;:17;:::i;:::-;-1:-1:-1;3257:45:3;;-1:-1:-1;3257:4:3;;-1:-1:-1;3288:13:3;3257:30;:45::i;:::-;3249:53;;3323:51;:7;3357:16;3323:33;:51::i;:::-;3312:62;;3398:22;;;;;;;;;;3384:36;;3447:25;;;;;;3430:42;;3500:13;3483:30;;3548:23;4153:11;;4186:14;;4089:199;;;1913:117;4089:199;;;4682:25:18;4723:18;;;4716:34;;;;4766:18;;;4759:34;4222:13:3;4809:18:18;;;4802:34;4265:4:3;4852:19:18;;;4845:61;4024:7:3;;4654:19:18;;4089:199:3;;;;;;;;;;;;4062:240;;;;;;4043:259;;3969:340;;3548:23;3523:48;;-1:-1:-1;;3603:4:3;3581:27;;-1:-1:-1;951:32:12;719:10:0;951:18:12;:32::i;:::-;353:53:17::2;359:10;389:16;3165:2:4::0;389::17::2;:16;:::i;:::-;371:34;::::0;:15:::2;:34;:::i;:::-;353:5;:53::i;:::-;212:203:::0;;2895:341:13;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:13;;-1:-1:-1;3014:216:13;2895:341;;;;:::o;2475:187:12:-;2567:6;;;-1:-1:-1;;;;;2583:17:12;;;-1:-1:-1;;;;;;2583:17:12;;;;;;;2615:40;;2567:6;;;2583:17;2567:6;;2615:40;;2548:16;;2615:40;2538:124;2475:187;:::o;8751:535:4:-;-1:-1:-1;;;;;8834:21:4;;8826:65;;;;-1:-1:-1;;;8826:65:4;;5119:2:18;8826:65:4;;;5101:21:18;5158:2;5138:18;;;5131:30;5197:33;5177:18;;;5170:61;5248:18;;8826:65:4;;;;;;;;;8978:6;8962:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9130:18:4;;:9;:18;;;;;;;;;;;:28;;;;;;9183:37;5553:25:18;;;9183:37:4;;5526:18:18;9183:37:4;;;;;;;8751:535;;:::o;1689:286:13:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:13;;;;;;;;:::i;1817:72::-;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:13:o;12410:121:4:-;;;;:::o;14:127:18:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:18;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:18;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:18;;;2580:26;2531:89;-1:-1:-1;;1335:1:18;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:18;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:18;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:18;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:18:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:18;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:18;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:18;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:18;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;3294:806;-1:-1:-1;;;3294:806:18:o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:18:o;4250:168::-;4323:9;;;4354;;4371:15;;;4365:22;;4351:37;4341:71;;4392:18;;:::i;5277:125::-;5342:9;;;5363:10;;;5360:36;;;5376:18;;:::i;5589:548::-;5701:4;5730:2;5759;5748:9;5741:21;5791:6;5785:13;5834:6;5829:2;5818:9;5814:18;5807:34;5859:1;5869:140;5883:6;5880:1;5877:13;5869:140;;;5978:14;;;5974:23;;5968:30;5944:17;;;5963:2;5940:26;5933:66;5898:10;;5869:140;;;5873:3;6058:1;6053:2;6044:6;6033:9;6029:22;6025:31;6018:42;6128:2;6121;6117:7;6112:2;6104:6;6100:15;6096:29;6085:9;6081:45;6077:54;6069:62;;;;5589:548;;;;:::o;6142:297::-;6260:12;;6307:4;6296:16;;;6290:23;;6260:12;6325:16;;6322:111;;;-1:-1:-1;;6399:4:18;6395:17;;;;6392:1;6388:25;6384:38;6373:50;;6142:297;-1:-1:-1;6142:297:18:o;:::-;212:203:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_1438": {
									"entryPoint": 922,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_afterTokenTransfer_1251": {
									"entryPoint": null,
									"id": 1251,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1186": {
									"entryPoint": 1870,
									"id": 1186,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1240": {
									"entryPoint": null,
									"id": 1240,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_1141": {
									"entryPoint": 3004,
									"id": 1141,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_2553": {
									"entryPoint": 3302,
									"id": 2553,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_580": {
									"entryPoint": 2705,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_617": {
									"entryPoint": 3685,
									"id": 617,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1229": {
									"entryPoint": 2163,
									"id": 1229,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_149": {
									"entryPoint": 4029,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_2610": {
									"entryPoint": 3392,
									"id": 2610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1012": {
									"entryPoint": 2285,
									"id": 1012,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1467": {
									"entryPoint": 3645,
									"id": 1467,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_807": {
									"entryPoint": 1709,
									"id": 807,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_832": {
									"entryPoint": 860,
									"id": 832,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_764": {
									"entryPoint": null,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1295": {
									"entryPoint": 1004,
									"id": 1295,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1274": {
									"entryPoint": 971,
									"id": 1274,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@byteLength_2728": {
									"entryPoint": 4359,
									"id": 2728,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_39": {
									"entryPoint": null,
									"id": 39,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_935": {
									"entryPoint": 1211,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@eip712Domain_664": {
									"entryPoint": 1059,
									"id": 664,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@increaseAllowance_894": {
									"entryPoint": 937,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increment_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_720": {
									"entryPoint": 714,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1427": {
									"entryPoint": 1029,
									"id": 1427,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2539": {
									"entryPoint": null,
									"id": 2539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_1411": {
									"entryPoint": 1353,
									"id": 1411,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_396": {
									"entryPoint": 3730,
									"id": 396,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_2567": {
									"entryPoint": 984,
									"id": 2567,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_730": {
									"entryPoint": 1196,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_2795": {
									"entryPoint": 3474,
									"id": 2795,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_2696": {
									"entryPoint": 3770,
									"id": 2696,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_440": {
									"entryPoint": null,
									"id": 440,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_750": {
									"entryPoint": null,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_865": {
									"entryPoint": 886,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_2590": {
									"entryPoint": 1752,
									"id": 2590,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_789": {
									"entryPoint": 1339,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_363": {
									"entryPoint": 3833,
									"id": 363,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"abi_decode_address": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13554:18",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "64:373:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "88:12:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "78:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:19:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "109:19:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "146:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "141:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "208:110:18",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:18",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "232:4:18",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "226:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:18"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:18"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:18"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:18"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:18"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "164:13:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "178:21:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "180:17:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "160:3:18",
																"statements": []
															},
															"src": "156:162:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "342:3:18"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "347:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "338:16:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "356:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "334:27:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "363:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:38:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "327:38:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:57:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "389:3:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "402:6:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "410:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "398:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "419:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "415:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "415:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "394:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "385:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:39:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "426:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:50:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "41:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "48:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:18",
														"type": ""
													}
												],
												"src": "14:423:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "580:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "591:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "573:21:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "603:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "652:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "637:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "611:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:45:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "603:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "543:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "554:4:18",
														"type": ""
													}
												],
												"src": "442:220:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:124:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "726:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "748:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "788:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "803:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "808:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "799:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "799:11:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "812:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "795:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "795:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "774:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:50:18"
															},
															"nodeType": "YulIf",
															"src": "764:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "695:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "706:5:18",
														"type": ""
													}
												],
												"src": "667:173:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "932:167:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "978:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "987:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "990:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:32:18"
															},
															"nodeType": "YulIf",
															"src": "942:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1003:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1013:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1051:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:32:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "890:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "901:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "913:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "921:6:18",
														"type": ""
													}
												],
												"src": "845:254:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:92:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1209:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1276:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1269:6:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1269:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1262:6:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1262:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:41:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1190:4:18",
														"type": ""
													}
												],
												"src": "1104:187:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:76:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1407:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1419:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1415:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1407:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1449:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1377:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1388:4:18",
														"type": ""
													}
												],
												"src": "1296:177:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1582:224:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1630:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1603:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1624:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1595:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:32:18"
															},
															"nodeType": "YulIf",
															"src": "1592:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1653:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1663:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1701:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1711:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1758:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1768:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1768:32:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1532:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1543:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1555:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1563:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1571:6:18",
														"type": ""
													}
												],
												"src": "1478:328:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1908:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1918:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1960:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1983:4:18",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:17:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1953:36:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1877:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1888:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1899:4:18",
														"type": ""
													}
												],
												"src": "1811:184:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:76:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2111:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2123:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2119:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2111:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2153:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2164:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2146:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2070:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2081:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2092:4:18",
														"type": ""
													}
												],
												"src": "2000:177:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2252:110:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2298:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2310:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2300:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2300:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2300:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2273:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2282:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2265:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:32:18"
															},
															"nodeType": "YulIf",
															"src": "2262:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2323:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2346:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2333:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:23:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2218:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2229:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2241:6:18",
														"type": ""
													}
												],
												"src": "2182:180:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:116:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2483:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2492:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2495:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2485:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2485:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2485:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2458:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2454:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2479:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:32:18"
															},
															"nodeType": "YulIf",
															"src": "2447:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2508:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2537:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2518:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2403:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2414:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2426:6:18",
														"type": ""
													}
												],
												"src": "2367:186:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2915:902:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2947:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2959:3:18",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2964:3:18",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2955:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2955:13:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:26:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2925:45:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2925:45:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2979:12:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2989:2:18",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2983:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3011:9:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3022:2:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3007:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3027:3:18",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3000:31:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3040:60:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3072:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3084:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3095:3:18",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3080:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3080:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3054:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:46:18"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3044:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3120:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3131:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3116:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3116:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "3140:6:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3136:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3136:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3109:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:50:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3109:50:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3168:47:18",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3200:6:18"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3208:6:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3182:17:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:33:18"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "3172:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3246:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3231:18:18"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3251:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3224:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3289:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "3299:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3315:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3320:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3311:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3311:11:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3324:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3307:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3307:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3295:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3295:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:61:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3348:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3359:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:19:18"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3365:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:35:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3392:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3403:3:18",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "3413:6:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:51:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3381:51:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3441:17:18",
															"value": {
																"name": "tail_2",
																"nodeType": "YulIdentifier",
																"src": "3452:6:18"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3445:3:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3467:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3471:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "3510:6:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:22:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:22:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3534:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "3545:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3553:2:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:15:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3534:3:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3565:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3591:2:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:15:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3569:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3603:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3612:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3607:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3671:120:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3692:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3703:6:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3697:5:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3697:13:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3685:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3685:26:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3685:26:18"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3724:19:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3735:3:18"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3740:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3731:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3731:12:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3724:3:18"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3756:25:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3770:6:18"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3778:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3766:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3766:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3756:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3633:1:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3636:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3630:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:13:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3644:18:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3646:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3655:1:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3658:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3651:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3651:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3646:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3626:3:18",
																"statements": []
															},
															"src": "3622:169:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3800:11:18",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3808:3:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3800:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2836:9:18",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2847:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2855:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2863:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2871:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2879:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2887:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2895:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:18",
														"type": ""
													}
												],
												"src": "2558:1259:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3923:102:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3933:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3945:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3956:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3941:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3941:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3933:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3975:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3990:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4006:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4002:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4002:11:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4015:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3998:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3998:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3968:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3968:51:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3968:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3892:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3903:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3914:4:18",
														"type": ""
													}
												],
												"src": "3822:203:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4200:523:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4247:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4256:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4259:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4249:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4249:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4249:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4221:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4230:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:3:18",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:33:18"
															},
															"nodeType": "YulIf",
															"src": "4210:53:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4272:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4301:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4282:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4320:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4353:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4364:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4349:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4330:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4330:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4320:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4377:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4400:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4387:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:32:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4428:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4455:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4466:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4451:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4438:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:32:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4479:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4509:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:19:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4492:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:33:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4483:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4573:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4582:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4585:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4575:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4575:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4575:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4547:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4558:5:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4565:4:18",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4554:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4554:16:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4544:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4544:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:35:18"
															},
															"nodeType": "YulIf",
															"src": "4534:55:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4598:15:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4608:5:18"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4598:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4622:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4649:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4660:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4645:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4645:19:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4632:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:33:18"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4622:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4674:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4712:3:18",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4697:19:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4684:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:33:18"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4118:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4129:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4141:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4149:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4157:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4165:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4173:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4181:6:18",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4189:6:18",
														"type": ""
													}
												],
												"src": "4030:693:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4815:173:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4861:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4870:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4873:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4863:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4863:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4863:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4836:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4845:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:32:18"
															},
															"nodeType": "YulIf",
															"src": "4825:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4886:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4915:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4896:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4934:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4967:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4978:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4963:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4944:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4773:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4784:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4796:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4804:6:18",
														"type": ""
													}
												],
												"src": "4728:260:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5048:325:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5058:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5072:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5075:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5068:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5058:6:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5089:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5119:4:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5115:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5093:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5166:31:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5168:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5182:6:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5190:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5178:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5178:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5168:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5146:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5139:26:18"
															},
															"nodeType": "YulIf",
															"src": "5136:61:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5256:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5277:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5284:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5289:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5280:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5280:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5270:31:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5270:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5321:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5324:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5314:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5314:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5314:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5352:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5212:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5235:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5243:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5232:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5232:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5209:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5209:38:18"
															},
															"nodeType": "YulIf",
															"src": "5206:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5028:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5037:6:18",
														"type": ""
													}
												],
												"src": "4993:380:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5426:174:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5436:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5447:1:18"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5450:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5436:3:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5483:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5504:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5511:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5516:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5507:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5507:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5497:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5497:31:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5497:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5548:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5551:4:18",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5541:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5541:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5541:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5576:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5579:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5569:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5569:15:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5569:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5467:1:18"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5470:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5464:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5464:10:18"
															},
															"nodeType": "YulIf",
															"src": "5461:133:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5409:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5412:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5418:3:18",
														"type": ""
													}
												],
												"src": "5378:222:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5637:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5654:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5661:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5666:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5657:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5647:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5647:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5694:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5697:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5687:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5687:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5718:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5721:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5711:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5711:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5711:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5605:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:227:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5928:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5921:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5921:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5973:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:2:18",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5951:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5951:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6001:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6012:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5997:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5997:18:18"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6017:34:18",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5990:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6072:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6083:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6068:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6068:18:18"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6088:7:18",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6061:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6061:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6061:35:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6105:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6117:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6105:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5888:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5902:4:18",
														"type": ""
													}
												],
												"src": "5737:401:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6317:179:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6334:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6345:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6327:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6368:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6379:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6364:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6364:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6357:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6407:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6418:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6403:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6403:18:18"
																	},
																	{
																		"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6423:31:18",
																		"type": "",
																		"value": "ERC20Permit: expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6396:59:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6396:59:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6464:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6476:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6487:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6472:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6472:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6464:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6294:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6308:4:18",
														"type": ""
													}
												],
												"src": "6143:353:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6742:350:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6752:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6764:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6775:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6760:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6752:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6795:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6806:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6788:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6788:25:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6822:29:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6840:3:18",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6845:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6836:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6836:11:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6849:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6832:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:19:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6826:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6871:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6867:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6867:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6899:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6887:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6887:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:43:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6860:43:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6934:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "6943:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6951:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6939:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6939:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:43:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6912:43:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6986:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6971:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6971:18:18"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6991:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6964:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6964:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7018:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7029:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7014:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7014:19:18"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7035:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7007:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7007:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7007:35:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7062:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7073:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7058:19:18"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7079:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7051:35:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6671:9:18",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6682:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6690:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6698:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6706:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6714:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6722:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6733:4:18",
														"type": ""
													}
												],
												"src": "6501:591:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7271:180:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7288:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7299:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7281:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7281:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7322:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7333:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7318:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7338:2:18",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7311:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:18:18"
																	},
																	{
																		"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7377:32:18",
																		"type": "",
																		"value": "ERC20Permit: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:60:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:60:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7419:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7431:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7442:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7427:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7427:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7419:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7248:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7262:4:18",
														"type": ""
													}
												],
												"src": "7097:354:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7630:228:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7647:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7640:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7677:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7697:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7731:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7716:18:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7736:34:18",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7791:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7802:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7787:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7787:18:18"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7807:8:18",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7780:36:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7825:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7837:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7848:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7833:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7825:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7607:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7621:4:18",
														"type": ""
													}
												],
												"src": "7456:402:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8037:226:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8054:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8065:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8047:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8088:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8099:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8084:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8104:2:18",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8077:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8077:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8077:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8127:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8138:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8123:18:18"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8143:34:18",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8116:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8198:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8209:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8194:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8194:18:18"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8214:6:18",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8187:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8187:34:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8230:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8242:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8253:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8238:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8238:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8230:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8014:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8028:4:18",
														"type": ""
													}
												],
												"src": "7863:400:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8442:224:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8459:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8470:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8452:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8452:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8493:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8504:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8509:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8482:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8482:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8482:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8543:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8528:18:18"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8548:34:18",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8521:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8521:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8603:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8614:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8599:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8599:18:18"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8619:4:18",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8592:32:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8592:32:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8633:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8645:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8656:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8641:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8641:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8633:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8419:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8433:4:18",
														"type": ""
													}
												],
												"src": "8268:398:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8845:179:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8862:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8873:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8855:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8855:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8896:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8907:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8892:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8885:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8885:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8885:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8935:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8946:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8931:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8931:18:18"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8951:31:18",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8924:59:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8924:59:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8992:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9004:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9015:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9000:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9000:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8992:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8822:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8836:4:18",
														"type": ""
													}
												],
												"src": "8671:353:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9203:227:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9220:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9231:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9213:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9213:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9254:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9265:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9250:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9250:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9270:2:18",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9243:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9293:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9304:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9289:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9289:18:18"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9309:34:18",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9282:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9282:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9364:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9375:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9360:18:18"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9380:7:18",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9353:35:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9397:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9409:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9397:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9180:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9194:4:18",
														"type": ""
													}
												],
												"src": "9029:401:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9609:225:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9626:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9637:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9619:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9660:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9671:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:2:18",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9649:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9649:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9649:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9699:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9710:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9695:18:18"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9715:34:18",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9688:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9688:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9770:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9781:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9766:18:18"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9786:5:18",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9759:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:33:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9759:33:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9801:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9813:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9824:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9809:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9801:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9586:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9600:4:18",
														"type": ""
													}
												],
												"src": "9435:399:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10013:228:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10030:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10041:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10023:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10023:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10064:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10075:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10060:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10060:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10080:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10053:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10053:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10053:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10103:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10114:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10099:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10099:18:18"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10119:34:18",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10092:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10092:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10174:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10185:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10170:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10170:18:18"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10190:8:18",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10163:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10163:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10163:36:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10208:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10220:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10231:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10216:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10208:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9990:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10004:4:18",
														"type": ""
													}
												],
												"src": "9839:402:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10420:223:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10437:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10448:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10430:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10430:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10471:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10482:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10467:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10467:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10487:2:18",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10460:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10460:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10460:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10510:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10521:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10506:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10506:18:18"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10526:34:18",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10499:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10499:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10499:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10581:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10592:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10577:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10577:18:18"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10597:3:18",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10570:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10570:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10570:31:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10610:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10633:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10618:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10618:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10610:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10397:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10411:4:18",
														"type": ""
													}
												],
												"src": "10246:397:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:224:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10839:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10850:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10873:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10884:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10869:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10869:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10889:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10862:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10862:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10862:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10912:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10923:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10908:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10908:18:18"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10928:34:18",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10901:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10901:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10901:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10983:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10994:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10979:18:18"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10999:4:18",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10972:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10972:32:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10972:32:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11013:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11025:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11036:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11021:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11021:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11013:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10799:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10813:4:18",
														"type": ""
													}
												],
												"src": "10648:398:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11225:182:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11242:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11253:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11235:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11235:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11276:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11287:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11272:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11272:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11292:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11265:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11265:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11315:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11326:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11311:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11311:18:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11331:34:18",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11304:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11304:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11304:62:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11375:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11387:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11398:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11383:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11383:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11375:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11202:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11216:4:18",
														"type": ""
													}
												],
												"src": "11051:356:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11625:276:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11635:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11647:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11658:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11643:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11635:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11678:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11689:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11671:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11671:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11671:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11727:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:18:18"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11732:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11705:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11705:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11705:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11759:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11770:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11755:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11755:18:18"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11775:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11802:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11813:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11798:18:18"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11818:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11791:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11791:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11791:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11845:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11856:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "11866:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11882:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11887:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11878:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11878:11:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11891:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11874:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11874:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11862:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:61:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11562:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11573:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11581:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11589:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11597:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11605:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11616:4:18",
														"type": ""
													}
												],
												"src": "11412:489:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12087:217:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12097:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12109:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12120:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12105:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12097:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12140:9:18"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12151:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:25:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12178:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12189:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12174:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12198:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12206:4:18",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12194:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12194:17:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:45:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12167:45:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12232:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12243:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12228:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12228:18:18"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12248:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12221:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12221:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12275:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12286:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12271:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12271:18:18"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12291:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12032:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12043:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12051:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12059:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12067:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12078:4:18",
														"type": ""
													}
												],
												"src": "11906:398:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12341:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12365:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12370:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12361:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12361:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12351:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12351:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12398:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12401:4:18",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12391:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12391:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12391:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12422:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12425:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12415:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12415:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12415:15:18"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "12309:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12615:174:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12632:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12643:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12625:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12666:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12677:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12662:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12662:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12682:2:18",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12655:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12655:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12655:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12705:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12716:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12701:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12701:18:18"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12721:26:18",
																		"type": "",
																		"value": "ECDSA: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12694:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12694:54:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12694:54:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12757:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12769:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12780:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12765:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12765:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12757:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12592:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12606:4:18",
														"type": ""
													}
												],
												"src": "12441:348:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12968:181:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12985:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12996:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12978:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "12978:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12978:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13030:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13015:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13035:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13008:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13008:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13058:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13069:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13054:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13054:18:18"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13074:33:18",
																		"type": "",
																		"value": "ECDSA: invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13047:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13047:61:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13117:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13129:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13140:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13125:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13125:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13117:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12945:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12959:4:18",
														"type": ""
													}
												],
												"src": "12794:355:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13328:224:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13345:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13338:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13338:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13338:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13379:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13390:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13375:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13375:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13395:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13368:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13368:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13368:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13418:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13429:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13414:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13414:18:18"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13434:34:18",
																		"type": "",
																		"value": "ECDSA: invalid signature 's' val"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13407:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13407:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13407:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13489:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13500:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13485:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13485:18:18"
																	},
																	{
																		"hexValue": "7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13505:4:18",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13478:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13478:32:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13478:32:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13519:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13531:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13542:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13527:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "13527:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13519:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13305:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13319:4:18",
														"type": ""
													}
												],
												"src": "13154:398:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Permit: expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"478": [
									{
										"length": 32,
										"start": 2802
									}
								],
								"480": [
									{
										"length": 32,
										"start": 2760
									}
								],
								"482": [
									{
										"length": 32,
										"start": 2718
									}
								],
								"484": [
									{
										"length": 32,
										"start": 2883
									}
								],
								"486": [
									{
										"length": 32,
										"start": 2923
									}
								],
								"489": [
									{
										"length": 32,
										"start": 1073
									}
								],
								"492": [
									{
										"length": 32,
										"start": 1116
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST PUSH2 0x176 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x162 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x12DB JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x1D4 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x305 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x352 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x327 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x352 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x335 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36A DUP2 DUP6 DUP6 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x384 DUP6 DUP3 DUP6 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x38F DUP6 DUP6 DUP6 PUSH2 0x8ED JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4 PUSH2 0xA91 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36A DUP2 DUP6 DUP6 PUSH2 0x3BC DUP4 DUP4 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x3D5 CALLER DUP3 PUSH2 0xBBC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x3EA PUSH1 0x0 PUSH2 0xD40 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F7 DUP3 CALLER DUP4 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x401 DUP3 DUP3 PUSH2 0xBBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x457 PUSH32 0x0 PUSH1 0x5 PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x482 PUSH32 0x0 PUSH1 0x6 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x4C9 DUP3 DUP7 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x74E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x36A DUP2 DUP6 DUP6 PUSH2 0x8ED JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x5C8 DUP13 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x623 DUP3 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x633 DUP3 DUP8 DUP8 DUP8 PUSH2 0xE92 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x6A1 DUP11 DUP11 DUP11 PUSH2 0x74E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6E0 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP5 DUP5 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8E7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x8E7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x74E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xAEA JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB14 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3A4 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x866 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xDAC JUMPI PUSH2 0xDA5 DUP4 PUSH2 0xEBA JUMP JUMPDEST SWAP1 POP PUSH2 0x370 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xDB8 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE4 SWAP1 PUSH2 0x1381 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE06 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370 PUSH2 0xE72 PUSH2 0xA91 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xEA3 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEF9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xEB0 DUP2 PUSH2 0xFBD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xEC7 DUP4 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0xF30 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFAD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xFB4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFD1 JUMPI PUSH2 0xFD1 PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0xFD9 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFED JUMPI PUSH2 0xFED PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0x103A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x104E JUMPI PUSH2 0x104E PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0x109B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x13D6 JUMP JUMPDEST SUB PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1139 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1188 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C7 DUP4 PUSH2 0x118F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP5 PUSH2 0x118F JUMP JUMPDEST SWAP3 POP PUSH2 0x1201 PUSH1 0x20 DUP6 ADD PUSH2 0x118F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1188 DUP3 PUSH2 0x118F JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x1265 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x112F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1277 DUP2 DUP11 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12C9 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x12AD JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12FF DUP9 PUSH2 0x118F JUMP JUMPDEST SWAP7 POP PUSH2 0x130D PUSH1 0x20 DUP10 ADD PUSH2 0x118F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136A DUP4 PUSH2 0x118F JUMP JUMPDEST SWAP2 POP PUSH2 0x1378 PUSH1 0x20 DUP5 ADD PUSH2 0x118F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1395 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x370 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH30 0x976774B70BBB2AADE783F6253E80F70D8A3109BEDD37DFF3E2B5BFDED7FD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "212:203:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4481:219;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:18;;1262:22;1244:41;;1232:2;1217:18;4481:219:4;1104:187:18;3234:106:4;3321:12;;3234:106;;;1442:25:18;;;1430:2;1415:18;3234:106:4;1296:177:18;5262:286:4;;;;;;:::i;:::-;;:::i;3083:91::-;;;3165:2;1953:36:18;;1941:2;1926:18;3083:91:4;1811:184:18;2969:113:6;;;:::i;5943:256:4:-;;;;;;:::i;:::-;;:::i;564:89:5:-;;;;;;:::i;:::-;;:::i;:::-;;3398:139:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3512:18:4;3486:7;3512:18;;;;;;;;;;;;3398:139;1839:101:12;;;:::i;959:161:5:-;;;;;;:::i;:::-;;:::i;2705:140:6:-;;;;;;:::i;:::-;;:::i;5201:633:3:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1216:85:12:-;1288:6;;1216:85;;-1:-1:-1;;;;;1288:6:12;;;3968:51:18;;3956:2;3941:18;1216:85:12;3822:203:18;2348:102:4;;;:::i;6686:483::-;;;;;;:::i;:::-;;:::i;3733:211::-;;;;;;:::i;:::-;;:::i;1886:758:6:-;;;;;;:::i;:::-;;:::i;4002:171:4:-;;;;;;:::i;:::-;;:::i;2089:232:12:-;;;;;;:::i;:::-;;:::i;2137:98:4:-;2191:13;2223:5;2216:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:98;:::o;4481:219::-;4586:4;719:10:0;4640:32:4;719:10:0;4656:7:4;4665:6;4640:8;:32::i;:::-;4689:4;4682:11;;;4481:219;;;;;:::o;5262:286::-;5389:4;719:10:0;5445:38:4;5461:4;719:10:0;5476:6:4;5445:15;:38::i;:::-;5493:27;5503:4;5509:2;5513:6;5493:9;:27::i;:::-;-1:-1:-1;5537:4:4;;5262:286;-1:-1:-1;;;;5262:286:4:o;2969:113:6:-;3029:7;3055:20;:18;:20::i;:::-;3048:27;;2969:113;:::o;5943:256:4:-;6053:4;719:10:0;6107:64:4;719:10:0;6123:7:4;6160:10;6132:25;719:10:0;6123:7:4;6132:9;:25::i;:::-;:38;;;;:::i;:::-;6107:8;:64::i;564:89:5:-;619:27;719:10:0;639:6:5;619:5;:27::i;:::-;564:89;:::o;1839:101:12:-;1109:13;:11;:13::i;:::-;1903:30:::1;1930:1;1903:18;:30::i;:::-;1839:101::o:0;959:161:5:-;1035:46;1051:7;719:10:0;1074:6:5;1035:15;:46::i;:::-;1091:22;1097:7;1106:6;1091:5;:22::i;:::-;959:161;;:::o;2705:140:6:-;-1:-1:-1;;;;;2814:14:6;;2788:7;2814:14;;;:7;:14;;;;;918::1;2814:24:6;827:112:1;5201:633:3;5316:13;5343:18;;5316:13;;;5343:18;5607:41;:5;5634:13;5607:26;:41::i;:::-;5662:47;:8;5692:16;5662:29;:47::i;:::-;5801:16;;;5785:1;5801:16;;;;;;;;;-1:-1:-1;;;5556:271:3;;;-1:-1:-1;5556:271:3;;-1:-1:-1;5723:13:3;;-1:-1:-1;5758:4:3;;-1:-1:-1;5785:1:3;-1:-1:-1;5801:16:3;-1:-1:-1;5556:271:3;-1:-1:-1;5201:633:3:o;2348:102:4:-;2404:13;2436:7;2429:14;;;;;:::i;6686:483::-;6801:4;719:10:0;6801:4:4;6882:25;719:10:0;6899:7:4;6882:9;:25::i;:::-;6855:52;;6958:15;6938:16;:35;;6917:119;;;;-1:-1:-1;;;6917:119:4;;5939:2:18;6917:119:4;;;5921:21:18;5978:2;5958:18;;;5951:30;6017:34;5997:18;;;5990:62;-1:-1:-1;;;6068:18:18;;;6061:35;6113:19;;6917:119:4;;;;;;;;;7070:60;7079:5;7086:7;7114:15;7095:16;:34;7070:8;:60::i;3733:211::-;3834:4;719:10:0;3888:28:4;719:10:0;3905:2:4;3909:6;3888:9;:28::i;1886:758:6:-;2121:8;2102:15;:27;;2094:69;;;;-1:-1:-1;;;2094:69:6;;6345:2:18;2094:69:6;;;6327:21:18;6384:2;6364:18;;;6357:30;6423:31;6403:18;;;6396:59;6472:18;;2094:69:6;6143:353:18;2094:69:6;2174:18;1059:117;2280:5;2303:7;2328:5;2351:16;2361:5;2351:9;:16::i;:::-;2218:189;;;;;;6788:25:18;;;;-1:-1:-1;;;;;6887:15:18;;;6867:18;;;6860:43;6939:15;;;;6919:18;;;6912:43;6971:18;;;6964:34;7014:19;;;7007:35;7058:19;;;7051:35;;;6760:19;;2218:189:6;;;;;;;;;;;;2195:222;;;;;;2174:243;;2428:12;2443:28;2460:10;2443:16;:28::i;:::-;2428:43;;2482:14;2499:28;2513:4;2519:1;2522;2525;2499:13;:28::i;:::-;2482:45;;2555:5;-1:-1:-1;;;;;2545:15:6;:6;-1:-1:-1;;;;;2545:15:6;;2537:58;;;;-1:-1:-1;;;2537:58:6;;7299:2:18;2537:58:6;;;7281:21:18;7338:2;7318:18;;;7311:30;7377:32;7357:18;;;7350:60;7427:18;;2537:58:6;7097:354:18;2537:58:6;2606:31;2615:5;2622:7;2631:5;2606:8;:31::i;:::-;2084:560;;;1886:758;;;;;;;:::o;4002:171:4:-;-1:-1:-1;;;;;4139:18:4;;;4113:7;4139:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4002:171::o;2089:232:12:-;1109:13;:11;:13::i;:::-;-1:-1:-1;;;;;2190:22:12;::::1;2169:107;;;::::0;-1:-1:-1;;;2169:107:12;;7658:2:18;2169:107:12::1;::::0;::::1;7640:21:18::0;7697:2;7677:18;;;7670:30;7736:34;7716:18;;;7709:62;-1:-1:-1;;;7787:18:18;;;7780:36;7833:19;;2169:107:12::1;7456:402:18::0;2169:107:12::1;2286:28;2305:8;2286:18;:28::i;10688:370:4:-:0;-1:-1:-1;;;;;10819:19:4;;10811:68;;;;-1:-1:-1;;;10811:68:4;;8065:2:18;10811:68:4;;;8047:21:18;8104:2;8084:18;;;8077:30;8143:34;8123:18;;;8116:62;-1:-1:-1;;;8194:18:18;;;8187:34;8238:19;;10811:68:4;7863:400:18;10811:68:4;-1:-1:-1;;;;;10897:21:4;;10889:68;;;;-1:-1:-1;;;10889:68:4;;8470:2:18;10889:68:4;;;8452:21:18;8509:2;8489:18;;;8482:30;8548:34;8528:18;;;8521:62;-1:-1:-1;;;8599:18:18;;;8592:32;8641:19;;10889:68:4;8268:398:18;10889:68:4;-1:-1:-1;;;;;10968:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11019:32;;1442:25:18;;;11019:32:4;;1415:18:18;11019:32:4;;;;;;;;10688:370;;;:::o;11339:487::-;11469:24;11496:25;11506:5;11513:7;11496:9;:25::i;:::-;11469:52;;-1:-1:-1;;11535:16:4;:37;11531:289;;11633:6;11613:16;:26;;11588:114;;;;-1:-1:-1;;;11588:114:4;;8873:2:18;11588:114:4;;;8855:21:18;8912:2;8892:18;;;8885:30;8951:31;8931:18;;;8924:59;9000:18;;11588:114:4;8671:353:18;11588:114:4;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11459:367;11339:487;;;:::o;7623:852::-;-1:-1:-1;;;;;7749:18:4;;7741:68;;;;-1:-1:-1;;;7741:68:4;;9231:2:18;7741:68:4;;;9213:21:18;9270:2;9250:18;;;9243:30;9309:34;9289:18;;;9282:62;-1:-1:-1;;;9360:18:18;;;9353:35;9405:19;;7741:68:4;9029:401:18;7741:68:4;-1:-1:-1;;;;;7827:16:4;;7819:64;;;;-1:-1:-1;;;7819:64:4;;9637:2:18;7819:64:4;;;9619:21:18;9676:2;9656:18;;;9649:30;9715:34;9695:18;;;9688:62;-1:-1:-1;;;9766:18:18;;;9759:33;9809:19;;7819:64:4;9435:399:18;7819:64:4;-1:-1:-1;;;;;7965:15:4;;7943:19;7965:15;;;;;;;;;;;8011:21;;;;7990:106;;;;-1:-1:-1;;;7990:106:4;;10041:2:18;7990:106:4;;;10023:21:18;10080:2;10060:18;;;10053:30;10119:34;10099:18;;;10092:62;-1:-1:-1;;;10170:18:18;;;10163:36;10216:19;;7990:106:4;9839:402:18;7990:106:4;-1:-1:-1;;;;;8130:15:4;;;:9;:15;;;;;;;;;;;8148:20;;;8130:38;;8345:13;;;;;;;;;;:23;;;;;;8394:26;;1442:25:18;;;8345:13:4;;8394:26;;1415:18:18;8394:26:4;;;;;;;8431:37;9606:659;3701:262:3;3754:7;3785:4;-1:-1:-1;;;;;3794:11:3;3777:28;;:63;;;;;3826:14;3809:13;:31;3777:63;3773:184;;;-1:-1:-1;3863:22:3;;3701:262::o;3773:184::-;3923:23;4089:199;;;1913:117;4089:199;;;11671:25:18;4153:11:3;11712:18:18;;;11705:34;;;;4186:14:3;11755:18:18;;;11748:34;4222:13:3;11798:18:18;;;11791:34;4265:4:3;11841:19:18;;;11834:61;4024:7:3;;11643:19:18;;4089:199:3;;;;;;;;;;;;4062:240;;;;;;4043:259;;3969:340;;9606:659:4;-1:-1:-1;;;;;9689:21:4;;9681:67;;;;-1:-1:-1;;;9681:67:4;;10448:2:18;9681:67:4;;;10430:21:18;10487:2;10467:18;;;10460:30;10526:34;10506:18;;;10499:62;-1:-1:-1;;;10577:18:18;;;10570:31;10618:19;;9681:67:4;10246:397:18;9681:67:4;-1:-1:-1;;;;;9844:18:4;;9819:22;9844:18;;;;;;;;;;;9880:24;;;;9872:71;;;;-1:-1:-1;;;9872:71:4;;10850:2:18;9872:71:4;;;10832:21:18;10889:2;10869:18;;;10862:30;10928:34;10908:18;;;10901:62;-1:-1:-1;;;10979:18:18;;;10972:32;11021:19;;9872:71:4;10648:398:18;9872:71:4;-1:-1:-1;;;;;9977:18:4;;:9;:18;;;;;;;;;;;9998:23;;;9977:44;;10114:12;:22;;;;;;;10162:37;1442:25:18;;;9977:9:4;;:18;10162:37;;1415:18:18;10162:37:4;1296:177:18;1374:130:12;1288:6;;-1:-1:-1;;;;;1288:6:12;719:10:0;1437:23:12;1429:68;;;;-1:-1:-1;;;1429:68:12;;11253:2:18;1429:68:12;;;11235:21:18;;;11272:18;;;11265:30;11331:34;11311:18;;;11304:62;11383:18;;1429:68:12;11051:356:18;2475:187:12;2567:6;;;-1:-1:-1;;;;;2583:17:12;;;-1:-1:-1;;;;;;2583:17:12;;;;;;;2615:40;;2567:6;;;2583:17;2567:6;;2615:40;;2548:16;;2615:40;2538:124;2475:187;:::o;3367:268:13:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3213:217:6;-1:-1:-1;;;;;3347:14:6;;3287:15;3347:14;;;:7;:14;;;;;918::1;;1050:1;1032:19;;;;918:14;3406:17:6;3304:126;3213:217;;;:::o;4934:179:3:-;5025:7;5051:55;5073:20;:18;:20::i;:::-;5095:10;8961:4:2;8955:11;-1:-1:-1;;;8979:23:2;;9031:4;9022:14;;9015:39;;;;9083:4;9074:14;;9067:34;9137:4;9122:20;;;8739:419;6815:270;6938:7;6958:17;6977:18;6999:25;7010:4;7016:1;7019;7022;6999:10;:25::i;:::-;6957:67;;;;7034:18;7046:5;7034:11;:18::i;:::-;-1:-1:-1;7069:9:2;6815:270;-1:-1:-1;;;;;6815:270:2:o;2059:405:13:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:13;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:13;;;-1:-1:-1;2416:4:13;2407:14;;2400:28;;;;-1:-1:-1;2371:16:13;2059:405::o;5154:1528:2:-;5280:7;;6229:66;6204:91;;6187:195;;;-1:-1:-1;6336:1:2;;-1:-1:-1;6340:30:2;6320:51;;6187:195;6493:24;;;6476:14;6493:24;;;;;;;;;12133:25:18;;;12206:4;12194:17;;12174:18;;;12167:45;;;;12228:18;;;12221:34;;;12271:18;;;12264:34;;;6493:24:2;;12105:19:18;;6493:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6493:24:2;;-1:-1:-1;;6493:24:2;;;-1:-1:-1;;;;;;;6531:20:2;;6527:101;;6583:1;6587:29;6567:50;;;;;;;6527:101;6646:6;-1:-1:-1;6654:20:2;;-1:-1:-1;5154:1528:2;;;;;;;;:::o;569:511::-;646:20;637:5;:29;;;;;;;;:::i;:::-;;633:441;;569:511;:::o;633:441::-;742:29;733:5;:38;;;;;;;;:::i;:::-;;729:345;;787:34;;-1:-1:-1;;;787:34:2;;12643:2:18;787:34:2;;;12625:21:18;12682:2;12662:18;;;12655:30;12721:26;12701:18;;;12694:54;12765:18;;787:34:2;12441:348:18;729:345:2;851:35;842:5;:44;;;;;;;;:::i;:::-;;838:236;;902:41;;-1:-1:-1;;;902:41:2;;12996:2:18;902:41:2;;;12978:21:18;13035:2;13015:18;;;13008:30;13074:33;13054:18;;;13047:61;13125:18;;902:41:2;12794:355:18;838:236:2;973:30;964:5;:39;;;;;;;;:::i;:::-;;960:114;;1019:44;;-1:-1:-1;;;1019:44:2;;13356:2:18;1019:44:2;;;13338:21:18;13395:2;13375:18;;;13368:30;13434:34;13414:18;;;13407:62;-1:-1:-1;;;13485:18:18;;;13478:32;13527:19;;1019:44:2;13154:398:18;2536:245:13;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:13;;;;;;;;;;;14:423:18;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:18:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:18;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:18:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:180::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;-1:-1:-1;2333:23:18;;2182:180;-1:-1:-1;2182:180:18:o;2367:186::-;2426:6;2479:2;2467:9;2458:7;2454:23;2450:32;2447:52;;;2495:1;2492;2485:12;2447:52;2518:29;2537:9;2518:29;:::i;2558:1259::-;2964:3;2959;2955:13;2947:6;2943:26;2932:9;2925:45;2906:4;2989:2;3027:3;3022:2;3011:9;3007:18;3000:31;3054:46;3095:3;3084:9;3080:19;3072:6;3054:46;:::i;:::-;3148:9;3140:6;3136:22;3131:2;3120:9;3116:18;3109:50;3182:33;3208:6;3200;3182:33;:::i;:::-;3246:2;3231:18;;3224:34;;;-1:-1:-1;;;;;3295:32:18;;3289:3;3274:19;;3267:61;3315:3;3344:19;;3337:35;;;3409:22;;;3403:3;3388:19;;3381:51;3481:13;;3503:22;;;3579:15;;;;-1:-1:-1;3541:15:18;;;;-1:-1:-1;3622:169:18;3636:6;3633:1;3630:13;3622:169;;;3697:13;;3685:26;;3766:15;;;;3731:12;;;;3658:1;3651:9;3622:169;;;-1:-1:-1;3808:3:18;;2558:1259;-1:-1:-1;;;;;;;;;;;;2558:1259:18:o;4030:693::-;4141:6;4149;4157;4165;4173;4181;4189;4242:3;4230:9;4221:7;4217:23;4213:33;4210:53;;;4259:1;4256;4249:12;4210:53;4282:29;4301:9;4282:29;:::i;:::-;4272:39;;4330:38;4364:2;4353:9;4349:18;4330:38;:::i;:::-;4320:48;;4415:2;4404:9;4400:18;4387:32;4377:42;;4466:2;4455:9;4451:18;4438:32;4428:42;;4520:3;4509:9;4505:19;4492:33;4565:4;4558:5;4554:16;4547:5;4544:27;4534:55;;4585:1;4582;4575:12;4534:55;4030:693;;;;-1:-1:-1;4030:693:18;;;;4608:5;4660:3;4645:19;;4632:33;;-1:-1:-1;4712:3:18;4697:19;;;4684:33;;4030:693;-1:-1:-1;;4030:693:18:o;4728:260::-;4796:6;4804;4857:2;4845:9;4836:7;4832:23;4828:32;4825:52;;;4873:1;4870;4863:12;4825:52;4896:29;4915:9;4896:29;:::i;:::-;4886:39;;4944:38;4978:2;4967:9;4963:18;4944:38;:::i;:::-;4934:48;;4728:260;;;;;:::o;4993:380::-;5072:1;5068:12;;;;5115;;;5136:61;;5190:4;5182:6;5178:17;5168:27;;5136:61;5243:2;5235:6;5232:14;5212:18;5209:38;5206:161;;5289:10;5284:3;5280:20;5277:1;5270:31;5324:4;5321:1;5314:15;5352:4;5349:1;5342:15;5378:222;5443:9;;;5464:10;;;5461:133;;;5516:10;5511:3;5507:20;5504:1;5497:31;5551:4;5548:1;5541:15;5579:4;5576:1;5569:15;12309:127;12370:10;12365:3;12361:20;12358:1;12351:31;12401:4;12398:1;12391:15;12425:4;12422:1;12415:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1030800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24652",
								"balanceOf(address)": "2629",
								"burn(uint256)": "50827",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "289",
								"decreaseAllowance(address,uint256)": "26973",
								"eip712Domain()": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2616",
								"owner()": "2390",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51094",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "160"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 413,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 413,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 413,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 281,
									"end": 413,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0D0DECADCD2F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1825,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1812,
									"end": 1816,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3184,
									"end": 3615,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0D0DECADCD2F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0909CB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1959,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2038,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2030,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2025,
									"end": 2038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2025,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2048,
									"end": 2055,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2058,
									"end": 2065,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2055,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2048,
									"end": 2065,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2048,
									"end": 2065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3257,
									"end": 3302,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3257,
									"end": 3302,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3257,
									"end": 3261,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3257,
									"end": 3261,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3288,
									"end": 3301,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 3257,
									"end": 3287,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3257,
									"end": 3302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3257,
									"end": 3302,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3257,
									"end": 3302,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3249,
									"end": 3302,
									"name": "PUSH",
									"source": 3,
									"value": "120"
								},
								{
									"begin": 3249,
									"end": 3302,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3323,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3323,
									"end": 3330,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3357,
									"end": 3373,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 3323,
									"end": 3356,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3323,
									"end": 3374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3323,
									"end": 3374,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 3323,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3312,
									"end": 3374,
									"name": "PUSH",
									"source": 3,
									"value": "140"
								},
								{
									"begin": 3312,
									"end": 3374,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3398,
									"end": 3420,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 3384,
									"end": 3420,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 3384,
									"end": 3420,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 3430,
									"end": 3472,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3430,
									"end": 3472,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3500,
									"end": 3513,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 3483,
									"end": 3513,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 3483,
									"end": 3513,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3548,
									"end": 3571,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 4153,
									"end": 4164,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 4153,
									"end": 4164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4186,
									"end": 4200,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 4186,
									"end": 4200,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1913,
									"end": 2030,
									"name": "PUSH",
									"source": 3,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4682,
									"end": 4707,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4723,
									"end": 4741,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4723,
									"end": 4741,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4723,
									"end": 4741,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4716,
									"end": 4750,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 4716,
									"end": 4750,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4716,
									"end": 4750,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 4716,
									"end": 4750,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4766,
									"end": 4784,
									"name": "PUSH",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 4766,
									"end": 4784,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4766,
									"end": 4784,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4759,
									"end": 4793,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4222,
									"end": 4235,
									"name": "CHAINID",
									"source": 3
								},
								{
									"begin": 4809,
									"end": 4827,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4809,
									"end": 4827,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4809,
									"end": 4827,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4802,
									"end": 4836,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4265,
									"end": 4269,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 4852,
									"end": 4871,
									"name": "PUSH",
									"source": 18,
									"value": "A0"
								},
								{
									"begin": 4852,
									"end": 4871,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4852,
									"end": 4871,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4845,
									"end": 4906,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 4024,
									"end": 4031,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4024,
									"end": 4031,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4654,
									"end": 4673,
									"name": "PUSH",
									"source": 18,
									"value": "C0"
								},
								{
									"begin": 4654,
									"end": 4673,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4089,
									"end": 4288,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4062,
									"end": 4302,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4062,
									"end": 4302,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4062,
									"end": 4302,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4062,
									"end": 4302,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4062,
									"end": 4302,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4062,
									"end": 4302,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4043,
									"end": 4302,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4043,
									"end": 4302,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3969,
									"end": 4309,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3969,
									"end": 4309,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3548,
									"end": 3571,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3548,
									"end": 3571,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3523,
									"end": 3571,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 3523,
									"end": 3571,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3603,
									"end": 3607,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 3581,
									"end": 3608,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 3581,
									"end": 3608,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 951,
									"end": 983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 951,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 951,
									"end": 983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 951,
									"end": 983,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 951,
									"end": 983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 353,
									"end": 406,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 359,
									"end": 369,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 389,
									"end": 405,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 3165,
									"end": 3167,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 389,
									"end": 391,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "A"
								},
								{
									"begin": 389,
									"end": 405,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 389,
									"end": 405,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 389,
									"end": 405,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 389,
									"end": 405,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 371,
									"end": 405,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 371,
									"end": 405,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 371,
									"end": 386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "5AF3107A4000"
								},
								{
									"begin": 371,
									"end": 405,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 371,
									"end": 405,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 371,
									"end": 405,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 371,
									"end": 405,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 353,
									"end": 358,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 353,
									"end": 406,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 353,
									"end": 406,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 406,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3002,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3040,
									"end": 3042,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3024,
									"end": 3029,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3018,
									"end": 3037,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3018,
									"end": 3042,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3079,
									"end": 3084,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3065,
									"end": 3078,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3065,
									"end": 3085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3058,
									"end": 3085,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3142,
									"end": 3147,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3157,
									"end": 3162,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3142,
									"end": 3147,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 3116,
									"end": 3162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3116,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1371,
									"end": 1437,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 1371,
									"end": 1437,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3014,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 3236,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 3236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2475,
									"end": 2662,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2475,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2615,
									"end": 2655,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2615,
									"end": 2655,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2583,
									"end": 2600,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2567,
									"end": 2573,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2615,
									"end": 2655,
									"name": "PUSH",
									"source": 12,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2615,
									"end": 2655,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2548,
									"end": 2564,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2564,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2615,
									"end": 2655,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 2538,
									"end": 2662,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2475,
									"end": 2662,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2475,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8751,
									"end": 9286,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 8751,
									"end": 9286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8834,
									"end": 8855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8834,
									"end": 8855,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5119,
									"end": 5121,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5101,
									"end": 5122,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5158,
									"end": 5160,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 5138,
									"end": 5156,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 5138,
									"end": 5156,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5138,
									"end": 5156,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5197,
									"end": 5230,
									"name": "PUSH",
									"source": 18,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 5177,
									"end": 5195,
									"name": "PUSH",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 5177,
									"end": 5195,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5177,
									"end": 5195,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5170,
									"end": 5231,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5248,
									"end": 5266,
									"name": "PUSH",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 5248,
									"end": 5266,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 8826,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8978,
									"end": 8984,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8974,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 8962,
									"end": 8974,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 8962,
									"end": 8984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8962,
									"end": 8984,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9139,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9158,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9158,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9158,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9158,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9130,
									"end": 9158,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5553,
									"end": 5578,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5544,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9183,
									"end": 9220,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 8751,
									"end": 9286,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8751,
									"end": 9286,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8751,
									"end": 9286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1754,
									"end": 1765,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1777,
									"end": 1794,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1803,
									"end": 1806,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1807,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1807,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1835,
									"end": 1837,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1821,
									"end": 1825,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1821,
									"end": 1832,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1821,
									"end": 1837,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1874,
									"end": 1877,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "305A27A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1860,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1817,
									"end": 1889,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1955,
									"end": 1966,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1955,
									"end": 1966,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1955,
									"end": 1959,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1938,
									"end": 1951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1938,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 1966,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 1966,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1689,
									"end": 1975,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1689,
									"end": 1975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12410,
									"end": 12531,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 12410,
									"end": 12531,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 12410,
									"end": 12531,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 12410,
									"end": 12531,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 12410,
									"end": 12531,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 12410,
									"end": 12531,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 18,
									"value": "9"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 18,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B71"
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 18,
									"value": "E0"
								},
								{
									"begin": 2787,
									"end": 2807,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2808,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2827,
									"end": 2831,
									"name": "PUSH",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 2817,
									"end": 2832,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2851,
									"end": 2855,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2856,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "tag",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2999,
									"end": 3004,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3024,
									"end": 3032,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3021,
									"end": 3042,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3093,
									"end": 3097,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3089,
									"end": 3090,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3085,
									"end": 3091,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3081,
									"end": 3098,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3072,
									"end": 3099,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3102,
									"end": 3120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "tag",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3142,
									"end": 3150,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "110"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "tag",
									"source": 18,
									"value": "110"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2867,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "112"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "tag",
									"source": 18,
									"value": "112"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "113"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "tag",
									"source": 18,
									"value": "113"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3544,
									"end": 3548,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3562,
									"end": 3563,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "115"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "116"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "114"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "tag",
									"source": 18,
									"value": "115"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "tag",
									"source": 18,
									"value": "116"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 18,
									"value": "FF"
								},
								{
									"begin": 3652,
									"end": 3660,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3649,
									"end": 3666,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "118"
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "118"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 3669,
									"end": 3687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "tag",
									"source": 18,
									"value": "118"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "tag",
									"source": 18,
									"value": "114"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3829,
									"end": 3837,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3820,
									"end": 3823,
									"name": "PUSH",
									"source": 18,
									"value": "133"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3811,
									"end": 3824,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3807,
									"end": 3843,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 18,
									"value": "4E"
								},
								{
									"begin": 3791,
									"end": 3799,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3788,
									"end": 3804,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3783,
									"end": 3785,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3770,
									"end": 3805,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3767,
									"end": 3844,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "119"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "tag",
									"source": 18,
									"value": "119"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "120"
								},
								{
									"begin": 3980,
									"end": 3988,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 3955,
									"end": 3989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "tag",
									"source": 18,
									"value": "120"
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4025,
									"end": 4031,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4021,
									"end": 4022,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4017,
									"end": 4023,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4013,
									"end": 4032,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 4004,
									"end": 4011,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4001,
									"end": 4033,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "122"
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "122"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 4036,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "tag",
									"source": 18,
									"value": "122"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 4100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "124"
								},
								{
									"begin": 4233,
									"end": 4237,
									"name": "PUSH",
									"source": 18,
									"value": "FF"
								},
								{
									"begin": 4223,
									"end": 4231,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4219,
									"end": 4238,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 4192,
									"end": 4239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "tag",
									"source": 18,
									"value": "124"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4183,
									"end": 4239,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 4351,
									"end": 4388,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 4392,
									"end": 4410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5277,
									"end": 5402,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 5277,
									"end": 5402,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5342,
									"end": 5351,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5342,
									"end": 5351,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5342,
									"end": 5351,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5363,
									"end": 5373,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5363,
									"end": 5373,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5363,
									"end": 5373,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 5360,
									"end": 5396,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5360,
									"end": 5396,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 5360,
									"end": 5396,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5376,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 5376,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 5376,
									"end": 5394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 6137,
									"name": "tag",
									"source": 18,
									"value": "62"
								},
								{
									"begin": 5589,
									"end": 6137,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5701,
									"end": 5705,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5730,
									"end": 5732,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5759,
									"end": 5761,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5748,
									"end": 5757,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5741,
									"end": 5762,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5791,
									"end": 5797,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5785,
									"end": 5798,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5834,
									"end": 5840,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5829,
									"end": 5831,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5818,
									"end": 5827,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5814,
									"end": 5832,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5807,
									"end": 5841,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5859,
									"end": 5860,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "tag",
									"source": 18,
									"value": "135"
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5880,
									"end": 5881,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5877,
									"end": 5890,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "137"
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5978,
									"end": 5992,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5978,
									"end": 5992,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5978,
									"end": 5992,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5974,
									"end": 5997,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5974,
									"end": 5997,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5968,
									"end": 5998,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5944,
									"end": 5961,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5944,
									"end": 5961,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5944,
									"end": 5961,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5963,
									"end": 5965,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 5940,
									"end": 5966,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5933,
									"end": 5999,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5898,
									"end": 5908,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5898,
									"end": 5908,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "135"
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "tag",
									"source": 18,
									"value": "137"
								},
								{
									"begin": 5869,
									"end": 6009,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5873,
									"end": 5876,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6058,
									"end": 6059,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 6053,
									"end": 6055,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 6044,
									"end": 6050,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6033,
									"end": 6042,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6025,
									"end": 6056,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6018,
									"end": 6060,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 6128,
									"end": 6130,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 6121,
									"end": 6123,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 6112,
									"end": 6114,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 6104,
									"end": 6110,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 6100,
									"end": 6115,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6096,
									"end": 6125,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 6085,
									"end": 6094,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 6081,
									"end": 6126,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6077,
									"end": 6131,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6069,
									"end": 6131,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 6069,
									"end": 6131,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6069,
									"end": 6131,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6069,
									"end": 6131,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 6137,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 6137,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 6137,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 6137,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 6137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6142,
									"end": 6439,
									"name": "tag",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 6142,
									"end": 6439,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6260,
									"end": 6272,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 6260,
									"end": 6272,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 6307,
									"end": 6311,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 6296,
									"end": 6312,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 6296,
									"end": 6312,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 6296,
									"end": 6312,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 6290,
									"end": 6313,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 6290,
									"end": 6313,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6260,
									"end": 6272,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6325,
									"end": 6341,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6325,
									"end": 6341,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 6322,
									"end": 6433,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 6322,
									"end": 6433,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 6322,
									"end": 6433,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6399,
									"end": 6403,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 6395,
									"end": 6412,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6395,
									"end": 6412,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6395,
									"end": 6412,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6395,
									"end": 6412,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 6392,
									"end": 6393,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 6388,
									"end": 6413,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 6384,
									"end": 6422,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 6373,
									"end": 6423,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 6373,
									"end": 6423,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6142,
									"end": 6439,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6142,
									"end": 6439,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6142,
									"end": 6439,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 6142,
									"end": 6439,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "C0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "120"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "140"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "492"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "489"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "486"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "484"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "482"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "480"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "478"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 415,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220327d976774b70bbb2aade783f6253e80f70d8a3109bedd37dff3e2b5bfded7fd64736f6c63430008130033",
									".code": [
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "79CC6790"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "A457C2D7"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "A457C2D7"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "D505ACCF"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "79CC6790"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "7ECEBE00"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "84B0196E"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "3644E515"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "3644E515"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "39509351"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "42966C68"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 212,
											"end": 415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2137,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2137,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4481,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4481,
											"end": 4700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1262,
											"end": 1284,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1104,
											"end": 1291,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3321,
											"end": 3333,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3234,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5262,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5262,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3167,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3083,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1811,
											"end": 1995,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2969,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5943,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5943,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 564,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 564,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3398,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3537,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1839,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 959,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 959,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2705,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2705,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5201,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5201,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1301,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1216,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1216,
											"end": 1301,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1301,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3956,
											"end": 3958,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1216,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2348,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6686,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6686,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3733,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3733,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1886,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1886,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4002,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4002,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2089,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2089,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2204,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2216,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2216,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2137,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4640,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4640,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5445,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5476,
											"end": 5482,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5445,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5483,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5445,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5519,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5493,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5493,
											"end": 5520,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5493,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5541,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5548,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5262,
											"end": 5548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3055,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5943,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6107,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6130,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6160,
											"end": 6170,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6123,
											"end": 6130,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6132,
											"end": 6157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6157,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6132,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6132,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6132,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6107,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 6107,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 564,
											"end": 653,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 639,
											"end": 645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 619,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 619,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 619,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 564,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1109,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1122,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1109,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1930,
											"end": 1931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1903,
											"end": 1933,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1903,
											"end": 1933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1839,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1080,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1035,
											"end": 1081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1081,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1035,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1097,
											"end": 1104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1091,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2705,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2821,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2828,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5201,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5607,
											"end": 5612,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 5634,
											"end": 5647,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5607,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5648,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5607,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5670,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 5692,
											"end": 5708,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5662,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5709,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5827,
											"name": "SWAP12",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5827,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5827,
											"name": "SWAP11",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5827,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5736,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5736,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2348,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2436,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2429,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6686,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6906,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6882,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6907,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6882,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6855,
											"end": 6907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6855,
											"end": 6907,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6958,
											"end": 6973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6973,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 6973,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5942,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5951,
											"end": 5981,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5990,
											"end": 6052,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6096,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6113,
											"end": 6132,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 6113,
											"end": 6132,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6917,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7093,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7129,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7129,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 7070,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3733,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 3907,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3888,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2117,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6347,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6327,
											"end": 6348,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6364,
											"end": 6382,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6357,
											"end": 6387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6423,
											"end": 6454,
											"name": "PUSH",
											"source": 18,
											"value": "45524332305065726D69743A206578706972656420646561646C696E65000000"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6396,
											"end": 6455,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 6472,
											"end": 6490,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6143,
											"end": 6496,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2094,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1176,
											"name": "PUSH",
											"source": 6,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2351,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2367,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2351,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6788,
											"end": 6813,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6902,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 6887,
											"end": 6902,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6887,
											"end": 6902,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6860,
											"end": 6903,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6939,
											"end": 6954,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6939,
											"end": 6954,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6939,
											"end": 6954,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6939,
											"end": 6954,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6912,
											"end": 6955,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6964,
											"end": 6998,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7014,
											"end": 7033,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 7014,
											"end": 7033,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7014,
											"end": 7033,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7007,
											"end": 7042,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7051,
											"end": 7086,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7051,
											"end": 7086,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7051,
											"end": 7086,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2417,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2195,
											"end": 2417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2417,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2443,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2471,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2443,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2513,
											"end": 2517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2499,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2499,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7301,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7281,
											"end": 7302,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "PUSH",
											"source": 18,
											"value": "1E"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7311,
											"end": 7341,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7377,
											"end": 7409,
											"name": "PUSH",
											"source": 18,
											"value": "45524332305065726D69743A20696E76616C6964207369676E61747572650000"
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7350,
											"end": 7410,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7427,
											"end": 7445,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7427,
											"end": 7445,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7097,
											"end": 7451,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2537,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2606,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 2644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4002,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4150,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2089,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1109,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1122,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1109,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2212,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2190,
											"end": 2212,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2276,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2276,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2276,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2276,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7661,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7697,
											"end": 7699,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7670,
											"end": 7700,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7736,
											"end": 7770,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7709,
											"end": 7771,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7780,
											"end": 7816,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7833,
											"end": 7852,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 7833,
											"end": 7852,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7456,
											"end": 7858,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 2169,
											"end": 2276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2286,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2305,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2286,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 2286,
											"end": 2314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10819,
											"end": 10838,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10838,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8065,
											"end": 8067,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8068,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8077,
											"end": 8107,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8143,
											"end": 8177,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8123,
											"end": 8141,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8116,
											"end": 8178,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8187,
											"end": 8221,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8238,
											"end": 8257,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 8238,
											"end": 8257,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7863,
											"end": 8263,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10811,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10897,
											"end": 10918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 10918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8470,
											"end": 8472,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8452,
											"end": 8473,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8482,
											"end": 8512,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8548,
											"end": 8582,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8521,
											"end": 8583,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8592,
											"end": 8624,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8641,
											"end": 8660,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 8641,
											"end": 8660,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 8268,
											"end": 8666,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 10889,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10979,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 10995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 11004,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 11004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10968,
											"end": 11004,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11019,
											"end": 11051,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 11058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11469,
											"end": 11493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 11506,
											"end": 11511,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11513,
											"end": 11520,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11496,
											"end": 11505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 11496,
											"end": 11521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 11496,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11469,
											"end": 11521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11469,
											"end": 11521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11535,
											"end": 11572,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 11531,
											"end": 11820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11639,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11639,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8873,
											"end": 8875,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8855,
											"end": 8876,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8892,
											"end": 8910,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8885,
											"end": 8915,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8951,
											"end": 8982,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8924,
											"end": 8983,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 8671,
											"end": 9024,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 11588,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 11753,
											"end": 11758,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11760,
											"end": 11767,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11788,
											"end": 11794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11769,
											"end": 11785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11769,
											"end": 11794,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11744,
											"end": 11795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 11744,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 8475,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7623,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9231,
											"end": 9233,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9234,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9270,
											"end": 9272,
											"name": "PUSH",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9243,
											"end": 9273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9309,
											"end": 9343,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9289,
											"end": 9307,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9282,
											"end": 9344,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9353,
											"end": 9388,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9405,
											"end": 9424,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 9405,
											"end": 9424,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9029,
											"end": 9430,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7741,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7827,
											"end": 7843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7827,
											"end": 7843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9637,
											"end": 9639,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9640,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9676,
											"end": 9678,
											"name": "PUSH",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9649,
											"end": 9679,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9715,
											"end": 9749,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9688,
											"end": 9750,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9792,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9809,
											"end": 9828,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 9809,
											"end": 9828,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9435,
											"end": 9834,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7819,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 7980,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8032,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10041,
											"end": 10043,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 10044,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10080,
											"end": 10082,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 10060,
											"end": 10078,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10060,
											"end": 10078,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10060,
											"end": 10078,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10053,
											"end": 10083,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10119,
											"end": 10153,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 10099,
											"end": 10117,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10099,
											"end": 10117,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10099,
											"end": 10117,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10092,
											"end": 10154,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10170,
											"end": 10188,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10170,
											"end": 10188,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10170,
											"end": 10188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10163,
											"end": 10199,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10216,
											"end": 10235,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 10216,
											"end": 10235,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9839,
											"end": 10241,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7990,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8168,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8368,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8420,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8431,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9606,
											"end": 10265,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3963,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3701,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3789,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 3805,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 3777,
											"end": 3805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3805,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3840,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 3809,
											"end": 3822,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3777,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3957,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3773,
											"end": 3957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3863,
											"end": 3885,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 3863,
											"end": 3885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3701,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3957,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3773,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1913,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11671,
											"end": 11696,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4153,
											"end": 4164,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11705,
											"end": 11739,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4186,
											"end": 4200,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11755,
											"end": 11773,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11748,
											"end": 11782,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4222,
											"end": 4235,
											"name": "CHAINID",
											"source": 3
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11791,
											"end": 11825,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 11841,
											"end": 11860,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 11841,
											"end": 11860,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11841,
											"end": 11860,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11834,
											"end": 11895,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11662,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 11643,
											"end": 11662,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4302,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4302,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4302,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4302,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 4309,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 10265,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 9606,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9689,
											"end": 9710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9689,
											"end": 9710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10450,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10430,
											"end": 10451,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10487,
											"end": 10489,
											"name": "PUSH",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10467,
											"end": 10485,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10460,
											"end": 10490,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10526,
											"end": 10560,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10506,
											"end": 10524,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10499,
											"end": 10561,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10577,
											"end": 10595,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10577,
											"end": 10595,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10577,
											"end": 10595,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10570,
											"end": 10601,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10618,
											"end": 10637,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 10618,
											"end": 10637,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 10246,
											"end": 10643,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9681,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9819,
											"end": 9841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9844,
											"end": 9862,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9880,
											"end": 9904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9880,
											"end": 9904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9880,
											"end": 9904,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9880,
											"end": 9904,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10850,
											"end": 10852,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10832,
											"end": 10853,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10889,
											"end": 10891,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10862,
											"end": 10892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10928,
											"end": 10962,
											"name": "PUSH",
											"source": 18,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10901,
											"end": 10963,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10972,
											"end": 11004,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11021,
											"end": 11040,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 11021,
											"end": 11040,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 11046,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9872,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10021,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10021,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10021,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 10021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 10021,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10126,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10136,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10162,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1504,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1374,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1460,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11253,
											"end": 11255,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11235,
											"end": 11256,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11235,
											"end": 11256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11235,
											"end": 11256,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11265,
											"end": 11295,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11331,
											"end": 11365,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11304,
											"end": 11366,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11383,
											"end": 11401,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1429,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 11051,
											"end": 11407,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2475,
											"end": 2662,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 2475,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2655,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2655,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2655,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2615,
											"end": 2655,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2548,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2655,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3367,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3461,
											"end": 3474,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1371,
											"end": 1437,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3490,
											"end": 3537,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3490,
											"end": 3537,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3569,
											"end": 3574,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3560,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3560,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3553,
											"end": 3575,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3486,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3606,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3606,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3430,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3213,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3423,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3406,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4934,
											"end": 5113,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4934,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5032,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5073,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5073,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5093,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5073,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5095,
											"end": 5105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8961,
											"end": 8965,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8979,
											"end": 9002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8979,
											"end": 9002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9035,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9022,
											"end": 9036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9022,
											"end": 9036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9054,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9054,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9083,
											"end": 9087,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9074,
											"end": 9088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9067,
											"end": 9101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9137,
											"end": 9141,
											"name": "PUSH",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9122,
											"end": 9142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 9158,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 7085,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6815,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 7010,
											"end": 7014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7023,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6999,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6999,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6999,
											"end": 7024,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6999,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7046,
											"end": 7051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7034,
											"end": 7052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7052,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7034,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7078,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6815,
											"end": 7085,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6815,
											"end": 7085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2059,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2131,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2143,
											"end": 2154,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2168,
											"end": 2172,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2157,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2157,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2173,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2295,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2371,
											"end": 2387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2407,
											"end": 2421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2371,
											"end": 2387,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6295,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6204,
											"end": 6295,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6295,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6382,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6187,
											"end": 6382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6370,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6320,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6320,
											"end": 6371,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6382,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6187,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12133,
											"end": 12158,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12158,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12158,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12206,
											"end": 12210,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 12194,
											"end": 12211,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12194,
											"end": 12211,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12174,
											"end": 12192,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12174,
											"end": 12192,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12174,
											"end": 12192,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12167,
											"end": 12212,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12167,
											"end": 12212,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12167,
											"end": 12212,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12167,
											"end": 12212,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12221,
											"end": 12255,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12221,
											"end": 12255,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12221,
											"end": 12255,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12264,
											"end": 12298,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12264,
											"end": 12298,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12264,
											"end": 12298,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12105,
											"end": 12124,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 12105,
											"end": 12124,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6531,
											"end": 6551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6527,
											"end": 6628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 6567,
											"end": 6617,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6628,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6527,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6654,
											"end": 6674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5154,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1080,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 569,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 637,
											"end": 666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 637,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 637,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 637,
											"end": 666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 637,
											"end": 666,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 633,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 633,
											"end": 1074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 1080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 1074,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 633,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 733,
											"end": 771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 733,
											"end": 771,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 733,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 733,
											"end": 771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 733,
											"end": 771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 733,
											"end": 771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 729,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 729,
											"end": 1074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 787,
											"end": 821,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12643,
											"end": 12645,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 787,
											"end": 821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12625,
											"end": 12646,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12682,
											"end": 12684,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12655,
											"end": 12685,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12721,
											"end": 12747,
											"name": "PUSH",
											"source": 18,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 12748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 12441,
											"end": 12789,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 729,
											"end": 1074,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 729,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 851,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 842,
											"end": 886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 842,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 842,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 842,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 886,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 838,
											"end": 1074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 902,
											"end": 943,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 943,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 902,
											"end": 943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 943,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 902,
											"end": 943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12978,
											"end": 12999,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13035,
											"end": 13037,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13008,
											"end": 13038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13074,
											"end": 13107,
											"name": "PUSH",
											"source": 18,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13047,
											"end": 13108,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 902,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 12794,
											"end": 13149,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 838,
											"end": 1074,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 838,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 964,
											"end": 969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 964,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 960,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 960,
											"end": 1074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13356,
											"end": 13358,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13338,
											"end": 13359,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13395,
											"end": 13397,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13368,
											"end": 13398,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13434,
											"end": 13468,
											"name": "PUSH",
											"source": 18,
											"value": "45434453413A20696E76616C6964207369676E6174757265202773272076616C"
										},
										{
											"begin": 13414,
											"end": 13432,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 13414,
											"end": 13432,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13414,
											"end": 13432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13407,
											"end": 13469,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13485,
											"end": 13503,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 13485,
											"end": 13503,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13485,
											"end": 13503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13478,
											"end": 13510,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13527,
											"end": 13546,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 13527,
											"end": 13546,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1019,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 13154,
											"end": 13552,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2536,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2633,
											"end": 2673,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2673,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2687,
											"end": 2698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2698,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 2683,
											"end": 2752,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CD44AC3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14,
											"end": 437,
											"name": "tag",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 14,
											"end": 437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 160,
											"end": 163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 342,
											"end": 345,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 338,
											"end": 354,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 334,
											"end": 361,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 327,
											"end": 365,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 426,
											"end": 430,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 421,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 410,
											"end": 412,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 398,
											"end": 413,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 394,
											"end": 423,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 389,
											"end": 392,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 385,
											"end": 424,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 381,
											"end": 431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 374,
											"end": 431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 442,
											"end": 662,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 442,
											"end": 662,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 573,
											"end": 594,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 637,
											"end": 655,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 611,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 603,
											"end": 656,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 442,
											"end": 662,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 667,
											"end": 840,
											"name": "tag",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 667,
											"end": 840,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 735,
											"end": 755,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 784,
											"end": 815,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 784,
											"end": 815,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 774,
											"end": 816,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 774,
											"end": 816,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 764,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 764,
											"end": 834,
											"name": "tag",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 667,
											"end": 840,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 667,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 971,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 949,
											"end": 972,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 945,
											"end": 977,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 942,
											"end": 994,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 942,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 942,
											"end": 994,
											"name": "tag",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 1013,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1003,
											"end": 1042,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 845,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1599,
											"end": 1622,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1595,
											"end": 1627,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "tag",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 1663,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "tag",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 1711,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "tag",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1800,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2362,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 2182,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2273,
											"end": 2280,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2269,
											"end": 2292,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2265,
											"end": 2297,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2300,
											"end": 2312,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "tag",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2356,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2182,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2367,
											"end": 2553,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 2367,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2458,
											"end": 2465,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2454,
											"end": 2477,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "tag",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2518,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2518,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 2518,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2558,
											"end": 3817,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2558,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2967,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2959,
											"end": 2962,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 2969,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2932,
											"end": 2941,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2925,
											"end": 2970,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3000,
											"end": 3031,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 3095,
											"end": 3098,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3072,
											"end": 3078,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 3054,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "tag",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3136,
											"end": 3158,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3109,
											"end": 3159,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "333"
										},
										{
											"begin": 3182,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 3274,
											"end": 3293,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3274,
											"end": 3293,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3267,
											"end": 3328,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3403,
											"end": 3406,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3381,
											"end": 3432,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3503,
											"end": 3525,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3503,
											"end": 3525,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3503,
											"end": 3525,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "tag",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3630,
											"end": 3643,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "tag",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "SWAP13",
											"source": 18
										},
										{
											"begin": 2558,
											"end": 3817,
											"name": "SWAP12",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4155,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4187,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4189,
											"end": 4195,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4245,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4213,
											"end": 4246,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4259,
											"end": 4260,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 4282,
											"end": 4311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4272,
											"end": 4311,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 4272,
											"end": 4311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 4330,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4320,
											"end": 4368,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4320,
											"end": 4368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4387,
											"end": 4419,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4377,
											"end": 4419,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4377,
											"end": 4419,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4438,
											"end": 4470,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4509,
											"end": 4518,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4505,
											"end": 4524,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4492,
											"end": 4525,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4558,
											"end": 4563,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4554,
											"end": 4570,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4547,
											"end": 4552,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4544,
											"end": 4571,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP10",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4645,
											"end": 4664,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4645,
											"end": 4664,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4665,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4665,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4715,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4684,
											"end": 4717,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4684,
											"end": 4717,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4030,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4857,
											"end": 4859,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4828,
											"end": 4860,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4863,
											"end": 4875,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 4896,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4886,
											"end": 4925,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4886,
											"end": 4925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 4944,
											"end": 4982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4934,
											"end": 4982,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4934,
											"end": 4982,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4728,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5190,
											"end": 5194,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5178,
											"end": 5195,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5235,
											"end": 5241,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5232,
											"end": 5246,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 5212,
											"end": 5230,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5209,
											"end": 5247,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5289,
											"end": 5299,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 5284,
											"end": 5287,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5301,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5357,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5378,
											"end": 5600,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 5378,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5474,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5474,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5474,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5461,
											"end": 5594,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5461,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 5461,
											"end": 5594,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5516,
											"end": 5526,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 5504,
											"end": 5505,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5528,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 5548,
											"end": 5549,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5584,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12309,
											"end": 12436,
											"name": "tag",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 12309,
											"end": 12436,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12370,
											"end": 12380,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 12365,
											"end": 12368,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 12361,
											"end": 12381,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12382,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12401,
											"end": 12405,
											"name": "PUSH",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 12398,
											"end": 12399,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 12391,
											"end": 12406,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12425,
											"end": 12429,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12422,
											"end": 12423,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12430,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"Counters.sol",
								"ECDSA.sol",
								"EIP712.sol",
								"ERC20.sol",
								"ERC20Burnable.sol",
								"ERC20Permit.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"IERC20Permit.sol",
								"IERC5267.sol",
								"Math.sol",
								"Ownable.sol",
								"ShortStrings.sol",
								"SignedMath.sol",
								"StorageSlot.sol",
								"Strings.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"eip712Domain()": "84b0196e",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token.sol\":\"Phoenix\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"ECDSA.sol\":{\"keccak256\":\"0x905addb1f0b1b298fd10ae2f783e8ecb82b1a64407ed5817cb80a5ace9ac241d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efe506fb51c94496a7c280ffcd2d9d77b3ace39d219a25f9c0dc126b067f7c9b\",\"dweb:/ipfs/QmaedTwLtFhDdkwB67afYUAqcrdo3FZXqvyXeJW1bhAoe2\"]},\"EIP712.sol\":{\"keccak256\":\"0x9d38cb4e0e450c2d521e128c61446f8c19109707b2f3c697a8570ed9a750b340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5284e2ca972fcf8ac51fba236bd23f9bc429206c474ad8b7c0e7da160e4dd6a7\",\"dweb:/ipfs/QmbSWGLJvnfufHZ5BcoyBNxnKhPZc3LssqqNbKTLiEA7Rt\"]},\"ERC20.sol\":{\"keccak256\":\"0x3cf8f84f7252795f0eea72f63ac10d1b98df355ab0e4a7bb935c06f0b72b6b03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://417e16f78bfc6b7511eaaaf707ea5dc69d3cf6d2c77868246c8f6a6b457e0844\",\"dweb:/ipfs/QmawucGLLvZ3xsiFLL1yBkiqQVpBUJ4f1YcRRX49mvNQB3\"]},\"ERC20Burnable.sol\":{\"keccak256\":\"0xbf214cdbd576efde33080494f8e2bcaab7c9cb21ac277e34a2174a9f0207ed04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39261f45741668781d3cd59a7ee1927e7e7559204a00ca59638eb93ddfe48eb2\",\"dweb:/ipfs/QmUPHj8EvpZf5qh7PiUn3CVAAjsYzPZtY97Fk6xTrwww1L\"]},\"ERC20Permit.sol\":{\"keccak256\":\"0x5246c7c00cc7e6975819ca21f37428fb69c4320f52c92e811ad30f7e5512848a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42e17bc7eb725858c6a6219efd58d79b3679674c7693dfeac45fc08aba04a940\",\"dweb:/ipfs/QmSJD2U5Wrmo36GWZw7iPppNpXrGahRZCUNzAEkAXorWZY\"]},\"IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]},\"IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"Ownable.sol\":{\"keccak256\":\"0x0b00f4e5a26df5c869a274e6ffa267b5abd90904e66a3f0343ef2a58434c5158\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96803af55a7f84920eaacb3ee0a808cb6f59eb6085f526dedd8a932c2ef22d73\",\"dweb:/ipfs/QmYbb6dyPCihUQd4tAJ7hR4HcpZyXcYdNCZT5wTK8mQJnB\"]},\"ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"Strings.sol\":{\"keccak256\":\"0x3cfda6d953ac3159aeeb7542714986ecc71d9a8075300c47554e9318f89e5eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2d0cf8179e46c82693c3a600e964854ace52a8446349106ff77342720a2d596\",\"dweb:/ipfs/QmZ1rLCSYgbbozfsdbyhGALbNCJBgvy2MWABHTqyhAA2Fj\"]},\"token.sol\":{\"keccak256\":\"0x8d0ea6befe9965f09ebd80ff18f8dadde31fa9031f3023ea42fccd550da95c29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf0f930c5f9fc934ab8935c14ee2eec54bd8c6e064e2080b5765eb99026e8ed\",\"dweb:/ipfs/QmaKFsJM2qZmi5jxRpbSr9NPSas2nToASV9Gh2u5BaT47f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "token.sol:Phoenix",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 687,
								"contract": "token.sol:Phoenix",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 689,
								"contract": "token.sol:Phoenix",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 691,
								"contract": "token.sol:Phoenix",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 693,
								"contract": "token.sol:Phoenix",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 494,
								"contract": "token.sol:Phoenix",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 496,
								"contract": "token.sol:Phoenix",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1319,
								"contract": "token.sol:Phoenix",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(Counter)27_storage)"
							},
							{
								"astId": 1327,
								"contract": "token.sol:Phoenix",
								"label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
								"offset": 0,
								"slot": "8",
								"type": "t_bytes32"
							},
							{
								"astId": 2506,
								"contract": "token.sol:Phoenix",
								"label": "_owner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)27_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)27_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)27_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 26,
										"contract": "token.sol:Phoenix",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"Counters.sol": {
				"ast": {
					"absolutePath": "Counters.sol",
					"exportedSymbols": {
						"Counters": [
							95
						]
					},
					"id": 96,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:1",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "Counters",
							"nameLocation": "432:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 27,
									"members": [
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "786:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 25,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:1",
									"nodeType": "StructDefinition",
									"scope": 95,
									"src": "447:374:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "901:38:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 35,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "918:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:1",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 26,
													"src": "918:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 34,
												"id": 37,
												"nodeType": "Return",
												"src": "911:21:1"
											}
										]
									},
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "844:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 29,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 28,
														"name": "Counter",
														"nameLocations": [
															"844:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "844:7:1"
													},
													"referencedDeclaration": 27,
													"src": "844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:1"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 95,
									"src": "827:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "998:70:1",
										"statements": [
											{
												"id": 51,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:1",
												"statements": [
													{
														"expression": {
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 45,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "1032:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:1",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "1032:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 50,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:1"
													}
												]
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "964:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "Counter",
														"nameLocations": [
															"964:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "964:7:1"
													},
													"referencedDeclaration": 27,
													"src": "964:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:1"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:1"
									},
									"scope": 95,
									"src": "945:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1127:176:1",
										"statements": [
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "1137:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"expression": {
														"id": 61,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:1",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 26,
													"src": "1153:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 65,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "1185:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:1"
											},
											{
												"id": 79,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:1",
												"statements": [
													{
														"expression": {
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 71,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "1260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:1",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "1260:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 74,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1277:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 78,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:1"
													}
												]
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1093:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 55,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 54,
														"name": "Counter",
														"nameLocations": [
															"1093:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "1093:7:1"
													},
													"referencedDeclaration": 27,
													"src": "1093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:1"
									},
									"scope": 95,
									"src": "1074:229:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1358:35:1",
										"statements": [
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 87,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:1",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "1368:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:1"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1324:23:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 83,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 82,
														"name": "Counter",
														"nameLocations": [
															"1324:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 27,
														"src": "1324:7:1"
													},
													"referencedDeclaration": 27,
													"src": "1324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:1"
									},
									"scope": 95,
									"src": "1309:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 96,
							"src": "424:971:1",
							"usedErrors": []
						}
					],
					"src": "87:1309:1"
				},
				"id": 1
			},
			"ECDSA.sol": {
				"ast": {
					"absolutePath": "ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							461
						],
						"Math": [
							2498
						],
						"SignedMath": [
							2932
						],
						"Strings": [
							3271
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 97,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "Strings.sol",
							"file": "./Strings.sol",
							"id": 98,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 3272,
							"src": "137:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 99,
								"nodeType": "StructuredDocumentation",
								"src": "162:205:2",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 461,
							"linearizedBaseContracts": [
								461
							],
							"name": "ECDSA",
							"nameLocation": "376:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 105,
									"members": [
										{
											"id": 100,
											"name": "NoError",
											"nameLocation": "416:7:2",
											"nodeType": "EnumValue",
											"src": "416:7:2"
										},
										{
											"id": 101,
											"name": "InvalidSignature",
											"nameLocation": "433:16:2",
											"nodeType": "EnumValue",
											"src": "433:16:2"
										},
										{
											"id": 102,
											"name": "InvalidSignatureLength",
											"nameLocation": "459:22:2",
											"nodeType": "EnumValue",
											"src": "459:22:2"
										},
										{
											"id": 103,
											"name": "InvalidSignatureS",
											"nameLocation": "491:17:2",
											"nodeType": "EnumValue",
											"src": "491:17:2"
										},
										{
											"id": 104,
											"name": "InvalidSignatureV",
											"nameLocation": "518:17:2",
											"nodeType": "EnumValue",
											"src": "518:17:2"
										}
									],
									"name": "RecoverError",
									"nameLocation": "393:12:2",
									"nodeType": "EnumDefinition",
									"src": "388:175:2"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "623:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$105",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 111,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "637:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$105",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 112,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "646:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "659:7:2",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "646:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$105",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "637:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$105",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 117,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 118,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "742:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "755:16:2",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 101,
															"src": "742:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "733:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 126,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "842:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$105",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 127,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "851:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "864:22:2",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 102,
																"src": "851:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$105",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "842:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$105",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 135,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "964:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$105",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 136,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "973:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "986:17:2",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 103,
																	"src": "973:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$105",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "964:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 144,
															"nodeType": "IfStatement",
															"src": "960:114:2",
															"trueBody": {
																"id": 143,
																"nodeType": "Block",
																"src": "1005:69:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1026:36:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 139,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1019:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1019:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 142,
																		"nodeType": "ExpressionStatement",
																		"src": "1019:44:2"
																	}
																]
															}
														},
														"id": 145,
														"nodeType": "IfStatement",
														"src": "838:236:2",
														"trueBody": {
															"id": 134,
															"nodeType": "Block",
															"src": "888:66:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "909:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 130,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "902:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "902:41:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 133,
																	"nodeType": "ExpressionStatement",
																	"src": "902:41:2"
																}
															]
														}
													},
													"id": 146,
													"nodeType": "IfStatement",
													"src": "729:345:2",
													"trueBody": {
														"id": 125,
														"nodeType": "Block",
														"src": "773:59:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "794:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 121,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "787:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "787:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 124,
																"nodeType": "ExpressionStatement",
																"src": "787:34:2"
															}
														]
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "633:441:2",
												"trueBody": {
													"id": 116,
													"nodeType": "Block",
													"src": "668:55:2",
													"statements": [
														{
															"functionReturnParameters": 110,
															"id": 115,
															"nodeType": "Return",
															"src": "682:7:2"
														}
													]
												}
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "578:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "603:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "590:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$105",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 106,
														"name": "RecoverError",
														"nameLocations": [
															"590:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "590:12:2"
													},
													"referencedDeclaration": 105,
													"src": "590:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$105",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:20:2"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:2"
									},
									"scope": 461,
									"src": "569:511:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2270:626:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 162,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2284:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2294:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2284:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2304:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2284:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 192,
													"nodeType": "Block",
													"src": "2809:81:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2839:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2831:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 184,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2831:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2831:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 188,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "2843:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2856:22:2",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 102,
																		"src": "2843:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$105",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 190,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2830:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 161,
															"id": 191,
															"nodeType": "Return",
															"src": "2823:56:2"
														}
													]
												},
												"id": 193,
												"nodeType": "IfStatement",
												"src": "2280:610:2",
												"trueBody": {
													"id": 183,
													"nodeType": "Block",
													"src": "2308:495:2",
													"statements": [
														{
															"assignments": [
																167
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 167,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2330:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 183,
																	"src": "2322:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 166,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2322:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 168,
															"nodeType": "VariableDeclarationStatement",
															"src": "2322:9:2"
														},
														{
															"assignments": [
																170
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 170,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2353:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 183,
																	"src": "2345:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 169,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2345:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 171,
															"nodeType": "VariableDeclarationStatement",
															"src": "2345:9:2"
														},
														{
															"assignments": [
																173
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 173,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2374:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 183,
																	"src": "2368:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 172,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2368:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 174,
															"nodeType": "VariableDeclarationStatement",
															"src": "2368:7:2"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2576:171:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2594:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2609:9:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2620:4:2",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2599:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2594:1:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2643:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2658:9:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2669:4:2",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2654:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2654:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2648:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2648:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2643:1:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2692:41:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2702:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2715:9:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2726:4:2",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2711:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2711:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2705:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2705:27:2"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2697:4:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:36:2"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2692:1:2"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 167,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2594:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 170,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2643:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2609:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2658:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2715:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 173,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2692:1:2",
																	"valueSize": 1
																}
															],
															"id": 175,
															"nodeType": "InlineAssembly",
															"src": "2567:180:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 177,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "2778:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 178,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "2784:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 179,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "2787:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 180,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "2790:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 176,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		195,
																		269,
																		363
																	],
																	"referencedDeclaration": 363,
																	"src": "2767:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$105_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2767:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 161,
															"id": 182,
															"nodeType": "Return",
															"src": "2760:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "1086:1053:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2153:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2181:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2173:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2208:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2195:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2195:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:60:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2256:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$105",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 159,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 158,
														"name": "RecoverError",
														"nameLocations": [
															"2256:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "2256:12:2"
													},
													"referencedDeclaration": 105,
													"src": "2256:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$105",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:23:2"
									},
									"scope": 461,
									"src": "2144:752:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "3791:140:2",
										"statements": [
											{
												"assignments": [
													206,
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3810:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "3802:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 205,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3802:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3834:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "3821:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$105",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 208,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 207,
																"name": "RecoverError",
																"nameLocations": [
																	"3821:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 105,
																"src": "3821:12:2"
															},
															"referencedDeclaration": 105,
															"src": "3821:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"arguments": [
														{
															"id": 211,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "3854:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "3860:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 210,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															195,
															269,
															363
														],
														"referencedDeclaration": 195,
														"src": "3843:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$105_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3843:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3801:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3892:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 215,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "3880:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$105_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "3880:18:2"
											},
											{
												"expression": {
													"id": 219,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 206,
													"src": "3915:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 204,
												"id": 220,
												"nodeType": "Return",
												"src": "3908:16:2"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2902:775:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3691:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3716:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3708:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3743:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3730:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3730:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3698:60:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "3782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:9:2"
									},
									"scope": 461,
									"src": "3682:249:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4318:245:2",
										"statements": [
											{
												"assignments": [
													238
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4336:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "4328:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 237,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4340:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4382:66:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4357:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 240,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4357:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4357:105:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4340:122:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4328:134:2"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4478:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "4472:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 246,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4472:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 252,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 229,
																					"src": "4497:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4489:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 250,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4489:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4489:11:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4504:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4489:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4488:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4511:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4488:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4482:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 248,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4482:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4482:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4472:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "4542:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4548:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 264,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4551:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 265,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "4554:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															195,
															269,
															363
														],
														"referencedDeclaration": 363,
														"src": "4531:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$105_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 236,
												"id": 267,
												"nodeType": "Return",
												"src": "4524:32:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "3937:243:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4214:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4236:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 226,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4255:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4295:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4304:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$105",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 233,
														"name": "RecoverError",
														"nameLocations": [
															"4304:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "4304:12:2"
													},
													"referencedDeclaration": 105,
													"src": "4304:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$105",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:23:2"
									},
									"scope": 461,
									"src": "4185:378:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "4844:136:2",
										"statements": [
											{
												"assignments": [
													282,
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4863:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "4855:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 281,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4855:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4887:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "4874:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$105",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 284,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 283,
																"name": "RecoverError",
																"nameLocations": [
																	"4874:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 105,
																"src": "4874:12:2"
															},
															"referencedDeclaration": 105,
															"src": "4874:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"arguments": [
														{
															"id": 287,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4907:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 288,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4913:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 289,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4916:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 286,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															195,
															269,
															363
														],
														"referencedDeclaration": 269,
														"src": "4896:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$105_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4896:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4854:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4941:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 292,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "4929:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$105_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4929:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "4929:18:2"
											},
											{
												"expression": {
													"id": 296,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 282,
													"src": "4964:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 280,
												"id": 297,
												"nodeType": "Return",
												"src": "4957:16:2"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4569:154:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4737:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4762:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "4754:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4784:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "4776:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "4795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4795:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4744:67:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "4835:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4834:9:2"
									},
									"scope": 461,
									"src": "4728:252:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5303:1379:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 318,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "6212:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 316,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6204:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6204:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6229:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6204:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "IfStatement",
												"src": "6187:195:2",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "6306:76:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6336:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6328:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 322,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6328:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6328:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 326,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "6340:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6353:17:2",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "6340:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$105",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6327:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 315,
															"id": 329,
															"nodeType": "Return",
															"src": "6320:51:2"
														}
													]
												}
											},
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6484:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "6476:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 332,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6476:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 335,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "6503:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 336,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "6509:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 337,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "6512:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 338,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6515:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 334,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6493:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6493:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6476:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "6531:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6549:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6541:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6541:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6541:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6531:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 356,
												"nodeType": "IfStatement",
												"src": "6527:101:2",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "6553:75:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6583:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6575:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 347,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6575:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6575:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 351,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "6587:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6600:16:2",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 101,
																		"src": "6587:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$105",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6574:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 315,
															"id": 354,
															"nodeType": "Return",
															"src": "6567:50:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 357,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "6646:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 358,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "6654:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$105_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6667:7:2",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 100,
															"src": "6654:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 360,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6645:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 315,
												"id": 361,
												"nodeType": "Return",
												"src": "6638:37:2"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "4986:163:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5163:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5191:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5183:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5211:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5205:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 303,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5230:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5222:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5249:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5173:83:2"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5280:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5280:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$105",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 312,
														"name": "RecoverError",
														"nameLocations": [
															"5289:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "5289:12:2"
													},
													"referencedDeclaration": 105,
													"src": "5289:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$105",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5279:23:2"
									},
									"scope": 461,
									"src": "5154:1528:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "6947:138:2",
										"statements": [
											{
												"assignments": [
													378,
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6966:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 395,
														"src": "6958:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6990:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 395,
														"src": "6977:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$105",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 380,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 379,
																"name": "RecoverError",
																"nameLocations": [
																	"6977:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 105,
																"src": "6977:12:2"
															},
															"referencedDeclaration": 105,
															"src": "6977:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "7010:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 384,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7016:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 385,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7019:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 386,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "7022:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 382,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															195,
															269,
															363
														],
														"referencedDeclaration": 363,
														"src": "6999:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$105_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6999:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$105_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6957:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7046:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$105",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 389,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "7034:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$105_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7034:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "7034:18:2"
											},
											{
												"expression": {
													"id": 393,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 378,
													"src": "7069:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 376,
												"id": 394,
												"nodeType": "Return",
												"src": "7062:16:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "6688:122:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6824:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6849:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6841:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6869:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6863:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 367,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6863:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6888:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6880:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6880:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6907:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6899:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:83:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "6938:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6937:9:2"
									},
									"scope": 461,
									"src": "6815:270:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "7475:310:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7631:148:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7652:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7658:34:2",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7645:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7645:48:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:4:2",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "7719:4:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7706:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7706:18:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7737:32:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7758:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7764:4:2",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7748:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:21:2"
															},
															"variableNames": [
																{
																	"name": "message",
																	"nodeType": "YulIdentifier",
																	"src": "7737:7:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "7719:4:2",
														"valueSize": 1
													},
													{
														"declaration": 402,
														"isOffset": false,
														"isSlot": false,
														"src": "7737:7:2",
														"valueSize": 1
													}
												],
												"id": 404,
												"nodeType": "InlineAssembly",
												"src": "7622:157:2"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "7091:279:2",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7384:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7424:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7416:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7406:28:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7466:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7458:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7457:17:2"
									},
									"scope": 461,
									"src": "7375:410:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "8164:236:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8258:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 420,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "8329:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8331:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8329:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 418,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3271,
																			"src": "8312:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$3271_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8320:8:2",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3101,
																		"src": "8312:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8312:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 423,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "8360:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 415,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8220:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8224:12:2",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8220:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8220:159:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 414,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8193:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:200:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 413,
												"id": 426,
												"nodeType": "Return",
												"src": "8174:219:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "7791:274:2",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "8079:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "8124:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "8111:14:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8111:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8101:30:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "8155:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 411,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8154:9:2"
									},
									"scope": 461,
									"src": "8070:330:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "8868:290:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8930:222:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8944:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8961:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8955:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8955:11:2"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "8948:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8986:3:2"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8991:10:2",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:23:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:23:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9026:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9031:4:2",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9022:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9022:14:2"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "9038:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9015:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9015:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9015:39:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9078:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9083:4:2",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:14:2"
																	},
																	{
																		"name": "structHash",
																		"nodeType": "YulIdentifier",
																		"src": "9090:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9114:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9132:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9137:4:2",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9122:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:20:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9114:4:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 436,
														"isOffset": false,
														"isSlot": false,
														"src": "9114:4:2",
														"valueSize": 1
													},
													{
														"declaration": 431,
														"isOffset": false,
														"isSlot": false,
														"src": "9038:15:2",
														"valueSize": 1
													},
													{
														"declaration": 433,
														"isOffset": false,
														"isSlot": false,
														"src": "9090:10:2",
														"valueSize": 1
													}
												],
												"id": 438,
												"nodeType": "InlineAssembly",
												"src": "8921:231:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "8406:328:2",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8748:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8781:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8773:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8814:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8806:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 432,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8763:67:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8862:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "8854:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 435,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8854:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8853:14:2"
									},
									"scope": 461,
									"src": "8739:419:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "9495:80:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9539:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 454,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "9551:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 455,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "9562:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 451,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9522:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9526:12:2",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9522:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9522:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 450,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9512:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9512:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 449,
												"id": 458,
												"nodeType": "Return",
												"src": "9505:63:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "9164:193:2",
										"text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "9371:31:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "9420:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "9412:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9452:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "9439:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9439:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:60:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "9486:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9486:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9485:9:2"
									},
									"scope": 461,
									"src": "9362:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 462,
							"src": "368:9209:2",
							"usedErrors": []
						}
					],
					"src": "112:9466:2"
				},
				"id": 2
			},
			"EIP712.sol": {
				"ast": {
					"absolutePath": "EIP712.sol",
					"exportedSymbols": {
						"ECDSA": [
							461
						],
						"EIP712": [
							665
						],
						"IERC5267": [
							1632
						],
						"Math": [
							2498
						],
						"ShortString": [
							2616
						],
						"ShortStrings": [
							2827
						],
						"SignedMath": [
							2932
						],
						"StorageSlot": [
							3042
						],
						"Strings": [
							3271
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 462,
							"src": "138:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ShortStrings.sol",
							"file": "./ShortStrings.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 2828,
							"src": "160:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC5267.sol",
							"file": "./IERC5267.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1633,
							"src": "189:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 468,
										"name": "IERC5267",
										"nameLocations": [
											"1821:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1632,
										"src": "1821:8:3"
									},
									"id": 469,
									"nodeType": "InheritanceSpecifier",
									"src": "1821:8:3"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "215:1577:3",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
							},
							"fullyImplemented": true,
							"id": 665,
							"linearizedBaseContracts": [
								665,
								1632
							],
							"name": "EIP712",
							"nameLocation": "1811:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 471,
									"libraryName": {
										"id": 470,
										"name": "ShortStrings",
										"nameLocations": [
											"1842:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2827,
										"src": "1842:12:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1836:25:3"
								},
								{
									"constant": true,
									"id": 476,
									"mutability": "constant",
									"name": "_TYPE_HASH",
									"nameLocation": "1892:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "1867:163:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 472,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1867:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 474,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1936:84:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 473,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1913:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1913:117:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 478,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2255:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2229:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 477,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2229:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 480,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2309:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2283:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 479,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2283:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 482,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2355:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2329:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 481,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2329:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 484,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2399:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2373:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 483,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2442:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2416:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 485,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2416:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 489,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2493:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2463:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 487,
											"name": "ShortString",
											"nameLocations": [
												"2463:11:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2616,
											"src": "2463:11:3"
										},
										"referencedDeclaration": 2616,
										"src": "2463:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2534:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2504:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 491,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 490,
											"name": "ShortString",
											"nameLocations": [
												"2504:11:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2616,
											"src": "2504:11:3"
										},
										"referencedDeclaration": 2616,
										"src": "2504:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 494,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2563:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2548:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 493,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2548:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 496,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2597:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2582:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 495,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2582:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3239:376:3",
										"statements": [
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3249:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 507,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "3288:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 505,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "3257:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3262:25:3",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2768,
															"src": "3257:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2616_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3257:45:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
															"typeString": "ShortString"
														}
													},
													"src": "3249:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "3249:53:3"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3312:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 514,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "3357:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 512,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "3323:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3331:25:3",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2768,
															"src": "3323:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2616_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3323:51:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
															"typeString": "ShortString"
														}
													},
													"src": "3312:62:3",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3312:62:3"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3384:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 522,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "3414:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3408:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 520,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3408:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3408:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 519,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3398:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3398:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3384:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "3384:36:3"
											},
											{
												"expression": {
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "3430:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 531,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "3463:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3457:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 529,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3457:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3457:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 528,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3447:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3447:25:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3430:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3430:42:3"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 536,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3483:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 537,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3500:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3506:7:3",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3500:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3483:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "3483:30:3"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3523:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 542,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "3548:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3548:23:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3523:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "3523:48:3"
											},
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 546,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3581:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 549,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3603:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$665",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$665",
																	"typeString": "contract EIP712"
																}
															],
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3595:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 547,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3595:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3595:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3581:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "3581:27:3"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "2620:559:3",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 554,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3210:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3196:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3196:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3230:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3216:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3216:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:43:3"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:0:3"
									},
									"scope": 665,
									"src": "3184:431:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3763:200:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 562,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3785:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$665",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$665",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3777:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3777:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3777:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 564,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3794:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3777:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 566,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3809:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3815:7:3",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3809:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 568,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3826:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3809:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3777:63:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 577,
													"nodeType": "Block",
													"src": "3902:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 574,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "3923:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3923:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 559,
															"id": 576,
															"nodeType": "Return",
															"src": "3916:30:3"
														}
													]
												},
												"id": 578,
												"nodeType": "IfStatement",
												"src": "3773:184:3",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "3842:54:3",
													"statements": [
														{
															"expression": {
																"id": 571,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "3863:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 559,
															"id": 572,
															"nodeType": "Return",
															"src": "3856:29:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3621:75:3",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3710:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3728:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3754:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 557,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:9:3"
									},
									"scope": 665,
									"src": "3701:262:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4033:276:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 588,
																	"name": "_TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "4121:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 589,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "4153:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 590,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "4186:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 591,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4222:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4228:7:3",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4222:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 595,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4265:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$665",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$665",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4257:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 593,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4257:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4257:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 586,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4089:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4093:6:3",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4089:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4089:199:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 585,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4062:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:240:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 584,
												"id": 599,
												"nodeType": "Return",
												"src": "4043:259:3"
											}
										]
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "3978:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3999:2:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4024:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 582,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:9:3"
									},
									"scope": 665,
									"src": "3969:340:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "5034:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 611,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5073:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5073:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 613,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5095:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 609,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "5051:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$461_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5057:15:3",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 440,
														"src": "5051:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5051:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 608,
												"id": 615,
												"nodeType": "Return",
												"src": "5044:62:3"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4315:614:3",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4943:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4977:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4969:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 603,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4959:34:3"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "5025:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 606,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5024:9:3"
									},
									"scope": 665,
									"src": "4934:179:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1631
									],
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "5546:288:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [
																{
																	"id": 640,
																	"name": "_nameFallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "5634:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"expression": {
																	"id": 638,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "5607:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																		"typeString": "ShortString"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5613:20:3",
																"memberName": "toStringWithFallback",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2795,
																"src": "5607:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2616_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2616_$",
																	"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5607:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 644,
																	"name": "_versionFallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "5692:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"expression": {
																	"id": 642,
																	"name": "_version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "5662:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																		"typeString": "ShortString"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5671:20:3",
																"memberName": "toStringWithFallback",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2795,
																"src": "5662:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2616_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2616_$",
																	"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5662:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 646,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5723:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5729:7:3",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5723:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 650,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5758:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$665",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$665",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5750:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5750:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5785:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5777:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 652,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5777:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5777:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5815:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5801:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 656,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5805:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 657,
																	"nodeType": "ArrayTypeName",
																	"src": "5805:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5801:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 661,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5563:264:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 636,
												"id": 662,
												"nodeType": "Return",
												"src": "5556:271:3"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "5119:77:3",
										"text": " @dev See {EIP-5267}.\n _Available since v4.9._"
									},
									"functionSelector": "84b0196e",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5210:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5277:8:3"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5222:2:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5323:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5316:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 621,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5316:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5357:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5343:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5343:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5389:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5375:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5375:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5418:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5410:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5447:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5439:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5486:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5478:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5521:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "5504:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 633,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5504:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 634,
													"nodeType": "ArrayTypeName",
													"src": "5504:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5302:239:3"
									},
									"scope": 665,
									"src": "5201:633:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 666,
							"src": "1793:4043:3",
							"usedErrors": [
								2624,
								2626
							]
						}
					],
					"src": "113:5724:3"
				},
				"id": 3
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							1252
						],
						"IERC20": [
							1546
						],
						"IERC20Metadata": [
							1571
						]
					},
					"id": 1253,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1253,
							"sourceUnit": 1547,
							"src": "130:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1253,
							"sourceUnit": 1572,
							"src": "153:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1253,
							"sourceUnit": 22,
							"src": "184:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 672,
										"name": "Context",
										"nameLocations": [
											"1529:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1529:7:4"
									},
									"id": 673,
									"nodeType": "InheritanceSpecifier",
									"src": "1529:7:4"
								},
								{
									"baseName": {
										"id": 674,
										"name": "IERC20",
										"nameLocations": [
											"1538:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1546,
										"src": "1538:6:4"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "1538:6:4"
								},
								{
									"baseName": {
										"id": 676,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1546:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1571,
										"src": "1546:14:4"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "1546:14:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "209:1301:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1252,
							"linearizedBaseContracts": [
								1252,
								1571,
								1546,
								21
							],
							"name": "ERC20",
							"nameLocation": "1520:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 681,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1603:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1252,
									"src": "1567:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 680,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 678,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1575:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1567:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 679,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1586:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 687,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1675:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1252,
									"src": "1619:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 686,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 682,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1627:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1619:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 685,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 683,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1646:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1638:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 684,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1657:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 689,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1709:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1252,
									"src": "1693:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1693:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 691,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1743:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1252,
									"src": "1728:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 690,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1728:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 693,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1769:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1252,
									"src": "1754:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 692,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1754:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2015:57:4",
										"statements": [
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 701,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "2025:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 702,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "2033:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2025:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "2025:13:4"
											},
											{
												"expression": {
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 705,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "2048:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 706,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "2058:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2048:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2048:17:4"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "1783:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 710,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1985:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1971:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2006:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1992:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 697,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1970:44:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2015:0:4"
									},
									"scope": 1252,
									"src": "1959:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1558
									],
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2206:29:4",
										"statements": [
											{
												"expression": {
													"id": 717,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 691,
													"src": "2223:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 716,
												"id": 718,
												"nodeType": "Return",
												"src": "2216:12:4"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "2078:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2146:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 713,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2173:8:4"
									},
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2150:2:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "2191:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2191:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:15:4"
									},
									"scope": 1252,
									"src": "2137:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1564
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "2419:31:4",
										"statements": [
											{
												"expression": {
													"id": 727,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 693,
													"src": "2436:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 726,
												"id": 728,
												"nodeType": "Return",
												"src": "2429:14:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2241:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2357:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2386:8:4"
									},
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:2:4"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2404:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2404:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:15:4"
									},
									"scope": 1252,
									"src": "2348:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1570
									],
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "3148:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3165:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 736,
												"id": 738,
												"nodeType": "Return",
												"src": "3158:9:4"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "2456:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3092:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 733,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3123:8:4"
									},
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3100:2:4"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "3141:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 734,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:7:4"
									},
									"scope": 1252,
									"src": "3083:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1495
									],
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "3304:36:4",
										"statements": [
											{
												"expression": {
													"id": 747,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 689,
													"src": "3321:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 746,
												"id": 748,
												"nodeType": "Return",
												"src": "3314:19:4"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "3180:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3243:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 743,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3277:8:4"
									},
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3254:2:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3295:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3294:9:4"
									},
									"scope": 1252,
									"src": "3234:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1503
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3495:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 759,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "3512:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 761,
													"indexExpression": {
														"id": 760,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3522:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3512:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 762,
												"nodeType": "Return",
												"src": "3505:25:4"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "3346:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3407:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 755,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3468:8:4"
									},
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3434:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3426:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:31:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3486:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3485:9:4"
									},
									"scope": 1252,
									"src": "3398:139:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1513
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "3840:104:4",
										"statements": [
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3858:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "3850:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3850:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 777,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3866:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3866:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3850:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "3898:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3905:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3909:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "3888:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3888:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3888:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3933:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 774,
												"id": 787,
												"nodeType": "Return",
												"src": "3926:11:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "3543:185:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3742:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3816:8:4"
									},
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3768:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3760:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3788:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3780:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:50:4"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3834:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3834:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3833:6:4"
									},
									"scope": 1252,
									"src": "3733:211:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1523
									],
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "4122:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 800,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4139:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 802,
														"indexExpression": {
															"id": 801,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "4151:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4139:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 804,
													"indexExpression": {
														"id": 803,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "4158:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4139:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 799,
												"id": 805,
												"nodeType": "Return",
												"src": "4132:34:4"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3950:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4011:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 796,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4095:8:4"
									},
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4038:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "4030:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4061:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "4053:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:54:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "4113:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4113:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:9:4"
									},
									"scope": 1252,
									"src": "4002:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1533
									],
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "4592:108:4",
										"statements": [
											{
												"assignments": [
													819
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4610:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 831,
														"src": "4602:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 818,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4602:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 820,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4618:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4602:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 824,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "4649:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4656:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 826,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "4665:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "4640:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4640:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "4640:32:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4689:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 817,
												"id": 830,
												"nodeType": "Return",
												"src": "4682:11:4"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "4179:297:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4490:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 814,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4568:8:4"
									},
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4515:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4507:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4540:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4532:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4497:55:4"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4586:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4586:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:6:4"
									},
									"scope": 1252,
									"src": "4481:219:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1545
									],
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "5395:153:4",
										"statements": [
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5413:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "5405:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 845,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5405:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 847,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5423:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5405:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "5461:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "5467:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "5476:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "5445:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5445:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "5445:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "5503:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "5509:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "5513:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 856,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "5493:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5493:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "5493:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5537:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 844,
												"id": 863,
												"nodeType": "Return",
												"src": "5530:11:4"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "4706:551:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5271:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 841,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5371:8:4"
									},
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5301:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5293:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5323:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5315:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5315:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5343:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5335:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:72:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5389:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5389:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5388:6:4"
									},
									"scope": 1252,
									"src": "5262:286:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "6059:140:4",
										"statements": [
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6077:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "6069:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6069:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 877,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6085:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6085:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6069:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "6116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "6123:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "6142:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 885,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "6149:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 883,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6132:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6132:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 887,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "6160:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6132:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "6107:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6107:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "6107:64:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6188:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 874,
												"id": 892,
												"nodeType": "Return",
												"src": "6181:11:4"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "5554:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5952:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5987:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5979:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5979:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6012:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "6004:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:59:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "6053:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:4"
									},
									"scope": 1252,
									"src": "5943:256:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "6807:362:4",
										"statements": [
											{
												"assignments": [
													905
												],
												"declarations": [
													{
														"constant": false,
														"id": 905,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6825:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "6817:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 904,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6817:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 906,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6833:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6833:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6817:28:4"
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6863:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "6855:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6855:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 912,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6899:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 911,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6882:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6855:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 917,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "6938:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 918,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "6958:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6938:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6987:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6917:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6917:119:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "6917:119:4"
											},
											{
												"id": 931,
												"nodeType": "UncheckedBlock",
												"src": "7046:95:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 924,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "7079:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 925,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "7086:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 926,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "7095:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 927,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "7114:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7095:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 923,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "7070:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7070:60:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "7070:60:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7158:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 903,
												"id": 933,
												"nodeType": "Return",
												"src": "7151:11:4"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "6205:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6695:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6730:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "6722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6722:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6755:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "6747:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6747:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:64:4"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "6801:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6801:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6800:6:4"
									},
									"scope": 1252,
									"src": "6686:483:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "7731:744:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 946,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "7749:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7765:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7757:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7757:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7757:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7749:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7769:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7741:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7741:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "7741:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "7827:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7833:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 957,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7833:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7833:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7827:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7845:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7819:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7819:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "7819:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7915:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "7921:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "7925:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 965,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "7894:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7894:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "7894:38:4"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7951:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "7943:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7943:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"baseExpression": {
														"id": 973,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "7965:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 975,
													"indexExpression": {
														"id": 974,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "7975:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7965:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7943:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 978,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "8011:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 979,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "8026:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8011:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8046:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7990:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7990:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "7990:106:4"
											},
											{
												"id": 998,
												"nodeType": "UncheckedBlock",
												"src": "8106:273:4",
												"statements": [
													{
														"expression": {
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 984,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "8130:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 986,
																"indexExpression": {
																	"id": 985,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "8140:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8130:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 987,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "8148:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 988,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "8162:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8148:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8130:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 991,
														"nodeType": "ExpressionStatement",
														"src": "8130:38:4"
													},
													{
														"expression": {
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 992,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "8345:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 994,
																"indexExpression": {
																	"id": 993,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "8355:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8345:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 995,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "8362:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8345:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 997,
														"nodeType": "ExpressionStatement",
														"src": "8345:23:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1000,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8403:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8409:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "8413:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 999,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "8394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8394:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "EmitStatement",
												"src": "8389:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8451:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8457:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "8461:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1005,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "8431:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8431:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "8431:37:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "7175:443:4",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7632:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7659:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "7651:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7681:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "7673:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7673:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "7693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:72:4"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7731:0:4"
									},
									"scope": 1252,
									"src": "7623:852:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "8816:470:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "8834:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8853:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8845:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1022,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8845:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8845:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8834:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8857:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8826:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8826:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "8826:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8931:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8923:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8923:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8923:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "8935:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "8944:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1030,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "8902:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8902:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "8902:49:4"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1039,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8962:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1040,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "8978:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8962:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "8962:22:4"
											},
											{
												"id": 1049,
												"nodeType": "UncheckedBlock",
												"src": "8994:175:4",
												"statements": [
													{
														"expression": {
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1043,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "9130:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1045,
																"indexExpression": {
																	"id": 1044,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "9140:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9130:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1046,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "9152:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9130:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1048,
														"nodeType": "ExpressionStatement",
														"src": "9130:28:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9200:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9192:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9192:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9192:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "9204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "9213:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "9183:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9183:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "EmitStatement",
												"src": "9178:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9259:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9251:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9251:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9251:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "9263:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "9272:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "9231:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9231:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "9231:48:4"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "8481:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8760:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8774:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "8766:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8766:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8791:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "8783:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8783:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8765:33:4"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8816:0:4"
									},
									"scope": 1252,
									"src": "8751:535:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "9671:594:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1078,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "9689:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9708:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9700:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1079,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9700:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9700:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9689:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9712:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9681:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9681:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "9681:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "9780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9797:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9789:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9789:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9789:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "9801:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "9759:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9759:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "9759:49:4"
											},
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9827:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1140,
														"src": "9819:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9819:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"baseExpression": {
														"id": 1098,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9844:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1100,
													"indexExpression": {
														"id": 1099,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "9854:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9844:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9819:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "9880:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1104,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "9898:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9880:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9906:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9872:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9872:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "9872:71:4"
											},
											{
												"id": 1121,
												"nodeType": "UncheckedBlock",
												"src": "9953:194:4",
												"statements": [
													{
														"expression": {
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1109,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "9977:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1111,
																"indexExpression": {
																	"id": 1110,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "9987:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9977:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1112,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "9998:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1113,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "10015:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9998:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9977:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1116,
														"nodeType": "ExpressionStatement",
														"src": "9977:44:4"
													},
													{
														"expression": {
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1117,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "10114:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "10130:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10114:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1120,
														"nodeType": "ExpressionStatement",
														"src": "10114:22:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1123,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "10171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10188:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10180:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10180:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10180:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10192:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "10162:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10162:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "EmitStatement",
												"src": "10157:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "10230:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10247:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10239:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1133,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10239:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10239:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10251:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "10210:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10210:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "10210:48:4"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "9292:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9615:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "9621:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9646:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "9638:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9620:33:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9671:0:4"
									},
									"scope": 1252,
									"src": "9606:659:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "10801:257:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1152,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "10819:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10836:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10828:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1153,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10828:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10828:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10819:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10840:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10811:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10811:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "10811:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "10897:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10916:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10908:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10908:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10908:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10897:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10920:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10889:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10889:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "10889:68:4"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1171,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "10968:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1174,
															"indexExpression": {
																"id": 1172,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "10980:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10968:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1175,
														"indexExpression": {
															"id": 1173,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "10987:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10968:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "10998:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10968:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "10968:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1180,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "11028:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "11035:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "11044:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1179,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "11019:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11019:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "EmitStatement",
												"src": "11014:37:4"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "10271:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10723:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "10715:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "10738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10771:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "10763:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10705:78:4"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10801:0:4"
									},
									"scope": 1252,
									"src": "10688:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "11459:367:4",
										"statements": [
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11477:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "11469:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11469:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "11506:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "11513:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1198,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "11496:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11496:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11469:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "11535:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1205,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11560:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1204,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11555:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11555:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11569:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11555:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11535:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "11531:289:4",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "11574:246:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1211,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "11613:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1212,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "11633:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11613:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11657:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1210,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11588:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11588:114:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1216,
															"nodeType": "ExpressionStatement",
															"src": "11588:114:4"
														},
														{
															"id": 1225,
															"nodeType": "UncheckedBlock",
															"src": "11716:94:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1218,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "11753:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1219,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1191,
																				"src": "11760:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1220,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1197,
																					"src": "11769:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1221,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "11788:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11769:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1217,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "11744:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11744:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1224,
																	"nodeType": "ExpressionStatement",
																	"src": "11744:51:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "11064:270:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11348:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11381:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "11373:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11404:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "11396:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11396:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11429:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "11421:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11421:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11363:78:4"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11459:0:4"
									},
									"scope": 1252,
									"src": "11339:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "12529:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "11832:573:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12419:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12457:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "12449:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12449:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12479:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "12471:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12499:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "12491:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12439:72:4"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12529:0:4"
									},
									"scope": 1252,
									"src": "12410:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "13237:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "12537:577:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13128:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13157:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13157:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13207:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "13199:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13199:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13147:72:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13237:0:4"
									},
									"scope": 1252,
									"src": "13119:120:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1253,
							"src": "1511:11730:4",
							"usedErrors": []
						}
					],
					"src": "105:13137:4"
				},
				"id": 4
			},
			"ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							1252
						],
						"ERC20Burnable": [
							1296
						],
						"IERC20": [
							1546
						],
						"IERC20Metadata": [
							1571
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1254,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:5"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 1253,
							"src": "149:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 1256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 22,
							"src": "171:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1258,
										"name": "Context",
										"nameLocations": [
											"440:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "440:7:5"
									},
									"id": 1259,
									"nodeType": "InheritanceSpecifier",
									"src": "440:7:5"
								},
								{
									"baseName": {
										"id": 1260,
										"name": "ERC20",
										"nameLocations": [
											"449:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1252,
										"src": "449:5:5"
									},
									"id": 1261,
									"nodeType": "InheritanceSpecifier",
									"src": "449:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "196:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1296,
							"linearizedBaseContracts": [
								1296,
								1252,
								1571,
								1546,
								21
							],
							"name": "ERC20Burnable",
							"nameLocation": "423:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "609:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1268,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "625:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "625:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "639:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "619:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "619:27:5"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "461:98:5",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "573:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "586:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "578:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:16:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:5"
									},
									"scope": 1296,
									"src": "564:89:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "1025:95:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "1051:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1060:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1060:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "1074:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1282,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "1035:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "1035:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1290,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "1097:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "1106:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "1091:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1091:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "1091:22:5"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "659:295:5",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "968:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "985:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "977:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1002:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "994:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:33:5"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:5"
									},
									"scope": 1296,
									"src": "959:161:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1297,
							"src": "405:717:5",
							"usedErrors": []
						}
					],
					"src": "124:999:5"
				},
				"id": 5
			},
			"ERC20Permit.sol": {
				"ast": {
					"absolutePath": "ERC20Permit.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Counters": [
							95
						],
						"ECDSA": [
							461
						],
						"EIP712": [
							665
						],
						"ERC20": [
							1252
						],
						"ERC20Permit": [
							1468
						],
						"IERC20": [
							1546
						],
						"IERC20Metadata": [
							1571
						],
						"IERC20Permit": [
							1607
						],
						"IERC5267": [
							1632
						],
						"Math": [
							2498
						],
						"ShortString": [
							2616
						],
						"ShortStrings": [
							2827
						],
						"SignedMath": [
							2932
						],
						"StorageSlot": [
							3042
						],
						"Strings": [
							3271
						]
					},
					"id": 1469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "122:23:6"
						},
						{
							"absolutePath": "IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1469,
							"sourceUnit": 1608,
							"src": "147:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1469,
							"sourceUnit": 1253,
							"src": "176:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1469,
							"sourceUnit": 462,
							"src": "198:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "EIP712.sol",
							"file": "./EIP712.sol",
							"id": 1302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1469,
							"sourceUnit": 666,
							"src": "220:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Counters.sol",
							"file": "./Counters.sol",
							"id": 1303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1469,
							"sourceUnit": 96,
							"src": "243:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1305,
										"name": "ERC20",
										"nameLocations": [
											"820:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1252,
										"src": "820:5:6"
									},
									"id": 1306,
									"nodeType": "InheritanceSpecifier",
									"src": "820:5:6"
								},
								{
									"baseName": {
										"id": 1307,
										"name": "IERC20Permit",
										"nameLocations": [
											"827:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1607,
										"src": "827:12:6"
									},
									"id": 1308,
									"nodeType": "InheritanceSpecifier",
									"src": "827:12:6"
								},
								{
									"baseName": {
										"id": 1309,
										"name": "EIP712",
										"nameLocations": [
											"841:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "841:6:6"
									},
									"id": 1310,
									"nodeType": "InheritanceSpecifier",
									"src": "841:6:6"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1304,
								"nodeType": "StructuredDocumentation",
								"src": "269:517:6",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 1468,
							"linearizedBaseContracts": [
								1468,
								665,
								1632,
								1607,
								1252,
								1571,
								1546,
								21
							],
							"name": "ERC20Permit",
							"nameLocation": "805:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1314,
									"libraryName": {
										"id": 1311,
										"name": "Counters",
										"nameLocations": [
											"860:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 95,
										"src": "860:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "854:36:6",
									"typeName": {
										"id": 1313,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1312,
											"name": "Counters.Counter",
											"nameLocations": [
												"873:8:6",
												"882:7:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 27,
											"src": "873:16:6"
										},
										"referencedDeclaration": 27,
										"src": "873:16:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1319,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "941:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1468,
									"src": "896:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$27_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1318,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1315,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "904:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "896:36:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$27_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1317,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1316,
												"name": "Counters.Counter",
												"nameLocations": [
													"915:8:6",
													"924:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 27,
												"src": "915:16:6"
											},
											"referencedDeclaration": 27,
											"src": "915:16:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1324,
									"mutability": "constant",
									"name": "_PERMIT_TYPEHASH",
									"nameLocation": "1032:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1468,
									"src": "1007:169:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1320,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1007:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 1322,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1082:84:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 1321,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1059:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1059:117:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "1182:254:6",
										"text": " @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"
									},
									"id": 1327,
									"mutability": "mutable",
									"name": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
									"nameLocation": "1509:32:6",
									"nodeType": "VariableDeclaration",
									"scope": 1468,
									"src": "1493:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1326,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "1823:2:6",
										"statements": []
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "1548:220:6",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 1338,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1333,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1330,
													"src": "1812:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1818:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 1335,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1332,
												"name": "EIP712",
												"nameLocations": [
													"1805:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 665,
												"src": "1805:6:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1805:17:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1799:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1785:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1785:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:20:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1823:0:6"
									},
									"scope": 1468,
									"src": "1773:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1592
									],
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "2084:560:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1358,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2102:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2108:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2102:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1360,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2121:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2102:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2131:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															},
															"value": "ERC20Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
																"typeString": "literal_string \"ERC20Permit: expired deadline\""
															}
														],
														"id": 1357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2094:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2094:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "2094:69:6"
											},
											{
												"assignments": [
													1366
												],
												"declarations": [
													{
														"constant": false,
														"id": 1366,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "2182:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "2174:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1365,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2174:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1370,
																	"name": "_PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "2246:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "2280:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "2303:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1373,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "2328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1375,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "2361:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1374,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "2351:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2351:16:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1377,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "2385:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1368,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2218:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2222:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2218:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2218:189:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1367,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2195:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2195:222:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2174:243:6"
											},
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2436:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "2428:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1381,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2428:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"id": 1384,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "2460:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1383,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2443:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2428:43:6"
											},
											{
												"assignments": [
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2490:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "2482:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1387,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2482:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"arguments": [
														{
															"id": 1391,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "2513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1392,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "2519:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1393,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2522:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1394,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "2525:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1389,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2499:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$461_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2505:7:6",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 396,
														"src": "2499:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2499:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2482:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1398,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "2545:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1399,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "2555:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2545:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2562:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															},
															"value": "ERC20Permit: invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
																"typeString": "literal_string \"ERC20Permit: invalid signature\""
															}
														],
														"id": 1397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2537:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "2537:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2615:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "2622:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "2631:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1404,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2606:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "2606:31:6"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "1831:50:6",
										"text": " @dev See {IERC20Permit-permit}."
									},
									"functionSelector": "d505accf",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1895:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2075:8:6"
									},
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1919:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1911:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1942:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1934:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1967:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1959:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1990:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1982:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2014:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1348,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2008:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2033:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2025:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2052:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2044:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:158:6"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:0:6"
									},
									"scope": 1468,
									"src": "1886:758:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1600
									],
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2797:48:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1420,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "2814:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$27_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1422,
															"indexExpression": {
																"id": 1421,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "2822:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2814:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$27_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2829:7:6",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "2814:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$27_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$27_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2814:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1425,
												"nodeType": "Return",
												"src": "2807:31:6"
											}
										]
									},
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "2650:50:6",
										"text": " @dev See {IERC20Permit-nonces}."
									},
									"functionSelector": "7ecebe00",
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2714:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1416,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2770:8:6"
									},
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:29:6"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2788:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:9:6"
									},
									"scope": 1468,
									"src": "2705:140:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1606
									],
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "3038:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1434,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3055:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3055:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1436,
												"nodeType": "Return",
												"src": "3048:27:6"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2851:60:6",
										"text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
									},
									"functionSelector": "3644e515",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2978:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1430,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3011:8:6"
									},
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2994:2:6"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3029:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:9:6"
									},
									"scope": 1468,
									"src": "2969:113:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "3304:126:6",
										"statements": [
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3339:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "3314:30:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
															"typeString": "struct Counters.Counter"
														},
														"typeName": {
															"id": 1449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1448,
																"name": "Counters.Counter",
																"nameLocations": [
																	"3314:8:6",
																	"3323:7:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 27,
																"src": "3314:16:6"
															},
															"referencedDeclaration": 27,
															"src": "3314:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
																"typeString": "struct Counters.Counter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1454,
												"initialValue": {
													"baseExpression": {
														"id": 1451,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "3347:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$27_storage_$",
															"typeString": "mapping(address => struct Counters.Counter storage ref)"
														}
													},
													"id": 1453,
													"indexExpression": {
														"id": 1452,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3355:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3347:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$27_storage",
														"typeString": "struct Counters.Counter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3314:47:6"
											},
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1455,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "3371:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1456,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3381:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
																	"typeString": "struct Counters.Counter storage pointer"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3387:7:6",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 39,
															"src": "3381:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$27_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$27_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3381:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3371:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3371:25:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1461,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3406:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$27_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3412:9:6",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "3406:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$27_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$27_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "3406:17:6"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "3088:120:6",
										"text": " @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "3222:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3249:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3241:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:29:6"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "3295:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3287:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3286:17:6"
									},
									"scope": 1468,
									"src": "3213:217:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1469,
							"src": "787:2645:6",
							"usedErrors": [
								2624,
								2626
							]
						}
					],
					"src": "122:3311:6"
				},
				"id": 6
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1546
						]
					},
					"id": 1547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:7",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1546,
							"linearizedBaseContracts": [
								1546
							],
							"name": "IERC20",
							"nameLocation": "212:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1480,
									"name": "Transfer",
									"nameLocation": "394:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "403:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "425:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "445:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:7"
									},
									"src": "388:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1489,
									"name": "Approval",
									"nameLocation": "625:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "634:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "657:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "682:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:7"
									},
									"src": "619:78:7"
								},
								{
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:7"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "820:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:7"
									},
									"scope": 1546,
									"src": "774:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:7",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 1546,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:7",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1211:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1223:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:7"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1257:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:7"
									},
									"scope": 1546,
									"src": "1193:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1557:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1572:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:7"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1612:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:7"
									},
									"scope": 1546,
									"src": "1538:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:7",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2291:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2308:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:7"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "2342:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:7"
									},
									"scope": 1546,
									"src": "2274:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:7",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2668:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2682:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2694:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:7"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2728:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:7"
									},
									"scope": 1546,
									"src": "2646:88:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1547,
							"src": "202:2534:7",
							"usedErrors": []
						}
					],
					"src": "106:2631:7"
				},
				"id": 7
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1546
						],
						"IERC20Metadata": [
							1571
						]
					},
					"id": 1572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:8"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1572,
							"sourceUnit": 1547,
							"src": "135:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1551,
										"name": "IERC20",
										"nameLocations": [
											"304:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1546,
										"src": "304:6:8"
									},
									"id": 1552,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1550,
								"nodeType": "StructuredDocumentation",
								"src": "159:116:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1571,
							"linearizedBaseContracts": [
								1571,
								1546
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:8"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "415:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:8"
									},
									"scope": 1571,
									"src": "376:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:8"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "538:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:8"
									},
									"scope": 1571,
									"src": "497:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:8"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "672:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1567,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:8"
									},
									"scope": 1571,
									"src": "629:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1572,
							"src": "276:405:8",
							"usedErrors": []
						}
					],
					"src": "110:572:8"
				},
				"id": 8
			},
			"IERC20Permit.sol": {
				"ast": {
					"absolutePath": "IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1607
						]
					},
					"id": 1608,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:9",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1607,
							"linearizedBaseContracts": [
								1607
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:9",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1480:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1503:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1528:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1551:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1577:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1584,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1594:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "1613:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:9"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:9"
									},
									"scope": 1607,
									"src": "1455:183:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:9",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1959:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:9"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "1997:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:9"
									},
									"scope": 1607,
									"src": "1943:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:9",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:9"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "2249:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:9"
									},
									"scope": 1607,
									"src": "2198:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1608,
							"src": "629:1631:9",
							"usedErrors": []
						}
					],
					"src": "123:2138:9"
				},
				"id": 9
			},
			"IERC5267.sol": {
				"ast": {
					"absolutePath": "IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							1632
						]
					},
					"id": 1633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1609,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1632,
							"linearizedBaseContracts": [
								1632
							],
							"name": "IERC5267",
							"nameLocation": "142:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "157:84:10",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 1612,
									"name": "EIP712DomainChanged",
									"nameLocation": "252:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:10"
									},
									"src": "246:28:10"
								},
								{
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "280:140:10",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 1631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "434:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "516:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "509:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "509:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "550:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "536:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "582:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "568:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "611:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "603:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "640:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "632:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "679:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "671:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "714:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "697:27:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1627,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "697:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1628,
													"nodeType": "ArrayTypeName",
													"src": "697:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:239:10"
									},
									"scope": 1632,
									"src": "425:310:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1633,
							"src": "132:605:10",
							"usedErrors": []
						}
					],
					"src": "107:631:10"
				},
				"id": 10
			},
			"Math.sol": {
				"ast": {
					"absolutePath": "Math.sol",
					"exportedSymbols": {
						"Math": [
							2498
						]
					},
					"id": 2499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1635,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2498,
							"linearizedBaseContracts": [
								2498
							],
							"name": "Math",
							"nameLocation": "210:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1639,
									"members": [
										{
											"id": 1636,
											"name": "Down",
											"nameLocation": "245:4:11",
											"nodeType": "EnumValue",
											"src": "245:4:11"
										},
										{
											"id": 1637,
											"name": "Up",
											"nameLocation": "287:2:11",
											"nodeType": "EnumValue",
											"src": "287:2:11"
										},
										{
											"id": 1638,
											"name": "Zero",
											"nameLocation": "318:4:11",
											"nodeType": "EnumValue",
											"src": "318:4:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:11",
									"nodeType": "EnumDefinition",
									"src": "221:122:11"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "480:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1649,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "497:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1650,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "501:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1653,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "509:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:11",
													"trueExpression": {
														"id": 1652,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "505:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1655,
												"nodeType": "Return",
												"src": "490:20:11"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "426:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "437:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:11"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "471:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:11"
									},
									"scope": 2498,
									"src": "413:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "655:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1667,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "672:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1668,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "676:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "684:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:11",
													"trueExpression": {
														"id": 1670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "680:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1666,
												"id": 1673,
												"nodeType": "Return",
												"src": "665:20:11"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "646:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:11"
									},
									"scope": 2498,
									"src": "588:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "876:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1685,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1686,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "935:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1688,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1689,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "941:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1690,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1692,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1696,
												"nodeType": "Return",
												"src": "923:28:11"
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "822:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "833:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:11"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "867:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:11"
									},
									"scope": 2498,
									"src": "805:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "1228:123:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "1316:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1712,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1701,
																			"src": "1330:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1715,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1716,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1339:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1721,
												"nodeType": "Return",
												"src": "1309:35:11"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1174:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1185:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:11"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1219:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:11"
									},
									"scope": 2498,
									"src": "1157:194:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "1765:4115:11",
										"statements": [
											{
												"id": 1844,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:11",
												"statements": [
													{
														"assignments": [
															1736
														],
														"declarations": [
															{
																"constant": false,
																"id": 1736,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 1844,
																"src": "2096:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1735,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1737,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:11"
													},
													{
														"assignments": [
															1739
														],
														"declarations": [
															{
																"constant": false,
																"id": 1739,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 1844,
																"src": "2168:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1740,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1739,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1728,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1728,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:11",
																"valueSize": 1
															}
														],
														"id": 1741,
														"nodeType": "InlineAssembly",
														"src": "2239:166:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1742,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "2486:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1750,
														"nodeType": "IfStatement",
														"src": "2482:368:11",
														"trueBody": {
															"id": 1749,
															"nodeType": "Block",
															"src": "2498:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1745,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1736,
																			"src": "2816:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1746,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "2824:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1734,
																	"id": 1748,
																	"nodeType": "Return",
																	"src": "2809:26:11"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1752,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "2960:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1753,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "2974:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1751,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1757,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:11"
													},
													{
														"assignments": [
															1759
														],
														"declarations": [
															{
																"constant": false,
																"id": 1759,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 1844,
																"src": "3261:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1758,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1760,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:11"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:11"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1739,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1739,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1759,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1759,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1759,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1728,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:11",
																"valueSize": 1
															}
														],
														"id": 1761,
														"nodeType": "InlineAssembly",
														"src": "3292:300:11"
													},
													{
														"assignments": [
															1763
														],
														"declarations": [
															{
																"constant": false,
																"id": 1763,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 1844,
																"src": "3899:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1771,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1764,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "3914:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:11",
																			"subExpression": {
																				"id": 1765,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1730,
																				"src": "3930:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1769,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:11"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1730,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1736,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1763,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:11",
																"valueSize": 1
															}
														],
														"id": 1772,
														"nodeType": "InlineAssembly",
														"src": "3960:371:11"
													},
													{
														"expression": {
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1773,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "4397:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1774,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "4406:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1775,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "4414:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1778,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:11"
													},
													{
														"assignments": [
															1780
														],
														"declarations": [
															{
																"constant": false,
																"id": 1780,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 1844,
																"src": "4736:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1779,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1787,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1782,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "4759:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1784,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:11"
													},
													{
														"expression": {
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1788,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "4992:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1790,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5007:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1791,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5021:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1795,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:11"
													},
													{
														"expression": {
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1796,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "5061:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1798,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5076:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1799,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5090:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1803,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:11"
													},
													{
														"expression": {
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1804,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "5131:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1806,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5146:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1807,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5160:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1811,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:11"
													},
													{
														"expression": {
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1812,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "5201:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1814,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5216:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1815,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5230:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:11"
													},
													{
														"expression": {
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1820,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "5271:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1822,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5286:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1823,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5300:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1827,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:11"
													},
													{
														"expression": {
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1828,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "5342:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1830,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "5357:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1831,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "5371:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1835,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:11"
													},
													{
														"expression": {
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1836,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "5812:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1837,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "5821:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1838,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "5829:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1841,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:11"
													},
													{
														"expression": {
															"id": 1842,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "5857:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1734,
														"id": 1843,
														"nodeType": "Return",
														"src": "5850:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1683:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1694:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1705:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:11"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1749:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:11"
									},
									"scope": 2498,
									"src": "1667:4213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "6122:189:11",
										"statements": [
											{
												"assignments": [
													1862
												],
												"declarations": [
													{
														"constant": false,
														"id": 1862,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "6132:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"arguments": [
														{
															"id": 1864,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "6156:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1865,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "6159:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1866,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "6162:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1863,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1846,
															1890
														],
														"referencedDeclaration": 1846,
														"src": "6149:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1639",
															"typeString": "enum Math.Rounding"
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1869,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "6188:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1639",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1870,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "6200:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1639_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:11",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1637,
															"src": "6200:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1639",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1874,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "6222:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1875,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "6225:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1876,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "6228:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1873,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1886,
												"nodeType": "IfStatement",
												"src": "6184:98:11",
												"trueBody": {
													"id": 1885,
													"nodeType": "Block",
													"src": "6246:36:11",
													"statements": [
														{
															"expression": {
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1881,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "6260:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1884,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1887,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1862,
													"src": "6298:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1860,
												"id": 1888,
												"nodeType": "Return",
												"src": "6291:13:11"
											}
										]
									},
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "6028:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "6039:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "6050:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "6071:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1639",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1854,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "6071:8:11"
													},
													"referencedDeclaration": 1639,
													"src": "6071:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1639",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:11"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "6113:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:11"
									},
									"scope": 2498,
									"src": "6012:299:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "6587:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1898,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "6601:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1904,
												"nodeType": "IfStatement",
												"src": "6597:45:11",
												"trueBody": {
													"id": 1903,
													"nodeType": "Block",
													"src": "6609:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1897,
															"id": 1902,
															"nodeType": "Return",
															"src": "6623:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1906
												],
												"declarations": [
													{
														"constant": false,
														"id": 1906,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2001,
														"src": "7321:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1915,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1909,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1893,
																			"src": "7349:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1908,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2170,
																			2206
																		],
																		"referencedDeclaration": 2170,
																		"src": "7344:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1913,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:11"
											},
											{
												"id": 2000,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:11",
												"statements": [
													{
														"expression": {
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1916,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "7782:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1917,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "7792:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1918,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "7801:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1919,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "7805:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1922,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1926,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:11"
													},
													{
														"expression": {
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1927,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "7831:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1928,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "7841:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1929,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "7850:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1930,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "7854:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1933,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1937,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:11"
													},
													{
														"expression": {
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1938,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "7880:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1939,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "7890:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1940,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "7899:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1941,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "7903:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1944,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1948,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:11"
													},
													{
														"expression": {
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1949,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "7929:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1950,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "7939:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1951,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "7948:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1952,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "7952:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1955,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1959,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:11"
													},
													{
														"expression": {
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1960,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "7978:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1961,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "7988:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1962,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "7997:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1963,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "8001:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1966,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1970,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:11"
													},
													{
														"expression": {
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1971,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "8027:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1972,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "8037:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1973,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "8046:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1974,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "8050:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1977,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1981,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:11"
													},
													{
														"expression": {
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1982,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "8076:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1983,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1906,
																				"src": "8086:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1984,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "8095:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1985,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1906,
																					"src": "8099:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1988,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1992,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1994,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1906,
																	"src": "8136:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1995,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "8144:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1996,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1906,
																		"src": "8148:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1993,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "8132:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1999,
														"nodeType": "Return",
														"src": "8125:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "6544:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:11"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "6578:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:11"
									},
									"scope": 2498,
									"src": "6530:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "8348:161:11",
										"statements": [
											{
												"id": 2036,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:11",
												"statements": [
													{
														"assignments": [
															2014
														],
														"declarations": [
															{
																"constant": false,
																"id": 2014,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2036,
																"src": "8382:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2013,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2018,
														"initialValue": {
															"arguments": [
																{
																	"id": 2016,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "8404:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2015,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2002,
																	2038
																],
																"referencedDeclaration": 2002,
																"src": "8399:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2019,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "8427:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1639",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2020,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2008,
																					"src": "8437:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2021,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1639,
																						"src": "8449:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1639_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1637,
																					"src": "8449:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2024,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2014,
																						"src": "8464:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2025,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2014,
																						"src": "8473:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2027,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2005,
																					"src": "8482:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2012,
														"id": 2035,
														"nodeType": "Return",
														"src": "8420:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "8286:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "8297:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1639",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "8297:8:11"
													},
													"referencedDeclaration": 1639,
													"src": "8297:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1639",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:11"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "8339:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:11"
									},
									"scope": 2498,
									"src": "8272:237:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "8694:922:11",
										"statements": [
											{
												"assignments": [
													2047
												],
												"declarations": [
													{
														"constant": false,
														"id": 2047,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2169,
														"src": "8704:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2046,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"initialValue": {
													"hexValue": "30",
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:11"
											},
											{
												"id": 2166,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2050,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "8760:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2064,
														"nodeType": "IfStatement",
														"src": "8756:99:11",
														"trueBody": {
															"id": 2063,
															"nodeType": "Block",
															"src": "8778:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2055,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "8796:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2058,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:11"
																},
																{
																	"expression": {
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2059,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "8827:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2062,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2065,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "8872:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2079,
														"nodeType": "IfStatement",
														"src": "8868:96:11",
														"trueBody": {
															"id": 2078,
															"nodeType": "Block",
															"src": "8889:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2070,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "8907:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2073,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:11"
																},
																{
																	"expression": {
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2074,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "8937:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2077,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2080,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "8981:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2094,
														"nodeType": "IfStatement",
														"src": "8977:96:11",
														"trueBody": {
															"id": 2093,
															"nodeType": "Block",
															"src": "8998:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2085,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "9016:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2088,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:11"
																},
																{
																	"expression": {
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2089,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "9046:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2092,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2095,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "9090:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2109,
														"nodeType": "IfStatement",
														"src": "9086:96:11",
														"trueBody": {
															"id": 2108,
															"nodeType": "Block",
															"src": "9107:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2100,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "9125:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2103,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:11"
																},
																{
																	"expression": {
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2104,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "9155:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2107,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "9199:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2124,
														"nodeType": "IfStatement",
														"src": "9195:93:11",
														"trueBody": {
															"id": 2123,
															"nodeType": "Block",
															"src": "9215:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2115,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "9233:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2118,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:11"
																},
																{
																	"expression": {
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2119,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "9262:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2122,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2125,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "9305:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2139,
														"nodeType": "IfStatement",
														"src": "9301:93:11",
														"trueBody": {
															"id": 2138,
															"nodeType": "Block",
															"src": "9321:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2130,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "9339:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2133,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:11"
																},
																{
																	"expression": {
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2134,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "9368:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2137,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "9411:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2154,
														"nodeType": "IfStatement",
														"src": "9407:93:11",
														"trueBody": {
															"id": 2153,
															"nodeType": "Block",
															"src": "9427:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2145,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "9445:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2148,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:11"
																},
																{
																	"expression": {
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "9474:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2152,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "9517:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2165,
														"nodeType": "IfStatement",
														"src": "9513:64:11",
														"trueBody": {
															"id": 2164,
															"nodeType": "Block",
															"src": "9533:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2160,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "9551:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2163,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2167,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2047,
													"src": "9603:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2168,
												"nodeType": "Return",
												"src": "9596:13:11"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:11",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "8647:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:11"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "8685:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:11"
									},
									"scope": 2498,
									"src": "8633:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "9849:165:11",
										"statements": [
											{
												"id": 2204,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:11",
												"statements": [
													{
														"assignments": [
															2182
														],
														"declarations": [
															{
																"constant": false,
																"id": 2182,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "9883:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2186,
														"initialValue": {
															"arguments": [
																{
																	"id": 2184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "9905:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2183,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2206
																],
																"referencedDeclaration": 2170,
																"src": "9900:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2187,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "9932:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1639",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2188,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2176,
																					"src": "9942:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2189,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1639,
																						"src": "9954:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1639_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1637,
																					"src": "9954:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2193,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2182,
																						"src": "9974:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2195,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2173,
																					"src": "9983:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2180,
														"id": 2203,
														"nodeType": "Return",
														"src": "9925:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "9783:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "9798:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1639",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2175,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2174,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "9798:8:11"
													},
													"referencedDeclaration": 1639,
													"src": "9798:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1639",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:11"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "9840:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:11"
									},
									"scope": 2498,
									"src": "9769:245:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "10201:854:11",
										"statements": [
											{
												"assignments": [
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2334,
														"src": "10211:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"hexValue": "30",
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:11"
											},
											{
												"id": 2331,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2218,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10267:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2234,
														"nodeType": "IfStatement",
														"src": "10263:103:11",
														"trueBody": {
															"id": 2233,
															"nodeType": "Block",
															"src": "10286:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "10304:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2228,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:11"
																},
																{
																	"expression": {
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10339:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2232,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10383:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2251,
														"nodeType": "IfStatement",
														"src": "10379:103:11",
														"trueBody": {
															"id": 2250,
															"nodeType": "Block",
															"src": "10402:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2240,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "10420:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:11"
																},
																{
																	"expression": {
																		"id": 2248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2246,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10455:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2249,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2252,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10499:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2268,
														"nodeType": "IfStatement",
														"src": "10495:103:11",
														"trueBody": {
															"id": 2267,
															"nodeType": "Block",
															"src": "10518:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "10536:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2262,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:11"
																},
																{
																	"expression": {
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2263,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10571:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2266,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2269,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10615:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2285,
														"nodeType": "IfStatement",
														"src": "10611:100:11",
														"trueBody": {
															"id": 2284,
															"nodeType": "Block",
															"src": "10633:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2274,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "10651:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2279,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:11"
																},
																{
																	"expression": {
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2280,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10685:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2283,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2286,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10728:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2302,
														"nodeType": "IfStatement",
														"src": "10724:100:11",
														"trueBody": {
															"id": 2301,
															"nodeType": "Block",
															"src": "10746:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "10764:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2296,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:11"
																},
																{
																	"expression": {
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2297,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10798:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2300,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2303,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10841:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2319,
														"nodeType": "IfStatement",
														"src": "10837:100:11",
														"trueBody": {
															"id": 2318,
															"nodeType": "Block",
															"src": "10859:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2308,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "10877:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2313,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:11"
																},
																{
																	"expression": {
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2314,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10911:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2317,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "10954:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2330,
														"nodeType": "IfStatement",
														"src": "10950:66:11",
														"trueBody": {
															"id": 2329,
															"nodeType": "Block",
															"src": "10972:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2325,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "10990:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2328,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2332,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2215,
													"src": "11042:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2333,
												"nodeType": "Return",
												"src": "11035:13:11"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:11",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "10154:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:11"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "10192:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:11"
									},
									"scope": 2498,
									"src": "10139:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "11290:167:11",
										"statements": [
											{
												"id": 2369,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:11",
												"statements": [
													{
														"assignments": [
															2347
														],
														"declarations": [
															{
																"constant": false,
																"id": 2347,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2369,
																"src": "11324:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2346,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2351,
														"initialValue": {
															"arguments": [
																{
																	"id": 2349,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "11347:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2348,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2335,
																	2371
																],
																"referencedDeclaration": 2335,
																"src": "11341:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2352,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "11374:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1639",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2353,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2341,
																					"src": "11384:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2354,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1639,
																						"src": "11396:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1639_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1637,
																					"src": "11396:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2358,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2347,
																						"src": "11417:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2360,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2338,
																					"src": "11426:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2366,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2345,
														"id": 2368,
														"nodeType": "Return",
														"src": "11367:73:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "11224:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "11239:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1639",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2339,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "11239:8:11"
													},
													"referencedDeclaration": 1639,
													"src": "11239:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1639",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:11"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "11281:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:11"
									},
									"scope": 2498,
									"src": "11209:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "11771:600:11",
										"statements": [
											{
												"assignments": [
													2380
												],
												"declarations": [
													{
														"constant": false,
														"id": 2380,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2457,
														"src": "11781:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2382,
												"initialValue": {
													"hexValue": "30",
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:11"
											},
											{
												"id": 2454,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2383,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "11837:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2397,
														"nodeType": "IfStatement",
														"src": "11833:98:11",
														"trueBody": {
															"id": 2396,
															"nodeType": "Block",
															"src": "11855:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2388,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11873:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2391,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:11"
																},
																{
																	"expression": {
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2392,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "11904:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2395,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "11948:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2412,
														"nodeType": "IfStatement",
														"src": "11944:95:11",
														"trueBody": {
															"id": 2411,
															"nodeType": "Block",
															"src": "11965:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2403,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11983:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2406,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:11"
																},
																{
																	"expression": {
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2407,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "12013:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2410,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2413,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "12056:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2427,
														"nodeType": "IfStatement",
														"src": "12052:95:11",
														"trueBody": {
															"id": 2426,
															"nodeType": "Block",
															"src": "12073:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2418,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12091:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2421,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:11"
																},
																{
																	"expression": {
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2422,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "12121:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2425,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2428,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "12164:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2442,
														"nodeType": "IfStatement",
														"src": "12160:95:11",
														"trueBody": {
															"id": 2441,
															"nodeType": "Block",
															"src": "12181:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2433,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "12199:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2436,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:11"
																},
																{
																	"expression": {
																		"id": 2439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2437,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "12229:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2440,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "12272:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "12268:64:11",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "12288:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "12306:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2455,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2380,
													"src": "12358:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2378,
												"id": 2456,
												"nodeType": "Return",
												"src": "12351:13:11"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:11",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11724:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:11"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "11762:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:11"
									},
									"scope": 2498,
									"src": "11708:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "12608:174:11",
										"statements": [
											{
												"id": 2495,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:11",
												"statements": [
													{
														"assignments": [
															2470
														],
														"declarations": [
															{
																"constant": false,
																"id": 2470,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2495,
																"src": "12642:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2469,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2474,
														"initialValue": {
															"arguments": [
																{
																	"id": 2472,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2461,
																	"src": "12666:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2471,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2458,
																	2497
																],
																"referencedDeclaration": 2458,
																"src": "12659:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2475,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "12693:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1639",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2476,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2464,
																					"src": "12703:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2477,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1639,
																						"src": "12715:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1639_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2478,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1637,
																					"src": "12715:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1639",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2485,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2480,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2483,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2481,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2470,
																									"src": "12736:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2482,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2484,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2486,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2461,
																					"src": "12751:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2492,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2468,
														"id": 2494,
														"nodeType": "Return",
														"src": "12686:79:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "12542:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "12557:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1639",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2463,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2462,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1639,
														"src": "12557:8:11"
													},
													"referencedDeclaration": 1639,
													"src": "12557:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1639",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:11"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "12599:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:11"
									},
									"scope": 2498,
									"src": "12526:256:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2499,
							"src": "202:12582:11",
							"usedErrors": []
						}
					],
					"src": "103:12682:11"
				},
				"id": 11
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							2611
						]
					},
					"id": 2612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:12"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 2501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 22,
							"src": "127:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2503,
										"name": "Context",
										"nameLocations": [
											"676:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "676:7:12"
									},
									"id": 2504,
									"nodeType": "InheritanceSpecifier",
									"src": "676:7:12"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2502,
								"nodeType": "StructuredDocumentation",
								"src": "152:494:12",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2611,
							"linearizedBaseContracts": [
								2611,
								21
							],
							"name": "Ownable",
							"nameLocation": "665:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2506,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "706:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2611,
									"src": "690:22:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2505,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2512,
									"name": "OwnershipTransferred",
									"nameLocation": "725:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "771:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "755:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "810:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "794:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:79:12"
									},
									"src": "719:106:12"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "941:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2517,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "970:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "970:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2516,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2610,
														"src": "951:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "951:32:12"
											}
										]
									},
									"documentation": {
										"id": 2513,
										"nodeType": "StructuredDocumentation",
										"src": "831:91:12",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2522,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:2:12"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:0:12"
									},
									"scope": 2611,
									"src": "927:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2529,
										"nodeType": "Block",
										"src": "1099:41:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2525,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2553,
														"src": "1109:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2527,
												"nodeType": "ExpressionStatement",
												"src": "1109:13:12"
											},
											{
												"id": 2528,
												"nodeType": "PlaceholderStatement",
												"src": "1132:1:12"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "996:77:12",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2530,
									"name": "onlyOwner",
									"nameLocation": "1087:9:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:2:12"
									},
									"src": "1078:62:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "1271:30:12",
										"statements": [
											{
												"expression": {
													"id": 2536,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "1288:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2535,
												"id": 2537,
												"nodeType": "Return",
												"src": "1281:13:12"
											}
										]
									},
									"documentation": {
										"id": 2531,
										"nodeType": "StructuredDocumentation",
										"src": "1146:65:12",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1225:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:2:12"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "1262:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:9:12"
									},
									"scope": 2611,
									"src": "1216:85:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2552,
										"nodeType": "Block",
										"src": "1419:85:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2544,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "1437:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1437:7:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2546,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1448:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1448:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1437:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1429:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1429:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2551,
												"nodeType": "ExpressionStatement",
												"src": "1429:68:12"
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "1307:62:12",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1383:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:2:12"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:0:12"
									},
									"scope": 2611,
									"src": "1374:130:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "1893:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1930:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1922:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1922:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2559,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2610,
														"src": "1903:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2565,
												"nodeType": "ExpressionStatement",
												"src": "1903:30:12"
											}
										]
									},
									"documentation": {
										"id": 2554,
										"nodeType": "StructuredDocumentation",
										"src": "1510:324:12",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2556,
												"name": "onlyOwner",
												"nameLocations": [
													"1883:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2530,
												"src": "1883:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1883:9:12"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1848:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:12"
									},
									"returnParameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:0:12"
									},
									"scope": 2611,
									"src": "1839:101:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "2159:162:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2576,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "2190:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2210:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2202:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2577,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2202:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2202:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2190:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2169:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2169:107:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2584,
												"nodeType": "ExpressionStatement",
												"src": "2169:107:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2586,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2570,
															"src": "2305:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2585,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2610,
														"src": "2286:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "ExpressionStatement",
												"src": "2286:28:12"
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "1946:138:12",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2572,
												"name": "onlyOwner",
												"nameLocations": [
													"2149:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2530,
												"src": "2149:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2149:9:12"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2098:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2124:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "2116:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:18:12"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2159:0:12"
									},
									"scope": 2611,
									"src": "2089:232:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "2538:124:12",
										"statements": [
											{
												"assignments": [
													2597
												],
												"declarations": [
													{
														"constant": false,
														"id": 2597,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2556:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2609,
														"src": "2548:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2596,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2548:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2599,
												"initialValue": {
													"id": 2598,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "2567:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2548:25:12"
											},
											{
												"expression": {
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2600,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2506,
														"src": "2583:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2601,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2593,
														"src": "2592:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2583:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2603,
												"nodeType": "ExpressionStatement",
												"src": "2583:17:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2605,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2597,
															"src": "2636:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2606,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "2646:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2604,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "2615:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2615:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2608,
												"nodeType": "EmitStatement",
												"src": "2610:45:12"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "2327:143:12",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2484:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2511:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "2503:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2503:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2502:18:12"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2538:0:12"
									},
									"scope": 2611,
									"src": "2475:187:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2612,
							"src": "647:2017:12",
							"usedErrors": []
						}
					],
					"src": "102:2563:12"
				},
				"id": 12
			},
			"ShortStrings.sol": {
				"ast": {
					"absolutePath": "ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							2616
						],
						"ShortStrings": [
							2827
						],
						"StorageSlot": [
							3042
						]
					},
					"id": 2828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:13"
						},
						{
							"absolutePath": "StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 2614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2828,
							"sourceUnit": 3043,
							"src": "131:27:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 2616,
							"name": "ShortString",
							"nameLocation": "333:11:13",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "328:28:13",
							"underlyingType": {
								"id": 2615,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "348:7:13",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2617,
								"nodeType": "StructuredDocumentation",
								"src": "358:876:13",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2827,
							"linearizedBaseContracts": [
								2827
							],
							"name": "ShortStrings",
							"nameLocation": "1243:12:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2620,
									"mutability": "constant",
									"name": "_FALLBACK_SENTINEL",
									"nameLocation": "1350:18:13",
									"nodeType": "VariableDeclaration",
									"scope": 2827,
									"src": "1325:112:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2618,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1325:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 2619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1371:66:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 2624,
									"name": "StringTooLong",
									"nameLocation": "1450:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1471:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "1464:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1464:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:12:13"
									},
									"src": "1444:32:13"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 2626,
									"name": "InvalidShortString",
									"nameLocation": "1487:18:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:2:13"
									},
									"src": "1481:27:13"
								},
								{
									"body": {
										"id": 2669,
										"nodeType": "Block",
										"src": "1767:208:13",
										"statements": [
											{
												"assignments": [
													2636
												],
												"declarations": [
													{
														"constant": false,
														"id": 2636,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1790:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2669,
														"src": "1777:17:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2635,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1777:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"arguments": [
														{
															"id": 2639,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "1803:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1797:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2637,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1797:5:13",
															"typeDescriptions": {}
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1777:30:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2642,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2636,
															"src": "1821:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1826:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1821:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1835:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1821:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "IfStatement",
												"src": "1817:72:13",
												"trueBody": {
													"id": 2650,
													"nodeType": "Block",
													"src": "1839:50:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2647,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2629,
																		"src": "1874:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2646,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2624,
																	"src": "1860:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:18:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2649,
															"nodeType": "RevertStatement",
															"src": "1853:25:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2660,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2636,
																						"src": "1946:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2659,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1938:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 2658,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1938:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1938:13:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1930:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2656,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1930:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1930:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 2663,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2636,
																			"src": "1955:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1960:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1955:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1930:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1922:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2654,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1922:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1922:45:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2652,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "1905:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2616_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 2653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1917:4:13",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1905:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2616_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 2634,
												"id": 2668,
												"nodeType": "Return",
												"src": "1898:70:13"
											}
										]
									},
									"documentation": {
										"id": 2627,
										"nodeType": "StructuredDocumentation",
										"src": "1514:170:13",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 2670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1698:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1726:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1712:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1712:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:19:13"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1754:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2631,
														"name": "ShortString",
														"nameLocations": [
															"1754:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2616,
														"src": "1754:11:13"
													},
													"referencedDeclaration": 2616,
													"src": "1754:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:13:13"
									},
									"scope": 2827,
									"src": "1689:286:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "2133:331:13",
										"statements": [
											{
												"assignments": [
													2680
												],
												"declarations": [
													{
														"constant": false,
														"id": 2680,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2151:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 2695,
														"src": "2143:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2143:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2684,
												"initialValue": {
													"arguments": [
														{
															"id": 2682,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "2168:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																"typeString": "ShortString"
															}
														],
														"id": 2681,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2728,
														"src": "2157:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2616_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2143:30:13"
											},
											{
												"assignments": [
													2686
												],
												"declarations": [
													{
														"constant": false,
														"id": 2686,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2275:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 2695,
														"src": "2261:17:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2685,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2261:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2691,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2281:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 2687,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2285:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2281:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2261:34:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2357:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "2378:3:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2383:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:16:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2371:16:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "2411:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2416:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2407:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2407:14:13"
																	},
																	{
																		"name": "sstr",
																		"nodeType": "YulIdentifier",
																		"src": "2423:4:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2400:28:13"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2680,
														"isOffset": false,
														"isSlot": false,
														"src": "2383:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2674,
														"isOffset": false,
														"isSlot": false,
														"src": "2423:4:13",
														"valueSize": 1
													},
													{
														"declaration": 2686,
														"isOffset": false,
														"isSlot": false,
														"src": "2378:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2686,
														"isOffset": false,
														"isSlot": false,
														"src": "2411:3:13",
														"valueSize": 1
													}
												],
												"id": 2692,
												"nodeType": "InlineAssembly",
												"src": "2348:90:13"
											},
											{
												"expression": {
													"id": 2693,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2686,
													"src": "2454:3:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2678,
												"id": 2694,
												"nodeType": "Return",
												"src": "2447:10:13"
											}
										]
									},
									"documentation": {
										"id": 2671,
										"nodeType": "StructuredDocumentation",
										"src": "1981:73:13",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2068:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2089:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "2077:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2673,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2672,
														"name": "ShortString",
														"nameLocations": [
															"2077:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2616,
														"src": "2077:11:13"
													},
													"referencedDeclaration": 2616,
													"src": "2077:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:18:13"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "2118:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2118:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:15:13"
									},
									"scope": 2827,
									"src": "2059:405:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "2606:175:13",
										"statements": [
											{
												"assignments": [
													2706
												],
												"declarations": [
													{
														"constant": false,
														"id": 2706,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2624:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "2616:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2616:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2716,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2711,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "2660:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 2709,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2616,
																		"src": "2641:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2616_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2653:6:13",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2641:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2616_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2641:24:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2633:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2707,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2633:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2633:33:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2669:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2633:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2616:57:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2717,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "2687:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2696:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2687:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2724,
												"nodeType": "IfStatement",
												"src": "2683:69:13",
												"trueBody": {
													"id": 2723,
													"nodeType": "Block",
													"src": "2700:52:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2720,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "2721:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2721:20:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2722,
															"nodeType": "RevertStatement",
															"src": "2714:27:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2725,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2706,
													"src": "2768:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2704,
												"id": 2726,
												"nodeType": "Return",
												"src": "2761:13:13"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "2470:61:13",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2545:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2568:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "2556:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2698,
														"name": "ShortString",
														"nameLocations": [
															"2556:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2616,
														"src": "2556:11:13"
													},
													"referencedDeclaration": 2616,
													"src": "2556:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:18:13"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "2597:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2596:9:13"
									},
									"scope": 2827,
									"src": "2536:245:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2767,
										"nodeType": "Block",
										"src": "3004:232:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "3024:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3018:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2739,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3018:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3018:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3031:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3018:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3040:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3018:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2765,
													"nodeType": "Block",
													"src": "3102:128:13",
													"statements": [
														{
															"expression": {
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2754,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2733,
																				"src": "3142:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 2751,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3042,
																				"src": "3116:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$3042_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3128:13:13",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3019,
																			"src": "3116:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2950_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3116:32:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$2950_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3149:5:13",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2949,
																	"src": "3116:38:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2757,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2731,
																	"src": "3157:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3116:46:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 2759,
															"nodeType": "ExpressionStatement",
															"src": "3116:46:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2762,
																		"name": "_FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2620,
																		"src": "3200:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 2760,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2616,
																		"src": "3183:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2616_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3195:4:13",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3183:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2616_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3183:36:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 2738,
															"id": 2764,
															"nodeType": "Return",
															"src": "3176:43:13"
														}
													]
												},
												"id": 2766,
												"nodeType": "IfStatement",
												"src": "3014:216:13",
												"trueBody": {
													"id": 2750,
													"nodeType": "Block",
													"src": "3044:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2747,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2731,
																		"src": "3079:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2746,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "3065:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2616_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3065:20:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 2738,
															"id": 2749,
															"nodeType": "Return",
															"src": "3058:27:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "2787:103:13",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 2768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2904:25:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2944:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "2930:19:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2930:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2966:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "2951:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2951:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:43:13"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "2991:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2736,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2735,
														"name": "ShortString",
														"nameLocations": [
															"2991:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2616,
														"src": "2991:11:13"
													},
													"referencedDeclaration": 2616,
													"src": "2991:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2990:13:13"
									},
									"scope": 2827,
									"src": "2895:341:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2794,
										"nodeType": "Block",
										"src": "3476:159:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "3509:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 2779,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "3490:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2616_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3502:6:13",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3490:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2616_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 2782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3490:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2783,
														"name": "_FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "3519:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3490:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2792,
													"nodeType": "Block",
													"src": "3592:37:13",
													"statements": [
														{
															"expression": {
																"id": 2790,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2774,
																"src": "3613:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 2778,
															"id": 2791,
															"nodeType": "Return",
															"src": "3606:12:13"
														}
													]
												},
												"id": 2793,
												"nodeType": "IfStatement",
												"src": "3486:143:13",
												"trueBody": {
													"id": 2789,
													"nodeType": "Block",
													"src": "3539:47:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2786,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2772,
																		"src": "3569:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 2785,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2696,
																	"src": "3560:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2616_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3560:15:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2778,
															"id": 2788,
															"nodeType": "Return",
															"src": "3553:22:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2769,
										"nodeType": "StructuredDocumentation",
										"src": "3242:120:13",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 2795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3376:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3409:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "3397:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2771,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2770,
														"name": "ShortString",
														"nameLocations": [
															"3397:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2616,
														"src": "3397:11:13"
													},
													"referencedDeclaration": 2616,
													"src": "3397:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3431:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "3416:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3416:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3396:41:13"
									},
									"returnParameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "3461:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3461:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:15:13"
									},
									"scope": 2827,
									"src": "3367:268:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "4108:175:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2808,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "4141:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 2806,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "4122:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2616_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4134:6:13",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4122:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2616_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 2809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4122:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2810,
														"name": "_FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "4151:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4122:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2823,
													"nodeType": "Block",
													"src": "4226:51:13",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2819,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2801,
																			"src": "4253:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4247:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2817,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4247:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4247:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4260:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4247:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2805,
															"id": 2822,
															"nodeType": "Return",
															"src": "4240:26:13"
														}
													]
												},
												"id": 2824,
												"nodeType": "IfStatement",
												"src": "4118:159:13",
												"trueBody": {
													"id": 2816,
													"nodeType": "Block",
													"src": "4171:49:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2799,
																		"src": "4203:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 2812,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2728,
																	"src": "4192:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2616_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4192:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2805,
															"id": 2815,
															"nodeType": "Return",
															"src": "4185:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2796,
										"nodeType": "StructuredDocumentation",
										"src": "3641:357:13",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4012:22:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4047:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "4035:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2797,
														"name": "ShortString",
														"nameLocations": [
															"4035:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2616,
														"src": "4035:11:13"
													},
													"referencedDeclaration": 2616,
													"src": "4035:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2616",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4069:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "4054:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4054:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4034:41:13"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "4099:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4098:9:13"
									},
									"scope": 2827,
									"src": "4003:280:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2828,
							"src": "1235:3050:13",
							"usedErrors": [
								2624,
								2626
							]
						}
					],
					"src": "106:4180:13"
				},
				"id": 13
			},
			"SignedMath.sol": {
				"ast": {
					"absolutePath": "SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2932
						]
					},
					"id": 2933,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2829,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2830,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2932,
							"linearizedBaseContracts": [
								2932
							],
							"name": "SignedMath",
							"nameLocation": "223:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "375:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2840,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "392:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2841,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2835,
															"src": "396:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2844,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "404:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:14",
													"trueExpression": {
														"id": 2843,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "400:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2839,
												"id": 2846,
												"nodeType": "Return",
												"src": "385:20:14"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "324:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2832,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "334:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2834,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:14"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "367:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2837,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:14"
									},
									"scope": 2932,
									"src": "311:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "554:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2858,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2851,
															"src": "571:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2859,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "575:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2862,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2853,
														"src": "583:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:14",
													"trueExpression": {
														"id": 2861,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2851,
														"src": "579:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2857,
												"id": 2864,
												"nodeType": "Return",
												"src": "564:20:14"
											}
										]
									},
									"documentation": {
										"id": 2849,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "503:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2850,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "513:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2852,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:14"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "546:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2855,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:14"
									},
									"scope": 2932,
									"src": "490:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2909,
										"nodeType": "Block",
										"src": "796:162:14",
										"statements": [
											{
												"assignments": [
													2877
												],
												"declarations": [
													{
														"constant": false,
														"id": 2877,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2909,
														"src": "858:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2876,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2890,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2878,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2869,
																	"src": "870:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2879,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "874:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2881,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2882,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2869,
																				"src": "881:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2883,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "885:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2885,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2888,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2891,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "910:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2896,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "930:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2894,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2892,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2901,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2869,
																				"src": "944:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2902,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "948:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2904,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2906,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2875,
												"id": 2908,
												"nodeType": "Return",
												"src": "903:48:14"
											}
										]
									},
									"documentation": {
										"id": 2867,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "745:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2868,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "755:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2870,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:14"
									},
									"returnParameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "788:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2873,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:14"
									},
									"scope": 2932,
									"src": "728:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "1102:158:14",
										"statements": [
											{
												"id": 2929,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2920,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2913,
																			"src": "1227:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:14",
																		"subExpression": {
																			"id": 2924,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2913,
																			"src": "1241:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:14",
																	"trueExpression": {
																		"id": 2923,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2913,
																		"src": "1236:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2918,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2917,
														"id": 2928,
														"nodeType": "Return",
														"src": "1212:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2911,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "1060:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2912,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:14"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "1093:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:14"
									},
									"scope": 2932,
									"src": "1047:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2933,
							"src": "215:1047:14",
							"usedErrors": []
						}
					],
					"src": "109:1154:14"
				},
				"id": 14
			},
			"StorageSlot.sol": {
				"ast": {
					"absolutePath": "StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							3042
						]
					},
					"id": 3043,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2934,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2935,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:15",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 3042,
							"linearizedBaseContracts": [
								3042
							],
							"name": "StorageSlot",
							"nameLocation": "1428:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2938,
									"members": [
										{
											"constant": false,
											"id": 2937,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1483:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2938,
											"src": "1475:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2936,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1475:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1453:11:15",
									"nodeType": "StructDefinition",
									"scope": 3042,
									"src": "1446:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2941,
									"members": [
										{
											"constant": false,
											"id": 2940,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1535:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2941,
											"src": "1530:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2939,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1508:11:15",
									"nodeType": "StructDefinition",
									"scope": 3042,
									"src": "1501:46:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2944,
									"members": [
										{
											"constant": false,
											"id": 2943,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2944,
											"src": "1582:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2942,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1560:11:15",
									"nodeType": "StructDefinition",
									"scope": 3042,
									"src": "1553:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2947,
									"members": [
										{
											"constant": false,
											"id": 2946,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1645:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2947,
											"src": "1637:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1615:11:15",
									"nodeType": "StructDefinition",
									"scope": 3042,
									"src": "1608:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2950,
									"members": [
										{
											"constant": false,
											"id": 2949,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1698:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2950,
											"src": "1691:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2948,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1691:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1670:10:15",
									"nodeType": "StructDefinition",
									"scope": 3042,
									"src": "1663:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2953,
									"members": [
										{
											"constant": false,
											"id": 2952,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1749:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2953,
											"src": "1743:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2951,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1743:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1723:9:15",
									"nodeType": "StructDefinition",
									"scope": 3042,
									"src": "1716:45:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "1943:106:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2005:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:14:15",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2029:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2960,
														"isOffset": false,
														"isSlot": true,
														"src": "2019:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2956,
														"isOffset": false,
														"isSlot": false,
														"src": "2029:4:15",
														"valueSize": 1
													}
												],
												"id": 2962,
												"nodeType": "InlineAssembly",
												"src": "1996:47:15"
											}
										]
									},
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "1767:87:15",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1868:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1891:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "1883:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2955,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:14:15"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1940:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "1920:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2938_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2958,
														"name": "AddressSlot",
														"nameLocations": [
															"1920:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2938,
														"src": "1920:11:15"
													},
													"referencedDeclaration": 2938,
													"src": "1920:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2938_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:23:15"
									},
									"scope": 3042,
									"src": "1859:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "2231:106:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2293:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2307:14:15",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2317:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2971,
														"isOffset": false,
														"isSlot": true,
														"src": "2307:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2967,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:4:15",
														"valueSize": 1
													}
												],
												"id": 2973,
												"nodeType": "InlineAssembly",
												"src": "2284:47:15"
											}
										]
									},
									"documentation": {
										"id": 2965,
										"nodeType": "StructuredDocumentation",
										"src": "2055:87:15",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2156:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2179:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "2171:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:14:15"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2228:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "2208:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2941_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2969,
														"name": "BooleanSlot",
														"nameLocations": [
															"2208:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2941,
														"src": "2208:11:15"
													},
													"referencedDeclaration": 2941,
													"src": "2208:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2941_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:23:15"
									},
									"scope": 3042,
									"src": "2147:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "2519:106:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2581:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:14:15",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2605:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2982,
														"isOffset": false,
														"isSlot": true,
														"src": "2595:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2978,
														"isOffset": false,
														"isSlot": false,
														"src": "2605:4:15",
														"valueSize": 1
													}
												],
												"id": 2984,
												"nodeType": "InlineAssembly",
												"src": "2572:47:15"
											}
										]
									},
									"documentation": {
										"id": 2976,
										"nodeType": "StructuredDocumentation",
										"src": "2343:87:15",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2444:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2467:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2459:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2977,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:14:15"
									},
									"returnParameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2516:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2496:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2944_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2980,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2496:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2944,
														"src": "2496:11:15"
													},
													"referencedDeclaration": 2944,
													"src": "2496:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2944_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:23:15"
									},
									"scope": 3042,
									"src": "2435:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "2807:106:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2869:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:14:15",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2893:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2993,
														"isOffset": false,
														"isSlot": true,
														"src": "2883:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2989,
														"isOffset": false,
														"isSlot": false,
														"src": "2893:4:15",
														"valueSize": 1
													}
												],
												"id": 2995,
												"nodeType": "InlineAssembly",
												"src": "2860:47:15"
											}
										]
									},
									"documentation": {
										"id": 2987,
										"nodeType": "StructuredDocumentation",
										"src": "2631:87:15",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2732:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2755:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "2747:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2988,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:14:15"
									},
									"returnParameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2804:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "2784:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2947_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2991,
														"name": "Uint256Slot",
														"nameLocations": [
															"2784:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2947,
														"src": "2784:11:15"
													},
													"referencedDeclaration": 2947,
													"src": "2784:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2947_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:23:15"
									},
									"scope": 3042,
									"src": "2723:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "3092:106:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3154:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3168:14:15",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3178:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 3004,
														"isOffset": false,
														"isSlot": true,
														"src": "3168:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3000,
														"isOffset": false,
														"isSlot": false,
														"src": "3178:4:15",
														"valueSize": 1
													}
												],
												"id": 3006,
												"nodeType": "InlineAssembly",
												"src": "3145:47:15"
											}
										]
									},
									"documentation": {
										"id": 2998,
										"nodeType": "StructuredDocumentation",
										"src": "2919:86:15",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 3008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3019:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3041:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "3033:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2999,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:14:15"
									},
									"returnParameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3089:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "3070:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2950_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 3003,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3002,
														"name": "StringSlot",
														"nameLocations": [
															"3070:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "3070:10:15"
													},
													"referencedDeclaration": 2950,
													"src": "3070:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2950_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:22:15"
									},
									"scope": 3042,
									"src": "3010:188:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "3400:112:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3462:44:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3476:20:15",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3486:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 3015,
														"isOffset": false,
														"isSlot": true,
														"src": "3476:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3011,
														"isOffset": false,
														"isSlot": true,
														"src": "3486:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 3017,
												"nodeType": "InlineAssembly",
												"src": "3453:53:15"
											}
										]
									},
									"documentation": {
										"id": 3009,
										"nodeType": "StructuredDocumentation",
										"src": "3204:101:15",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3319:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3348:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "3333:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3010,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3333:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:22:15"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3397:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "3378:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2950_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 3014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3013,
														"name": "StringSlot",
														"nameLocations": [
															"3378:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2950,
														"src": "3378:10:15"
													},
													"referencedDeclaration": 2950,
													"src": "3378:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2950_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:15"
									},
									"scope": 3042,
									"src": "3310:202:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3029,
										"nodeType": "Block",
										"src": "3688:106:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:14:15",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3774:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 3026,
														"isOffset": false,
														"isSlot": true,
														"src": "3764:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3022,
														"isOffset": false,
														"isSlot": false,
														"src": "3774:4:15",
														"valueSize": 1
													}
												],
												"id": 3028,
												"nodeType": "InlineAssembly",
												"src": "3741:47:15"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "3518:85:15",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 3030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3617:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3638:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "3630:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3021,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:14:15"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3685:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "3667:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2953_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 3025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3024,
														"name": "BytesSlot",
														"nameLocations": [
															"3667:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2953,
														"src": "3667:9:15"
													},
													"referencedDeclaration": 2953,
													"src": "3667:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2953_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:21:15"
									},
									"scope": 3042,
									"src": "3608:186:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3040,
										"nodeType": "Block",
										"src": "3991:112:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4053:44:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:20:15",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4077:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 3037,
														"isOffset": false,
														"isSlot": true,
														"src": "4067:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 3033,
														"isOffset": false,
														"isSlot": true,
														"src": "4077:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 3039,
												"nodeType": "InlineAssembly",
												"src": "4044:53:15"
											}
										]
									},
									"documentation": {
										"id": 3031,
										"nodeType": "StructuredDocumentation",
										"src": "3800:99:15",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 3041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3913:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3940:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "3926:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:21:15"
									},
									"returnParameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3988:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "3970:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2953_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 3036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3035,
														"name": "BytesSlot",
														"nameLocations": [
															"3970:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2953,
														"src": "3970:9:15"
													},
													"referencedDeclaration": 2953,
													"src": "3970:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2953_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:21:15"
									},
									"scope": 3042,
									"src": "3904:199:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3043,
							"src": "1420:2685:15",
							"usedErrors": []
						}
					],
					"src": "193:3913:15"
				},
				"id": 15
			},
			"Strings.sol": {
				"ast": {
					"absolutePath": "Strings.sol",
					"exportedSymbols": {
						"Math": [
							2498
						],
						"SignedMath": [
							2932
						],
						"Strings": [
							3271
						]
					},
					"id": 3272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3044,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:16"
						},
						{
							"absolutePath": "Math.sol",
							"file": "./Math.sol",
							"id": 3045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3272,
							"sourceUnit": 2499,
							"src": "126:20:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SignedMath.sol",
							"file": "./SignedMath.sol",
							"id": 3046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3272,
							"sourceUnit": 2933,
							"src": "147:26:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3047,
								"nodeType": "StructuredDocumentation",
								"src": "175:34:16",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 3271,
							"linearizedBaseContracts": [
								3271
							],
							"name": "Strings",
							"nameLocation": "218:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3050,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "257:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 3271,
									"src": "232:54:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 3048,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 3049,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "268:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3053,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "315:15:16",
									"nodeType": "VariableDeclaration",
									"scope": 3271,
									"src": "292:43:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3051,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "292:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 3052,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "333:2:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3100,
										"nodeType": "Block",
										"src": "508:625:16",
										"statements": [
											{
												"id": 3099,
												"nodeType": "UncheckedBlock",
												"src": "518:609:16",
												"statements": [
													{
														"assignments": [
															3062
														],
														"declarations": [
															{
																"constant": false,
																"id": 3062,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "550:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3099,
																"src": "542:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3061,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "542:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3069,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3056,
																		"src": "570:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3063,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2498,
																		"src": "559:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2498_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "564:5:16",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2335,
																	"src": "559:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 3066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "559:17:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "579:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "559:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "542:38:16"
													},
													{
														"assignments": [
															3071
														],
														"declarations": [
															{
																"constant": false,
																"id": 3071,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "608:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3099,
																"src": "594:20:16",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 3070,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "594:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3076,
														"initialValue": {
															"arguments": [
																{
																	"id": 3074,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3062,
																	"src": "628:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "617:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 3072,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "621:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "617:18:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "594:41:16"
													},
													{
														"assignments": [
															3078
														],
														"declarations": [
															{
																"constant": false,
																"id": 3078,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "657:3:16",
																"nodeType": "VariableDeclaration",
																"scope": 3099,
																"src": "649:11:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3077,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "649:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3079,
														"nodeType": "VariableDeclarationStatement",
														"src": "649:11:16"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "730:67:16",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "748:35:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "759:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "771:2:16",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "775:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "767:15:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "755:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "755:28:16"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:16"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 3071,
																"isOffset": false,
																"isSlot": false,
																"src": "759:6:16",
																"valueSize": 1
															},
															{
																"declaration": 3062,
																"isOffset": false,
																"isSlot": false,
																"src": "775:6:16",
																"valueSize": 1
															},
															{
																"declaration": 3078,
																"isOffset": false,
																"isSlot": false,
																"src": "748:3:16",
																"valueSize": 1
															}
														],
														"id": 3080,
														"nodeType": "InlineAssembly",
														"src": "721:76:16"
													},
													{
														"body": {
															"id": 3095,
															"nodeType": "Block",
															"src": "823:267:16",
															"statements": [
																{
																	"expression": {
																		"id": 3083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "841:5:16",
																		"subExpression": {
																			"id": 3082,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3078,
																			"src": "841:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3084,
																	"nodeType": "ExpressionStatement",
																	"src": "841:5:16"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "924:84:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "954:3:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "968:5:16"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "975:2:16",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "964:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "964:14:16"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "980:8:16"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "959:4:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "959:30:16"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "946:7:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "946:44:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "946:44:16"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 3050,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "980:8:16",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3078,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "954:3:16",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3056,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "968:5:16",
																			"valueSize": 1
																		}
																	],
																	"id": 3085,
																	"nodeType": "InlineAssembly",
																	"src": "915:93:16"
																},
																{
																	"expression": {
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3086,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3056,
																			"src": "1025:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1034:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1025:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3089,
																	"nodeType": "ExpressionStatement",
																	"src": "1025:11:16"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3090,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3056,
																			"src": "1058:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1067:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1058:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3094,
																	"nodeType": "IfStatement",
																	"src": "1054:21:16",
																	"trueBody": {
																		"id": 3093,
																		"nodeType": "Break",
																		"src": "1070:5:16"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "817:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 3096,
														"nodeType": "WhileStatement",
														"src": "810:280:16"
													},
													{
														"expression": {
															"id": 3097,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "1110:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 3060,
														"id": 3098,
														"nodeType": "Return",
														"src": "1103:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3054,
										"nodeType": "StructuredDocumentation",
										"src": "342:90:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 3101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "446:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "463:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "455:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:15:16"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "493:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "493:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:15:16"
									},
									"scope": 3271,
									"src": "437:696:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3128,
										"nodeType": "Block",
										"src": "1303:203:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3104,
																			"src": "1394:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1402:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1394:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 3117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1412:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 3118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1394:20:16",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 3116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3122,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "1460:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 3120,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2932,
																					"src": "1445:10:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2932_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 3121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1456:3:16",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2931,
																				"src": "1445:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 3123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1445:21:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3119,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3101,
																			3129
																		],
																		"referencedDeclaration": 3101,
																		"src": "1436:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 3124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1436:31:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 3111,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1356:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1360:12:16",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1356:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1356:129:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1332:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3109,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1332:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 3126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:167:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3108,
												"id": 3127,
												"nodeType": "Return",
												"src": "1313:186:16"
											}
										]
									},
									"documentation": {
										"id": 3102,
										"nodeType": "StructuredDocumentation",
										"src": "1139:89:16",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 3129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1242:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1258:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3129,
												"src": "1251:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:14:16"
									},
									"returnParameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3129,
												"src": "1288:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1288:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:15:16"
									},
									"scope": 3271,
									"src": "1233:273:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3148,
										"nodeType": "Block",
										"src": "1685:100:16",
										"statements": [
											{
												"id": 3147,
												"nodeType": "UncheckedBlock",
												"src": "1695:84:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 3138,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3132,
																	"src": "1738:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 3141,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3132,
																				"src": "1757:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3139,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "1745:4:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2498_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 3140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1750:6:16",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2458,
																			"src": "1745:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1745:18:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 3143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1766:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1745:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3137,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3149,
																	3225,
																	3245
																],
																"referencedDeclaration": 3225,
																"src": "1726:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1726:42:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 3136,
														"id": 3146,
														"nodeType": "Return",
														"src": "1719:49:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3130,
										"nodeType": "StructuredDocumentation",
										"src": "1512:94:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 3149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1620:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1640:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "1632:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:15:16"
									},
									"returnParameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3149,
												"src": "1670:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1670:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:15:16"
									},
									"scope": 3271,
									"src": "1611:174:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3224,
										"nodeType": "Block",
										"src": "2020:347:16",
										"statements": [
											{
												"assignments": [
													3160
												],
												"declarations": [
													{
														"constant": false,
														"id": 3160,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2043:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3224,
														"src": "2030:19:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3159,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2030:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3169,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2062:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3164,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "2066:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2062:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 3166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2075:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2062:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2052:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2056:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2030:47:16"
											},
											{
												"expression": {
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3170,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "2087:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3172,
														"indexExpression": {
															"hexValue": "30",
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2094:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2087:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2099:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2087:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "2087:15:16"
											},
											{
												"expression": {
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3176,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "2112:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3178,
														"indexExpression": {
															"hexValue": "31",
															"id": 3177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2119:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2112:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 3179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2124:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2112:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3181,
												"nodeType": "ExpressionStatement",
												"src": "2112:15:16"
											},
											{
												"body": {
													"id": 3210,
													"nodeType": "Block",
													"src": "2182:83:16",
													"statements": [
														{
															"expression": {
																"id": 3204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3196,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3160,
																		"src": "2196:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3198,
																	"indexExpression": {
																		"id": 3197,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3183,
																		"src": "2203:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2196:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3199,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3050,
																		"src": "2208:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3203,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3200,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "2217:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2225:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2217:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2208:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2196:33:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3205,
															"nodeType": "ExpressionStatement",
															"src": "2196:33:16"
														},
														{
															"expression": {
																"id": 3208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "2243:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 3207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2253:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2243:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3209,
															"nodeType": "ExpressionStatement",
															"src": "2243:11:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3190,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3183,
														"src": "2170:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2174:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2170:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3211,
												"initializationExpression": {
													"assignments": [
														3183
													],
													"declarations": [
														{
															"constant": false,
															"id": 3183,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2150:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3211,
															"src": "2142:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3182,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2142:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3189,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3185,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "2158:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2167:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2154:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2142:26:16"
												},
												"loopExpression": {
													"expression": {
														"id": 3194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2177:3:16",
														"subExpression": {
															"id": 3193,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3183,
															"src": "2179:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3195,
													"nodeType": "ExpressionStatement",
													"src": "2177:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2137:128:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3213,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3152,
																"src": "2282:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2291:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2282:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2294:34:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 3212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2274:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3218,
												"nodeType": "ExpressionStatement",
												"src": "2274:55:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3221,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "2353:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2346:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3219,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2346:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 3222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2346:14:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3158,
												"id": 3223,
												"nodeType": "Return",
												"src": "2339:21:16"
											}
										]
									},
									"documentation": {
										"id": 3150,
										"nodeType": "StructuredDocumentation",
										"src": "1791:112:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 3225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1917:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1946:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "1938:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1969:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "1961:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:53:16"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "2005:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2005:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2004:15:16"
									},
									"scope": 3271,
									"src": "1908:459:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3244,
										"nodeType": "Block",
										"src": "2592:76:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3238,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3228,
																			"src": "2637:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2629:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3236,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2629:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2629:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2621:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3234,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2621:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2621:22:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3241,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3053,
															"src": "2645:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 3233,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3149,
															3225,
															3245
														],
														"referencedDeclaration": 3225,
														"src": "2609:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2609:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3232,
												"id": 3243,
												"nodeType": "Return",
												"src": "2602:59:16"
											}
										]
									},
									"documentation": {
										"id": 3226,
										"nodeType": "StructuredDocumentation",
										"src": "2373:141:16",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 3245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2528:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3228,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2548:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "2540:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:14:16"
									},
									"returnParameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "2577:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2577:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:15:16"
									},
									"scope": 3271,
									"src": "2519:149:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3269,
										"nodeType": "Block",
										"src": "2845:66:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3258,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3248,
																		"src": "2878:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2872:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3256,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2872:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 3259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2872:8:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3255,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2862:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2862:19:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3264,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3250,
																		"src": "2901:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2895:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3262,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2895:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2895:8:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3261,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2885:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2885:19:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2862:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3254,
												"id": 3268,
												"nodeType": "Return",
												"src": "2855:49:16"
											}
										]
									},
									"documentation": {
										"id": 3246,
										"nodeType": "StructuredDocumentation",
										"src": "2674:66:16",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 3270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2754:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2783:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "2769:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2769:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2808:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "2794:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2794:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:56:16"
									},
									"returnParameters": {
										"id": 3254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3270,
												"src": "2839:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2839:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2838:6:16"
									},
									"scope": 3271,
									"src": "2745:166:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3272,
							"src": "210:2703:16",
							"usedErrors": []
						}
					],
					"src": "101:2813:16"
				},
				"id": 16
			},
			"token.sol": {
				"ast": {
					"absolutePath": "token.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Counters": [
							95
						],
						"ECDSA": [
							461
						],
						"EIP712": [
							665
						],
						"ERC20": [
							1252
						],
						"ERC20Burnable": [
							1296
						],
						"ERC20Permit": [
							1468
						],
						"IERC20": [
							1546
						],
						"IERC20Metadata": [
							1571
						],
						"IERC20Permit": [
							1607
						],
						"IERC5267": [
							1632
						],
						"Math": [
							2498
						],
						"Ownable": [
							2611
						],
						"Phoenix": [
							3308
						],
						"ShortString": [
							2616
						],
						"ShortStrings": [
							2827
						],
						"SignedMath": [
							2932
						],
						"StorageSlot": [
							3042
						],
						"Strings": [
							3271
						]
					},
					"id": 3309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:17"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 3274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3309,
							"sourceUnit": 1253,
							"src": "107:21:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20Burnable.sol",
							"file": "./ERC20Burnable.sol",
							"id": 3275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3309,
							"sourceUnit": 1297,
							"src": "129:29:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20Permit.sol",
							"file": "./ERC20Permit.sol",
							"id": 3276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3309,
							"sourceUnit": 1469,
							"src": "159:27:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 3277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3309,
							"sourceUnit": 2612,
							"src": "187:23:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3278,
										"name": "ERC20",
										"nameLocations": [
											"232:5:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1252,
										"src": "232:5:17"
									},
									"id": 3279,
									"nodeType": "InheritanceSpecifier",
									"src": "232:5:17"
								},
								{
									"baseName": {
										"id": 3280,
										"name": "ERC20Burnable",
										"nameLocations": [
											"239:13:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1296,
										"src": "239:13:17"
									},
									"id": 3281,
									"nodeType": "InheritanceSpecifier",
									"src": "239:13:17"
								},
								{
									"baseName": {
										"id": 3282,
										"name": "ERC20Permit",
										"nameLocations": [
											"254:11:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1468,
										"src": "254:11:17"
									},
									"id": 3283,
									"nodeType": "InheritanceSpecifier",
									"src": "254:11:17"
								},
								{
									"baseName": {
										"id": 3284,
										"name": "Ownable",
										"nameLocations": [
											"267:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2611,
										"src": "267:7:17"
									},
									"id": 3285,
									"nodeType": "InheritanceSpecifier",
									"src": "267:7:17"
								}
							],
							"canonicalName": "Phoenix",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3308,
							"linearizedBaseContracts": [
								3308,
								2611,
								1468,
								665,
								1632,
								1607,
								1296,
								1252,
								1571,
								1546,
								21
							],
							"name": "Phoenix",
							"nameLocation": "221:7:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3306,
										"nodeType": "Block",
										"src": "343:70:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "359:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "363:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "359:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030303030303030303030",
																"id": 3298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "371:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000_by_1",
																	"typeString": "int_const 100000000000000"
																},
																"value": "100000000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "389:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3300,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "395:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "395:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "389:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "371:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3295,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "353:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "353:53:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3305,
												"nodeType": "ExpressionStatement",
												"src": "353:53:17"
											}
										]
									},
									"id": 3307,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50686f656e6978",
													"id": 3288,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "301:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_33331bda9af1a29e590967a765862b499b7f5a29bd00ad4f34f276fa04825d60",
														"typeString": "literal_string \"Phoenix\""
													},
													"value": "Phoenix"
												},
												{
													"hexValue": "50484e58",
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "312:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5de4e52e5fd8fcbfded8da016a7fcab10b955de6a2f3dc9c2d6a533f04dd7393",
														"typeString": "literal_string \"PHNX\""
													},
													"value": "PHNX"
												}
											],
											"id": 3290,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3287,
												"name": "ERC20",
												"nameLocations": [
													"295:5:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "295:5:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "295:24:17"
										},
										{
											"arguments": [
												{
													"hexValue": "50686f656e6978",
													"id": 3292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "332:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_33331bda9af1a29e590967a765862b499b7f5a29bd00ad4f34f276fa04825d60",
														"typeString": "literal_string \"Phoenix\""
													},
													"value": "Phoenix"
												}
											],
											"id": 3293,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3291,
												"name": "ERC20Permit",
												"nameLocations": [
													"320:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1468,
												"src": "320:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "320:22:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:17"
									},
									"returnParameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:0:17"
									},
									"scope": 3308,
									"src": "281:132:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3309,
							"src": "212:203:17",
							"usedErrors": [
								2624,
								2626
							]
						}
					],
					"src": "81:335:17"
				},
				"id": 17
			}
		}
	}
}